-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ban_interface_p_mul_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (127 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of ban_interface_p_mul_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal bitcast_ln173_fu_97_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln173_reg_187 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln173_3_fu_112_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln173_3_reg_192 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln173_4_fu_127_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln173_4_reg_197 : STD_LOGIC_VECTOR (31 downto 0);
    signal aux_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal aux_ce0 : STD_LOGIC;
    signal aux_we0 : STD_LOGIC;
    signal aux_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_ap_start : STD_LOGIC;
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_ap_done : STD_LOGIC;
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_ap_idle : STD_LOGIC;
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_ap_ready : STD_LOGIC;
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_aux_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_aux_ce0 : STD_LOGIC;
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_aux_we0 : STD_LOGIC;
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_aux_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_ap_start : STD_LOGIC;
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_ap_done : STD_LOGIC;
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_ap_idle : STD_LOGIC;
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_ap_ready : STD_LOGIC;
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_aux_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_aux_ce0 : STD_LOGIC;
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_num_res_06_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_num_res_06_out_ap_vld : STD_LOGIC;
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_num_res3_05_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_num_res3_05_out_ap_vld : STD_LOGIC;
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_num_res4_04_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_num_res4_04_out_ap_vld : STD_LOGIC;
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal trunc_ln_fu_87_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln173_3_fu_102_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln173_4_fu_117_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component ban_interface_p_mul_1_Pipeline_VITIS_LOOP_169_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        bitcast_ln173 : IN STD_LOGIC_VECTOR (31 downto 0);
        bitcast_ln173_3 : IN STD_LOGIC_VECTOR (31 downto 0);
        bitcast_ln173_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        aux_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        aux_ce0 : OUT STD_LOGIC;
        aux_we0 : OUT STD_LOGIC;
        aux_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ban_interface_p_mul_1_Pipeline_VITIS_LOOP_187_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        aux_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        aux_ce0 : OUT STD_LOGIC;
        aux_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        num_res_06_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        num_res_06_out_ap_vld : OUT STD_LOGIC;
        num_res3_05_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        num_res3_05_out_ap_vld : OUT STD_LOGIC;
        num_res4_04_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        num_res4_04_out_ap_vld : OUT STD_LOGIC );
    end component;


    component ban_interface_p_mul_1_aux_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    aux_U : component ban_interface_p_mul_1_aux_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => aux_address0,
        ce0 => aux_ce0,
        we0 => aux_we0,
        d0 => grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_aux_d0,
        q0 => aux_q0);

    grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66 : component ban_interface_p_mul_1_Pipeline_VITIS_LOOP_169_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_ap_start,
        ap_done => grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_ap_done,
        ap_idle => grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_ap_idle,
        ap_ready => grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_ap_ready,
        p_read => p_read,
        p_read1 => p_read1,
        bitcast_ln173 => bitcast_ln173_reg_187,
        bitcast_ln173_3 => bitcast_ln173_3_reg_192,
        bitcast_ln173_4 => bitcast_ln173_4_reg_197,
        aux_address0 => grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_aux_address0,
        aux_ce0 => grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_aux_ce0,
        aux_we0 => grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_aux_we0,
        aux_d0 => grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_aux_d0);

    grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79 : component ban_interface_p_mul_1_Pipeline_VITIS_LOOP_187_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_ap_start,
        ap_done => grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_ap_done,
        ap_idle => grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_ap_idle,
        ap_ready => grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_ap_ready,
        aux_address0 => grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_aux_address0,
        aux_ce0 => grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_aux_ce0,
        aux_q0 => aux_q0,
        num_res_06_out => grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_num_res_06_out,
        num_res_06_out_ap_vld => grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_num_res_06_out_ap_vld,
        num_res3_05_out => grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_num_res3_05_out,
        num_res3_05_out_ap_vld => grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_num_res3_05_out_ap_vld,
        num_res4_04_out => grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_num_res4_04_out,
        num_res4_04_out_ap_vld => grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_num_res4_04_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_ap_ready = ap_const_logic_1)) then 
                    grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_ap_ready = ap_const_logic_1)) then 
                    grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                bitcast_ln173_3_reg_192 <= bitcast_ln173_3_fu_112_p1;
                bitcast_ln173_4_reg_197 <= bitcast_ln173_4_fu_127_p1;
                bitcast_ln173_reg_187 <= bitcast_ln173_fu_97_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_ap_done, grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_ap_done)
    begin
        if ((grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_ap_done)
    begin
        if ((grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_num_res_06_out;
    ap_return_1 <= grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_num_res3_05_out;
    ap_return_2 <= grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_num_res4_04_out;

    aux_address0_assign_proc : process(grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_aux_address0, grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_aux_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            aux_address0 <= grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_aux_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            aux_address0 <= grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_aux_address0;
        else 
            aux_address0 <= "XXX";
        end if; 
    end process;


    aux_ce0_assign_proc : process(grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_aux_ce0, grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_aux_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            aux_ce0 <= grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_aux_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            aux_ce0 <= grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_aux_ce0;
        else 
            aux_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    aux_we0_assign_proc : process(grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_aux_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            aux_we0 <= grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_aux_we0;
        else 
            aux_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln173_3_fu_112_p1 <= trunc_ln173_3_fu_102_p4;
    bitcast_ln173_4_fu_127_p1 <= trunc_ln173_4_fu_117_p4;
    bitcast_ln173_fu_97_p1 <= trunc_ln_fu_87_p4;
    grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_ap_start <= grp_p_mul_1_Pipeline_VITIS_LOOP_169_1_fu_66_ap_start_reg;
    grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_ap_start <= grp_p_mul_1_Pipeline_VITIS_LOOP_187_1_fu_79_ap_start_reg;
    trunc_ln173_3_fu_102_p4 <= p_read2(95 downto 64);
    trunc_ln173_4_fu_117_p4 <= p_read2(127 downto 96);
    trunc_ln_fu_87_p4 <= p_read2(63 downto 32);
end behav;
