// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ban_interface_ban_interface_Pipeline_VITIS_LOOP_53_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        b_op1_load,
        b_op2_load,
        res_out,
        res_out_ap_vld,
        grp_fu_7617_p_din0,
        grp_fu_7617_p_din1,
        grp_fu_7617_p_opcode,
        grp_fu_7617_p_dout0,
        grp_fu_7617_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [127:0] b_op1_load;
input  [127:0] b_op2_load;
output  [0:0] res_out;
output   res_out_ap_vld;
output  [31:0] grp_fu_7617_p_din0;
output  [31:0] grp_fu_7617_p_din1;
output  [4:0] grp_fu_7617_p_opcode;
input  [0:0] grp_fu_7617_p_dout0;
output   grp_fu_7617_p_ce;

reg ap_idle;
reg res_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln53_fu_114_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [0:0] res_reg_89;
reg   [0:0] icmp_ln53_reg_336;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln53_reg_336_pp0_iter1_reg;
wire   [31:0] trunc_ln54_fu_218_p1;
reg   [31:0] trunc_ln54_reg_340;
wire   [31:0] trunc_ln54_2_fu_234_p1;
reg   [31:0] trunc_ln54_2_reg_345;
wire   [0:0] notlhs917_fu_266_p2;
reg   [0:0] notlhs917_reg_350;
reg   [0:0] notlhs917_reg_350_pp0_iter1_reg;
wire   [0:0] notrhs918_fu_272_p2;
reg   [0:0] notrhs918_reg_355;
reg   [0:0] notrhs918_reg_355_pp0_iter1_reg;
wire   [0:0] notlhs919_fu_278_p2;
reg   [0:0] notlhs919_reg_360;
reg   [0:0] notlhs919_reg_360_pp0_iter1_reg;
wire   [0:0] notrhs920_fu_284_p2;
reg   [0:0] notrhs920_reg_365;
reg   [0:0] notrhs920_reg_365_pp0_iter1_reg;
wire   [31:0] bitcast_ln54_fu_295_p1;
wire   [31:0] bitcast_ln54_1_fu_299_p1;
wire   [0:0] res_6_fu_323_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_block_pp0_stage0;
wire    ap_loop_init;
reg   [1:0] i_fu_66;
wire   [1:0] add_ln53_fu_120_p2;
reg   [1:0] ap_sig_allocacmp_i_12;
wire    ap_block_pp0_stage0_01001;
wire   [6:0] shl_ln_fu_126_p3;
wire   [6:0] add_ln54_fu_134_p2;
wire   [6:0] add_ln54_1_fu_140_p2;
wire   [7:0] zext_ln54_3_fu_154_p1;
wire   [7:0] add_ln54_2_fu_158_p2;
wire   [127:0] zext_ln54_4_fu_164_p1;
wire   [0:0] tmp_fu_174_p3;
wire   [127:0] shl_ln54_fu_168_p2;
wire   [96:0] zext_ln54_1_fu_150_p1;
wire   [96:0] shl_ln54_1_fu_190_p2;
wire   [127:0] select_ln54_fu_182_p3;
wire   [127:0] zext_ln54_5_fu_196_p1;
wire   [127:0] sub_ln54_fu_200_p2;
wire   [127:0] and_ln54_fu_206_p2;
wire   [127:0] zext_ln54_fu_146_p1;
wire   [127:0] lshr_ln54_fu_212_p2;
wire   [127:0] and_ln54_1_fu_222_p2;
wire   [127:0] lshr_ln54_1_fu_228_p2;
wire   [7:0] tmp_s_fu_238_p4;
wire   [22:0] empty_65_fu_248_p1;
wire   [7:0] tmp_96_fu_252_p4;
wire   [22:0] empty_66_fu_262_p1;
wire   [0:0] empty_67_fu_303_p2;
wire   [0:0] empty_68_fu_307_p2;
wire   [0:0] empty_69_fu_311_p2;
wire   [0:0] empty_70_fu_317_p2;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

ban_interface_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln53_fu_114_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_66 <= add_ln53_fu_120_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_66 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        res_reg_89 <= 1'd1;
    end else if (((icmp_ln53_reg_336_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_reg_89 <= res_6_fu_323_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln53_reg_336 <= icmp_ln53_fu_114_p2;
        icmp_ln53_reg_336_pp0_iter1_reg <= icmp_ln53_reg_336;
        notlhs917_reg_350_pp0_iter1_reg <= notlhs917_reg_350;
        notlhs919_reg_360_pp0_iter1_reg <= notlhs919_reg_360;
        notrhs918_reg_355_pp0_iter1_reg <= notrhs918_reg_355;
        notrhs920_reg_365_pp0_iter1_reg <= notrhs920_reg_365;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln53_fu_114_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        notlhs917_reg_350 <= notlhs917_fu_266_p2;
        notlhs919_reg_360 <= notlhs919_fu_278_p2;
        notrhs918_reg_355 <= notrhs918_fu_272_p2;
        notrhs920_reg_365 <= notrhs920_fu_284_p2;
        trunc_ln54_2_reg_345 <= trunc_ln54_2_fu_234_p1;
        trunc_ln54_reg_340 <= trunc_ln54_fu_218_p1;
    end
end

always @ (*) begin
    if (((icmp_ln53_fu_114_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln53_reg_336 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_12 = 2'd0;
    end else begin
        ap_sig_allocacmp_i_12 = i_fu_66;
    end
end

always @ (*) begin
    if (((icmp_ln53_reg_336 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_out_ap_vld = 1'b1;
    end else begin
        res_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln53_fu_120_p2 = (ap_sig_allocacmp_i_12 + 2'd1);

assign add_ln54_1_fu_140_p2 = (shl_ln_fu_126_p3 + 7'd63);

assign add_ln54_2_fu_158_p2 = (zext_ln54_3_fu_154_p1 + 8'd1);

assign add_ln54_fu_134_p2 = (shl_ln_fu_126_p3 + 7'd32);

assign and_ln54_1_fu_222_p2 = (sub_ln54_fu_200_p2 & b_op2_load);

assign and_ln54_fu_206_p2 = (sub_ln54_fu_200_p2 & b_op1_load);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln54_1_fu_299_p1 = trunc_ln54_2_reg_345;

assign bitcast_ln54_fu_295_p1 = trunc_ln54_reg_340;

assign empty_65_fu_248_p1 = lshr_ln54_fu_212_p2[22:0];

assign empty_66_fu_262_p1 = lshr_ln54_1_fu_228_p2[22:0];

assign empty_67_fu_303_p2 = (notrhs918_reg_355_pp0_iter1_reg | notlhs917_reg_350_pp0_iter1_reg);

assign empty_68_fu_307_p2 = (notrhs920_reg_365_pp0_iter1_reg | notlhs919_reg_360_pp0_iter1_reg);

assign empty_69_fu_311_p2 = (empty_68_fu_307_p2 & empty_67_fu_303_p2);

assign empty_70_fu_317_p2 = (grp_fu_7617_p_dout0 & empty_69_fu_311_p2);

assign grp_fu_7617_p_ce = 1'b1;

assign grp_fu_7617_p_din0 = bitcast_ln54_fu_295_p1;

assign grp_fu_7617_p_din1 = bitcast_ln54_1_fu_299_p1;

assign grp_fu_7617_p_opcode = 5'd1;

assign icmp_ln53_fu_114_p2 = ((ap_sig_allocacmp_i_12 == 2'd3) ? 1'b1 : 1'b0);

assign lshr_ln54_1_fu_228_p2 = and_ln54_1_fu_222_p2 >> zext_ln54_fu_146_p1;

assign lshr_ln54_fu_212_p2 = and_ln54_fu_206_p2 >> zext_ln54_fu_146_p1;

assign notlhs917_fu_266_p2 = ((tmp_s_fu_238_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs919_fu_278_p2 = ((tmp_96_fu_252_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs918_fu_272_p2 = ((empty_65_fu_248_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs920_fu_284_p2 = ((empty_66_fu_262_p1 == 23'd0) ? 1'b1 : 1'b0);

assign res_6_fu_323_p2 = (res_reg_89 & empty_70_fu_317_p2);

assign res_out = res_reg_89;

assign select_ln54_fu_182_p3 = ((tmp_fu_174_p3[0:0] == 1'b1) ? 128'd0 : shl_ln54_fu_168_p2);

assign shl_ln54_1_fu_190_p2 = 97'd1 << zext_ln54_1_fu_150_p1;

assign shl_ln54_fu_168_p2 = 128'd1 << zext_ln54_4_fu_164_p1;

assign shl_ln_fu_126_p3 = {{ap_sig_allocacmp_i_12}, {5'd0}};

assign sub_ln54_fu_200_p2 = (select_ln54_fu_182_p3 - zext_ln54_5_fu_196_p1);

assign tmp_96_fu_252_p4 = {{lshr_ln54_1_fu_228_p2[30:23]}};

assign tmp_fu_174_p3 = add_ln54_2_fu_158_p2[32'd7];

assign tmp_s_fu_238_p4 = {{lshr_ln54_fu_212_p2[30:23]}};

assign trunc_ln54_2_fu_234_p1 = lshr_ln54_1_fu_228_p2[31:0];

assign trunc_ln54_fu_218_p1 = lshr_ln54_fu_212_p2[31:0];

assign zext_ln54_1_fu_150_p1 = add_ln54_fu_134_p2;

assign zext_ln54_3_fu_154_p1 = add_ln54_1_fu_140_p2;

assign zext_ln54_4_fu_164_p1 = add_ln54_2_fu_158_p2;

assign zext_ln54_5_fu_196_p1 = shl_ln54_1_fu_190_p2;

assign zext_ln54_fu_146_p1 = add_ln54_fu_134_p2;

endmodule //ban_interface_ban_interface_Pipeline_VITIS_LOOP_53_1
