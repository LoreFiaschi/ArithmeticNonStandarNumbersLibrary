// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ban_interface_p_mul (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        num_a_0_read,
        num_a_1_read,
        num_a_2_read,
        num_b_0_read,
        num_b_1_read,
        num_b_2_read,
        num_res_0_read,
        num_res_1_read,
        num_res_2_read,
        ap_return_0,
        ap_return_1,
        ap_return_2
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] num_a_0_read;
input  [31:0] num_a_1_read;
input  [31:0] num_a_2_read;
input  [31:0] num_b_0_read;
input  [31:0] num_b_1_read;
input  [31:0] num_b_2_read;
input  [31:0] num_res_0_read;
input  [31:0] num_res_1_read;
input  [31:0] num_res_2_read;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;
reg[31:0] ap_return_2;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] aux_address0;
reg    aux_ce0;
reg    aux_we0;
wire   [31:0] aux_q0;
wire    grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_ap_start;
wire    grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_ap_done;
wire    grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_ap_idle;
wire    grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_ap_ready;
wire   [2:0] grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_aux_address0;
wire    grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_aux_ce0;
wire    grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_aux_we0;
wire   [31:0] grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_aux_d0;
wire    grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_ap_start;
wire    grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_ap_done;
wire    grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_ap_idle;
wire    grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_ap_ready;
wire   [2:0] grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_aux_address0;
wire    grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_aux_ce0;
wire   [0:0] grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_write_flag5_0_out;
wire    grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_write_flag5_0_out_ap_vld;
wire   [31:0] grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_num_res_08_out;
wire    grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_num_res_08_out_ap_vld;
wire   [31:0] grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_num_res5_07_out;
wire    grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_num_res5_07_out_ap_vld;
wire   [0:0] grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_write_flag8_0_out;
wire    grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_write_flag8_0_out_ap_vld;
wire   [0:0] grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_write_flag_0_out;
wire    grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_write_flag_0_out_ap_vld;
wire   [31:0] grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_num_res6_06_out;
wire    grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_num_res6_06_out_ap_vld;
reg    grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire   [31:0] select_ln189_fu_157_p3;
wire   [31:0] select_ln189_1_fu_165_p3;
wire   [31:0] select_ln189_2_fu_173_p3;
reg   [31:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [31:0] ap_return_2_preg;
reg   [4:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_ap_start_reg = 1'b0;
#0 grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 32'd0;
#0 ap_return_2_preg = 32'd0;
end

ban_interface_p_mul_aux_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
aux_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(aux_address0),
    .ce0(aux_ce0),
    .we0(aux_we0),
    .d0(grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_aux_d0),
    .q0(aux_q0)
);

ban_interface_p_mul_Pipeline_VITIS_LOOP_169_1 grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_ap_start),
    .ap_done(grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_ap_done),
    .ap_idle(grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_ap_idle),
    .ap_ready(grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_ap_ready),
    .num_a_0_read(num_a_0_read),
    .num_a_1_read(num_a_1_read),
    .num_a_2_read(num_a_2_read),
    .num_b_0_read(num_b_0_read),
    .num_b_1_read(num_b_1_read),
    .num_b_2_read(num_b_2_read),
    .aux_address0(grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_aux_address0),
    .aux_ce0(grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_aux_ce0),
    .aux_we0(grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_aux_we0),
    .aux_d0(grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_aux_d0)
);

ban_interface_p_mul_Pipeline_VITIS_LOOP_187_1 grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_ap_start),
    .ap_done(grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_ap_done),
    .ap_idle(grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_ap_idle),
    .ap_ready(grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_ap_ready),
    .aux_address0(grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_aux_address0),
    .aux_ce0(grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_aux_ce0),
    .aux_q0(aux_q0),
    .write_flag5_0_out(grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_write_flag5_0_out),
    .write_flag5_0_out_ap_vld(grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_write_flag5_0_out_ap_vld),
    .num_res_08_out(grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_num_res_08_out),
    .num_res_08_out_ap_vld(grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_num_res_08_out_ap_vld),
    .num_res5_07_out(grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_num_res5_07_out),
    .num_res5_07_out_ap_vld(grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_num_res5_07_out_ap_vld),
    .write_flag8_0_out(grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_write_flag8_0_out),
    .write_flag8_0_out_ap_vld(grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_write_flag8_0_out_ap_vld),
    .write_flag_0_out(grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_write_flag_0_out),
    .write_flag_0_out_ap_vld(grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_write_flag_0_out_ap_vld),
    .num_res6_06_out(grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_num_res6_06_out),
    .num_res6_06_out_ap_vld(grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_num_res6_06_out_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_return_0_preg <= select_ln189_fu_157_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_return_1_preg <= select_ln189_1_fu_165_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_return_2_preg <= select_ln189_2_fu_173_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_ap_start_reg <= 1'b1;
        end else if ((grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_ap_ready == 1'b1)) begin
            grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_ap_start_reg <= 1'b1;
        end else if ((grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_ap_ready == 1'b1)) begin
            grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_return_0 = select_ln189_fu_157_p3;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_return_1 = select_ln189_1_fu_165_p3;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_return_2 = select_ln189_2_fu_173_p3;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        aux_address0 = grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_aux_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        aux_address0 = grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_aux_address0;
    end else begin
        aux_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        aux_ce0 = grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_aux_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        aux_ce0 = grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_aux_ce0;
    end else begin
        aux_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        aux_we0 = grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_aux_we0;
    end else begin
        aux_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_ap_start = grp_p_mul_Pipeline_VITIS_LOOP_169_1_fu_110_ap_start_reg;

assign grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_ap_start = grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_ap_start_reg;

assign select_ln189_1_fu_165_p3 = ((grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_write_flag5_0_out[0:0] == 1'b1) ? grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_num_res5_07_out : num_res_1_read);

assign select_ln189_2_fu_173_p3 = ((grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_write_flag8_0_out[0:0] == 1'b1) ? grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_num_res6_06_out : num_res_2_read);

assign select_ln189_fu_157_p3 = ((grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_write_flag_0_out[0:0] == 1'b1) ? grp_p_mul_Pipeline_VITIS_LOOP_187_1_fu_128_num_res_08_out : num_res_0_read);

endmodule //ban_interface_p_mul
