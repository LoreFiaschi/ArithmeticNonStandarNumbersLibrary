

================================================================
== Vitis HLS Report for 'operator_1_s'
================================================================
* Date:           Tue Feb  8 15:34:30 2022

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:47:39 MDT 2021)
* Project:        ban_interface
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvc1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.864 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 10 3 
3 --> 9 8 7 4 6 
4 --> 5 
5 --> 
6 --> 5 
7 --> 5 
8 --> 5 
9 --> 5 
10 --> 5 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.78>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %p_read12" [../src/ban.cpp:61]   --->   Operation 11 'read' 'p_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_read_9 = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %p_read13" [../src/ban.cpp:61]   --->   Operation 12 'read' 'p_read_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%trunc_ln61 = trunc i128 %p_read_9" [../src/ban.cpp:61]   --->   Operation 13 'trunc' 'trunc_ln61' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.99ns)   --->   "%icmp_ln61 = icmp_eq  i32 %trunc_ln61, i32 0" [../src/ban.cpp:61]   --->   Operation 14 'icmp' 'icmp_ln61' <Predicate = true> <Delay = 0.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln61 = br i1 %icmp_ln61, void %.critedge, void" [../src/ban.cpp:61]   --->   Operation 15 'br' 'br_ln61' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%trunc_ln61_s = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %p_read_9, i32 32, i32 63" [../src/ban.cpp:61]   --->   Operation 16 'partselect' 'trunc_ln61_s' <Predicate = (icmp_ln61)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%bitcast_ln61 = bitcast i32 %trunc_ln61_s" [../src/ban.cpp:61]   --->   Operation 17 'bitcast' 'bitcast_ln61' <Predicate = (icmp_ln61)> <Delay = 0.00>
ST_1 : Operation 18 [2/2] (2.78ns)   --->   "%tmp_s = fcmp_oeq  i32 %bitcast_ln61, i32 0" [../src/ban.cpp:61]   --->   Operation 18 'fcmp' 'tmp_s' <Predicate = (icmp_ln61)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 3.06>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%tmp = partselect i8 @_ssdm_op_PartSelect.i8.i128.i32.i32, i128 %p_read_9, i32 55, i32 62" [../src/ban.cpp:61]   --->   Operation 19 'partselect' 'tmp' <Predicate = (icmp_ln61)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%trunc_ln61_5 = partselect i23 @_ssdm_op_PartSelect.i23.i128.i32.i32, i128 %p_read_9, i32 32, i32 54" [../src/ban.cpp:61]   --->   Operation 20 'partselect' 'trunc_ln61_5' <Predicate = (icmp_ln61)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.84ns)   --->   "%icmp_ln61_13 = icmp_ne  i8 %tmp, i8 255" [../src/ban.cpp:61]   --->   Operation 21 'icmp' 'icmp_ln61_13' <Predicate = (icmp_ln61)> <Delay = 0.84> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (1.05ns)   --->   "%icmp_ln61_14 = icmp_eq  i23 %trunc_ln61_5, i23 0" [../src/ban.cpp:61]   --->   Operation 22 'icmp' 'icmp_ln61_14' <Predicate = (icmp_ln61)> <Delay = 1.05> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node and_ln61)   --->   "%or_ln61 = or i1 %icmp_ln61_14, i1 %icmp_ln61_13" [../src/ban.cpp:61]   --->   Operation 23 'or' 'or_ln61' <Predicate = (icmp_ln61)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/2] (2.78ns)   --->   "%tmp_s = fcmp_oeq  i32 %bitcast_ln61, i32 0" [../src/ban.cpp:61]   --->   Operation 24 'fcmp' 'tmp_s' <Predicate = (icmp_ln61)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln61 = and i1 %or_ln61, i1 %tmp_s" [../src/ban.cpp:61]   --->   Operation 25 'and' 'and_ln61' <Predicate = (icmp_ln61)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln61 = br i1 %and_ln61, void %.critedge, void %_ZNK3BaneqEf.exit" [../src/ban.cpp:61]   --->   Operation 26 'br' 'br_ln61' <Predicate = (icmp_ln61)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%trunc_ln61_2 = trunc i128 %p_read" [../src/ban.cpp:61]   --->   Operation 27 'trunc' 'trunc_ln61_2' <Predicate = (!and_ln61) | (!icmp_ln61)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.99ns)   --->   "%icmp_ln61_9 = icmp_eq  i32 %trunc_ln61_2, i32 0" [../src/ban.cpp:61]   --->   Operation 28 'icmp' 'icmp_ln61_9' <Predicate = (!and_ln61) | (!icmp_ln61)> <Delay = 0.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln61 = br i1 %icmp_ln61_9, void %.critedge8, void" [../src/ban.cpp:61]   --->   Operation 29 'br' 'br_ln61' <Predicate = (!and_ln61) | (!icmp_ln61)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%trunc_ln61_7 = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %p_read, i32 32, i32 63" [../src/ban.cpp:61]   --->   Operation 30 'partselect' 'trunc_ln61_7' <Predicate = (!and_ln61 & icmp_ln61_9) | (!icmp_ln61 & icmp_ln61_9)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%bitcast_ln61_2 = bitcast i32 %trunc_ln61_7" [../src/ban.cpp:61]   --->   Operation 31 'bitcast' 'bitcast_ln61_2' <Predicate = (!and_ln61 & icmp_ln61_9) | (!icmp_ln61 & icmp_ln61_9)> <Delay = 0.00>
ST_2 : Operation 32 [2/2] (2.78ns)   --->   "%tmp_66 = fcmp_oeq  i32 %bitcast_ln61_2, i32 0" [../src/ban.cpp:61]   --->   Operation 32 'fcmp' 'tmp_66' <Predicate = (!and_ln61 & icmp_ln61_9) | (!icmp_ln61 & icmp_ln61_9)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 3.06>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_65 = partselect i8 @_ssdm_op_PartSelect.i8.i128.i32.i32, i128 %p_read, i32 55, i32 62" [../src/ban.cpp:61]   --->   Operation 33 'partselect' 'tmp_65' <Predicate = (icmp_ln61_9)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%trunc_ln61_8 = partselect i23 @_ssdm_op_PartSelect.i23.i128.i32.i32, i128 %p_read, i32 32, i32 54" [../src/ban.cpp:61]   --->   Operation 34 'partselect' 'trunc_ln61_8' <Predicate = (icmp_ln61_9)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.84ns)   --->   "%icmp_ln61_15 = icmp_ne  i8 %tmp_65, i8 255" [../src/ban.cpp:61]   --->   Operation 35 'icmp' 'icmp_ln61_15' <Predicate = (icmp_ln61_9)> <Delay = 0.84> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (1.05ns)   --->   "%icmp_ln61_16 = icmp_eq  i23 %trunc_ln61_8, i23 0" [../src/ban.cpp:61]   --->   Operation 36 'icmp' 'icmp_ln61_16' <Predicate = (icmp_ln61_9)> <Delay = 1.05> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node and_ln61_5)   --->   "%or_ln61_2 = or i1 %icmp_ln61_16, i1 %icmp_ln61_15" [../src/ban.cpp:61]   --->   Operation 37 'or' 'or_ln61_2' <Predicate = (icmp_ln61_9)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/2] (2.78ns)   --->   "%tmp_66 = fcmp_oeq  i32 %bitcast_ln61_2, i32 0" [../src/ban.cpp:61]   --->   Operation 38 'fcmp' 'tmp_66' <Predicate = (icmp_ln61_9)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln61_5 = and i1 %or_ln61_2, i1 %tmp_66" [../src/ban.cpp:61]   --->   Operation 39 'and' 'and_ln61_5' <Predicate = (icmp_ln61_9)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%br_ln61 = br i1 %and_ln61_5, void %.critedge8, void %_ZNK3BaneqEf.exit7" [../src/ban.cpp:61]   --->   Operation 40 'br' 'br_ln61' <Predicate = (icmp_ln61_9)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (1.01ns)   --->   "%diff_p = sub i32 %trunc_ln61, i32 %trunc_ln61_2" [../src/ban.cpp:138]   --->   Operation 41 'sub' 'diff_p' <Predicate = (!and_ln61_5) | (!icmp_ln61_9)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%trunc_ln138 = trunc i32 %diff_p" [../src/ban.cpp:138]   --->   Operation 42 'trunc' 'trunc_ln138' <Predicate = (!and_ln61_5) | (!icmp_ln61_9)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.99ns)   --->   "%icmp_ln141 = icmp_sgt  i32 %diff_p, i32 2" [../src/ban.cpp:141]   --->   Operation 43 'icmp' 'icmp_ln141' <Predicate = (!and_ln61_5) | (!icmp_ln61_9)> <Delay = 0.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%br_ln141 = br i1 %icmp_ln141, void, void" [../src/ban.cpp:141]   --->   Operation 44 'br' 'br_ln141' <Predicate = (!and_ln61_5) | (!icmp_ln61_9)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.99ns)   --->   "%icmp_ln144 = icmp_slt  i32 %diff_p, i32 4294967294" [../src/ban.cpp:144]   --->   Operation 45 'icmp' 'icmp_ln144' <Predicate = (!and_ln61_5 & !icmp_ln141) | (!icmp_ln61_9 & !icmp_ln141)> <Delay = 0.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%br_ln144 = br i1 %icmp_ln144, void, void" [../src/ban.cpp:144]   --->   Operation 46 'br' 'br_ln144' <Predicate = (!and_ln61_5 & !icmp_ln141) | (!icmp_ln61_9 & !icmp_ln141)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_67 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %diff_p, i32 31" [../src/ban.cpp:148]   --->   Operation 47 'bitselect' 'tmp_67' <Predicate = (!and_ln61_5 & !icmp_ln141 & !icmp_ln144) | (!icmp_ln61_9 & !icmp_ln141 & !icmp_ln144)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%br_ln148 = br i1 %tmp_67, void, void" [../src/ban.cpp:148]   --->   Operation 48 'br' 'br_ln148' <Predicate = (!and_ln61_5 & !icmp_ln141 & !icmp_ln144) | (!icmp_ln61_9 & !icmp_ln141 & !icmp_ln144)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.54ns)   --->   "%sub_ln149 = sub i2 0, i2 %trunc_ln138" [../src/ban.cpp:149]   --->   Operation 49 'sub' 'sub_ln149' <Predicate = (!and_ln61_5 & !icmp_ln141 & !icmp_ln144 & tmp_67) | (!icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & tmp_67)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.86>
ST_4 : Operation 50 [2/2] (6.86ns)   --->   "%call_ret5 = call i128 @_sum, i128 %p_read_9, i128 %p_read, i2 %trunc_ln138" [../src/ban.cpp:151]   --->   Operation 50 'call' 'call_ret5' <Predicate = true> <Delay = 6.86> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 1.09>
ST_5 : Operation 51 [1/2] (0.47ns)   --->   "%call_ret5 = call i128 @_sum, i128 %p_read_9, i128 %p_read, i2 %trunc_ln138" [../src/ban.cpp:151]   --->   Operation 51 'call' 'call_ret5' <Predicate = (!and_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & !tmp_67) | (!and_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & !tmp_67) | (!icmp_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & !tmp_67) | (!icmp_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & !tmp_67)> <Delay = 0.47> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 52 [1/1] (0.00ns)   --->   "%call_ret2 = extractvalue i128 %call_ret5" [../src/ban.cpp:151]   --->   Operation 52 'extractvalue' 'call_ret2' <Predicate = (!and_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & !tmp_67) | (!and_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & !tmp_67) | (!icmp_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & !tmp_67) | (!icmp_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & !tmp_67)> <Delay = 0.00>
ST_5 : Operation 53 [1/1] (0.00ns)   --->   "%agg_result_1_ret = extractvalue i128 %call_ret5" [../src/ban.cpp:151]   --->   Operation 53 'extractvalue' 'agg_result_1_ret' <Predicate = (!and_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & !tmp_67) | (!and_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & !tmp_67) | (!icmp_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & !tmp_67) | (!icmp_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & !tmp_67)> <Delay = 0.00>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%agg_result_11_ret = extractvalue i128 %call_ret5" [../src/ban.cpp:151]   --->   Operation 54 'extractvalue' 'agg_result_11_ret' <Predicate = (!and_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & !tmp_67) | (!and_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & !tmp_67) | (!icmp_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & !tmp_67) | (!icmp_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & !tmp_67)> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%agg_result_12_ret = extractvalue i128 %call_ret5" [../src/ban.cpp:151]   --->   Operation 55 'extractvalue' 'agg_result_12_ret' <Predicate = (!and_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & !tmp_67) | (!and_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & !tmp_67) | (!icmp_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & !tmp_67) | (!icmp_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & !tmp_67)> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.62ns)   --->   "%br_ln151 = br void" [../src/ban.cpp:151]   --->   Operation 56 'br' 'br_ln151' <Predicate = (!and_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & !tmp_67) | (!and_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & !tmp_67) | (!icmp_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & !tmp_67) | (!icmp_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & !tmp_67)> <Delay = 0.62>
ST_5 : Operation 57 [1/2] (0.47ns)   --->   "%call_ret9 = call i128 @_sum, i128 %p_read, i128 %p_read_9, i2 %sub_ln149" [../src/ban.cpp:149]   --->   Operation 57 'call' 'call_ret9' <Predicate = (!and_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & tmp_67) | (!and_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & tmp_67) | (!icmp_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & tmp_67) | (!icmp_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & tmp_67)> <Delay = 0.47> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%call_ret = extractvalue i128 %call_ret9" [../src/ban.cpp:149]   --->   Operation 58 'extractvalue' 'call_ret' <Predicate = (!and_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & tmp_67) | (!and_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & tmp_67) | (!icmp_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & tmp_67) | (!icmp_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & tmp_67)> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%agg_result_1_ret2 = extractvalue i128 %call_ret9" [../src/ban.cpp:149]   --->   Operation 59 'extractvalue' 'agg_result_1_ret2' <Predicate = (!and_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & tmp_67) | (!and_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & tmp_67) | (!icmp_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & tmp_67) | (!icmp_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & tmp_67)> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%agg_result_11_ret3 = extractvalue i128 %call_ret9" [../src/ban.cpp:149]   --->   Operation 60 'extractvalue' 'agg_result_11_ret3' <Predicate = (!and_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & tmp_67) | (!and_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & tmp_67) | (!icmp_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & tmp_67) | (!icmp_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & tmp_67)> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%agg_result_12_ret4 = extractvalue i128 %call_ret9" [../src/ban.cpp:149]   --->   Operation 61 'extractvalue' 'agg_result_12_ret4' <Predicate = (!and_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & tmp_67) | (!and_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & tmp_67) | (!icmp_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & tmp_67) | (!icmp_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & tmp_67)> <Delay = 0.00>
ST_5 : Operation 62 [1/1] (0.62ns)   --->   "%br_ln149 = br void" [../src/ban.cpp:149]   --->   Operation 62 'br' 'br_ln149' <Predicate = (!and_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & tmp_67) | (!and_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & tmp_67) | (!icmp_ln61 & !and_ln61_5 & !icmp_ln141 & !icmp_ln144 & tmp_67) | (!icmp_ln61 & !icmp_ln61_9 & !icmp_ln141 & !icmp_ln144 & tmp_67)> <Delay = 0.62>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%agg_result_1_0 = phi i32 %bitcast_ln142, void, i32 %bitcast_ln145, void, i32 %agg_result_1_ret2, void, i32 %agg_result_1_ret, void, i32 %bitcast_ln136, void %_ZNK3BaneqEf.exit7, i32 %bitcast_ln133, void %_ZNK3BaneqEf.exit" [../src/ban.cpp:142]   --->   Operation 63 'phi' 'agg_result_1_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%agg_result_112_0 = phi i32 %bitcast_ln142_3, void, i32 %bitcast_ln145_1, void, i32 %agg_result_11_ret3, void, i32 %agg_result_11_ret, void, i32 %bitcast_ln136_3, void %_ZNK3BaneqEf.exit7, i32 %bitcast_ln133_1, void %_ZNK3BaneqEf.exit" [../src/ban.cpp:142]   --->   Operation 64 'phi' 'agg_result_112_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%agg_result_12_0 = phi i32 %bitcast_ln142_4, void, i32 %bitcast_ln145_2, void, i32 %agg_result_12_ret4, void, i32 %agg_result_12_ret, void, i32 %bitcast_ln136_4, void %_ZNK3BaneqEf.exit7, i32 %bitcast_ln133_2, void %_ZNK3BaneqEf.exit" [../src/ban.cpp:142]   --->   Operation 65 'phi' 'agg_result_12_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 66 [1/1] (0.00ns)   --->   "%agg_result_01_0 = phi i32 %trunc_ln61, void, i32 %trunc_ln61_2, void, i32 %call_ret, void, i32 %call_ret2, void, i32 %trunc_ln61, void %_ZNK3BaneqEf.exit7, i32 %trunc_ln133, void %_ZNK3BaneqEf.exit" [../src/ban.cpp:61]   --->   Operation 66 'phi' 'agg_result_01_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 67 [1/1] (0.00ns)   --->   "%mrv = insertvalue i128 <undef>, i32 %agg_result_01_0" [../src/ban.cpp:152]   --->   Operation 67 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue i128 %mrv, i32 %agg_result_1_0" [../src/ban.cpp:152]   --->   Operation 68 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 69 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue i128 %mrv_1, i32 %agg_result_112_0" [../src/ban.cpp:152]   --->   Operation 69 'insertvalue' 'mrv_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue i128 %mrv_2, i32 %agg_result_12_0" [../src/ban.cpp:152]   --->   Operation 70 'insertvalue' 'mrv_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "%ret_ln152 = ret i128 %mrv_3" [../src/ban.cpp:152]   --->   Operation 71 'ret' 'ret_ln152' <Predicate = true> <Delay = 0.00>

State 6 <SV = 3> <Delay = 6.86>
ST_6 : Operation 72 [2/2] (6.86ns)   --->   "%call_ret9 = call i128 @_sum, i128 %p_read, i128 %p_read_9, i2 %sub_ln149" [../src/ban.cpp:149]   --->   Operation 72 'call' 'call_ret9' <Predicate = true> <Delay = 6.86> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 3> <Delay = 0.62>
ST_7 : Operation 73 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %p_read, i32 32, i32 63" [../src/ban.cpp:145]   --->   Operation 73 'partselect' 'trunc_ln3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 74 [1/1] (0.00ns)   --->   "%bitcast_ln145 = bitcast i32 %trunc_ln3" [../src/ban.cpp:145]   --->   Operation 74 'bitcast' 'bitcast_ln145' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 75 [1/1] (0.00ns)   --->   "%trunc_ln145_1 = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %p_read, i32 64, i32 95" [../src/ban.cpp:145]   --->   Operation 75 'partselect' 'trunc_ln145_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 76 [1/1] (0.00ns)   --->   "%bitcast_ln145_1 = bitcast i32 %trunc_ln145_1" [../src/ban.cpp:145]   --->   Operation 76 'bitcast' 'bitcast_ln145_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 77 [1/1] (0.00ns)   --->   "%trunc_ln145_2 = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %p_read, i32 96, i32 127" [../src/ban.cpp:145]   --->   Operation 77 'partselect' 'trunc_ln145_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 78 [1/1] (0.00ns)   --->   "%bitcast_ln145_2 = bitcast i32 %trunc_ln145_2" [../src/ban.cpp:145]   --->   Operation 78 'bitcast' 'bitcast_ln145_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 79 [1/1] (0.62ns)   --->   "%br_ln145 = br void" [../src/ban.cpp:145]   --->   Operation 79 'br' 'br_ln145' <Predicate = true> <Delay = 0.62>

State 8 <SV = 3> <Delay = 0.62>
ST_8 : Operation 80 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %p_read_9, i32 32, i32 63" [../src/ban.cpp:142]   --->   Operation 80 'partselect' 'trunc_ln2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 81 [1/1] (0.00ns)   --->   "%bitcast_ln142 = bitcast i32 %trunc_ln2" [../src/ban.cpp:142]   --->   Operation 81 'bitcast' 'bitcast_ln142' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 82 [1/1] (0.00ns)   --->   "%trunc_ln142_3 = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %p_read_9, i32 64, i32 95" [../src/ban.cpp:142]   --->   Operation 82 'partselect' 'trunc_ln142_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 83 [1/1] (0.00ns)   --->   "%bitcast_ln142_3 = bitcast i32 %trunc_ln142_3" [../src/ban.cpp:142]   --->   Operation 83 'bitcast' 'bitcast_ln142_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 84 [1/1] (0.00ns)   --->   "%trunc_ln142_4 = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %p_read_9, i32 96, i32 127" [../src/ban.cpp:142]   --->   Operation 84 'partselect' 'trunc_ln142_4' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 85 [1/1] (0.00ns)   --->   "%bitcast_ln142_4 = bitcast i32 %trunc_ln142_4" [../src/ban.cpp:142]   --->   Operation 85 'bitcast' 'bitcast_ln142_4' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 86 [1/1] (0.62ns)   --->   "%br_ln142 = br void" [../src/ban.cpp:142]   --->   Operation 86 'br' 'br_ln142' <Predicate = true> <Delay = 0.62>

State 9 <SV = 3> <Delay = 0.62>
ST_9 : Operation 87 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %p_read_9, i32 32, i32 63" [../src/ban.cpp:136]   --->   Operation 87 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 88 [1/1] (0.00ns)   --->   "%bitcast_ln136 = bitcast i32 %trunc_ln" [../src/ban.cpp:136]   --->   Operation 88 'bitcast' 'bitcast_ln136' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 89 [1/1] (0.00ns)   --->   "%trunc_ln136_3 = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %p_read_9, i32 64, i32 95" [../src/ban.cpp:136]   --->   Operation 89 'partselect' 'trunc_ln136_3' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 90 [1/1] (0.00ns)   --->   "%bitcast_ln136_3 = bitcast i32 %trunc_ln136_3" [../src/ban.cpp:136]   --->   Operation 90 'bitcast' 'bitcast_ln136_3' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 91 [1/1] (0.00ns)   --->   "%trunc_ln136_4 = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %p_read_9, i32 96, i32 127" [../src/ban.cpp:136]   --->   Operation 91 'partselect' 'trunc_ln136_4' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 92 [1/1] (0.00ns)   --->   "%bitcast_ln136_4 = bitcast i32 %trunc_ln136_4" [../src/ban.cpp:136]   --->   Operation 92 'bitcast' 'bitcast_ln136_4' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 93 [1/1] (0.62ns)   --->   "%br_ln136 = br void" [../src/ban.cpp:136]   --->   Operation 93 'br' 'br_ln136' <Predicate = true> <Delay = 0.62>

State 10 <SV = 3> <Delay = 0.62>
ST_10 : Operation 94 [1/1] (0.00ns)   --->   "%trunc_ln133 = trunc i128 %p_read" [../src/ban.cpp:133]   --->   Operation 94 'trunc' 'trunc_ln133' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 95 [1/1] (0.00ns)   --->   "%trunc_ln133_1 = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %p_read, i32 32, i32 63" [../src/ban.cpp:133]   --->   Operation 95 'partselect' 'trunc_ln133_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 96 [1/1] (0.00ns)   --->   "%bitcast_ln133 = bitcast i32 %trunc_ln133_1" [../src/ban.cpp:133]   --->   Operation 96 'bitcast' 'bitcast_ln133' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 97 [1/1] (0.00ns)   --->   "%trunc_ln133_2 = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %p_read, i32 64, i32 95" [../src/ban.cpp:133]   --->   Operation 97 'partselect' 'trunc_ln133_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 98 [1/1] (0.00ns)   --->   "%bitcast_ln133_1 = bitcast i32 %trunc_ln133_2" [../src/ban.cpp:133]   --->   Operation 98 'bitcast' 'bitcast_ln133_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 99 [1/1] (0.00ns)   --->   "%trunc_ln133_3 = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %p_read, i32 96, i32 127" [../src/ban.cpp:133]   --->   Operation 99 'partselect' 'trunc_ln133_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 100 [1/1] (0.00ns)   --->   "%bitcast_ln133_2 = bitcast i32 %trunc_ln133_3" [../src/ban.cpp:133]   --->   Operation 100 'bitcast' 'bitcast_ln133_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 101 [1/1] (0.62ns)   --->   "%br_ln133 = br void" [../src/ban.cpp:133]   --->   Operation 101 'br' 'br_ln133' <Predicate = true> <Delay = 0.62>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 2.78ns
The critical path consists of the following:
	wire read operation ('p_read_9', ../src/ban.cpp:61) on port 'p_read13' (../src/ban.cpp:61) [4]  (0 ns)
	'fcmp' operation ('tmp_s', ../src/ban.cpp:61) [16]  (2.78 ns)

 <State 2>: 3.07ns
The critical path consists of the following:
	'fcmp' operation ('tmp_s', ../src/ban.cpp:61) [16]  (2.78 ns)
	'and' operation ('and_ln61', ../src/ban.cpp:61) [17]  (0.287 ns)

 <State 3>: 3.07ns
The critical path consists of the following:
	'fcmp' operation ('tmp_66', ../src/ban.cpp:61) [31]  (2.78 ns)
	'and' operation ('and_ln61_5', ../src/ban.cpp:61) [32]  (0.287 ns)

 <State 4>: 6.86ns
The critical path consists of the following:
	'call' operation ('call_ret5', ../src/ban.cpp:151) to '_sum' [46]  (6.86 ns)

 <State 5>: 1.1ns
The critical path consists of the following:
	'call' operation ('call_ret5', ../src/ban.cpp:151) to '_sum' [46]  (0.476 ns)
	multiplexor before 'phi' operation ('agg_result_1_0', ../src/ban.cpp:142) with incoming values : ('agg_result_1_ret', ../src/ban.cpp:151) ('agg_result_1_ret2', ../src/ban.cpp:149) ('bitcast_ln145', ../src/ban.cpp:145) ('bitcast_ln142', ../src/ban.cpp:142) ('bitcast_ln136', ../src/ban.cpp:136) ('bitcast_ln133', ../src/ban.cpp:133) [94]  (0.623 ns)
	'phi' operation ('agg_result_1_0', ../src/ban.cpp:142) with incoming values : ('agg_result_1_ret', ../src/ban.cpp:151) ('agg_result_1_ret2', ../src/ban.cpp:149) ('bitcast_ln145', ../src/ban.cpp:145) ('bitcast_ln142', ../src/ban.cpp:142) ('bitcast_ln136', ../src/ban.cpp:136) ('bitcast_ln133', ../src/ban.cpp:133) [94]  (0 ns)

 <State 6>: 6.86ns
The critical path consists of the following:
	'call' operation ('call_ret9', ../src/ban.cpp:149) to '_sum' [54]  (6.86 ns)

 <State 7>: 0.623ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('agg_result_1_0', ../src/ban.cpp:142) with incoming values : ('agg_result_1_ret', ../src/ban.cpp:151) ('agg_result_1_ret2', ../src/ban.cpp:149) ('bitcast_ln145', ../src/ban.cpp:145) ('bitcast_ln142', ../src/ban.cpp:142) ('bitcast_ln136', ../src/ban.cpp:136) ('bitcast_ln133', ../src/ban.cpp:133) [94]  (0.623 ns)

 <State 8>: 0.623ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('agg_result_1_0', ../src/ban.cpp:142) with incoming values : ('agg_result_1_ret', ../src/ban.cpp:151) ('agg_result_1_ret2', ../src/ban.cpp:149) ('bitcast_ln145', ../src/ban.cpp:145) ('bitcast_ln142', ../src/ban.cpp:142) ('bitcast_ln136', ../src/ban.cpp:136) ('bitcast_ln133', ../src/ban.cpp:133) [94]  (0.623 ns)

 <State 9>: 0.623ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('agg_result_1_0', ../src/ban.cpp:142) with incoming values : ('agg_result_1_ret', ../src/ban.cpp:151) ('agg_result_1_ret2', ../src/ban.cpp:149) ('bitcast_ln145', ../src/ban.cpp:145) ('bitcast_ln142', ../src/ban.cpp:142) ('bitcast_ln136', ../src/ban.cpp:136) ('bitcast_ln133', ../src/ban.cpp:133) [94]  (0.623 ns)

 <State 10>: 0.623ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('agg_result_1_0', ../src/ban.cpp:142) with incoming values : ('agg_result_1_ret', ../src/ban.cpp:151) ('agg_result_1_ret2', ../src/ban.cpp:149) ('bitcast_ln145', ../src/ban.cpp:145) ('bitcast_ln142', ../src/ban.cpp:142) ('bitcast_ln136', ../src/ban.cpp:136) ('bitcast_ln133', ../src/ban.cpp:133) [94]  (0.623 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
