

================================================================
== Vitis HLS Report for 'sqrt_Pipeline_VITIS_LOOP_68_1'
================================================================
* Date:           Tue Feb  8 15:34:22 2022

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:47:39 MDT 2021)
* Project:        ban_interface
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvc1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.696 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        5|        5|  50.000 ns|  50.000 ns|    5|    5|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_68_1  |        3|        3|         3|          1|          1|     2|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.69>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 6 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%p_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %p_read13"   --->   Operation 7 'read' 'p_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.42ns)   --->   "%store_ln0 = store i2 1, i2 %i"   --->   Operation 8 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 9 [1/1] (0.42ns)   --->   "%br_ln0 = br void %.preheader"   --->   Operation 9 'br' 'br_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%i_1 = load i2 %i" [../src/ban.cpp:68]   --->   Operation 10 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.44ns)   --->   "%icmp_ln68 = icmp_eq  i2 %i_1, i2 3" [../src/ban.cpp:68]   --->   Operation 11 'icmp' 'icmp_ln68' <Predicate = true> <Delay = 0.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%br_ln68 = br i1 %icmp_ln68, void %.split8_ifconv, void %_ZNK3BaneqEf.exit10.exitStub" [../src/ban.cpp:68]   --->   Operation 12 'br' 'br_ln68' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i2.i5, i2 %i_1, i5 0" [../src/ban.cpp:69]   --->   Operation 13 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.77ns)   --->   "%add_ln69 = add i7 %shl_ln, i7 32" [../src/ban.cpp:69]   --->   Operation 14 'add' 'add_ln69' <Predicate = (!icmp_ln68)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.77ns)   --->   "%add_ln69_1 = add i7 %shl_ln, i7 63" [../src/ban.cpp:69]   --->   Operation 15 'add' 'add_ln69_1' <Predicate = (!icmp_ln68)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln69)   --->   "%zext_ln69 = zext i7 %add_ln69" [../src/ban.cpp:69]   --->   Operation 16 'zext' 'zext_ln69' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns) (grouped into LUT with out node sub_ln69)   --->   "%zext_ln69_1 = zext i7 %add_ln69" [../src/ban.cpp:69]   --->   Operation 17 'zext' 'zext_ln69_1' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%zext_ln69_2 = zext i7 %add_ln69_1" [../src/ban.cpp:69]   --->   Operation 18 'zext' 'zext_ln69_2' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.77ns)   --->   "%add_ln69_2 = add i8 %zext_ln69_2, i8 1" [../src/ban.cpp:69]   --->   Operation 19 'add' 'add_ln69_2' <Predicate = (!icmp_ln68)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns) (grouped into LUT with out node sub_ln69)   --->   "%zext_ln69_3 = zext i8 %add_ln69_2" [../src/ban.cpp:69]   --->   Operation 20 'zext' 'zext_ln69_3' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns) (grouped into LUT with out node sub_ln69)   --->   "%shl_ln69 = shl i128 1, i128 %zext_ln69_3" [../src/ban.cpp:69]   --->   Operation 21 'shl' 'shl_ln69' <Predicate = (!icmp_ln68)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns) (grouped into LUT with out node sub_ln69)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %add_ln69_2, i32 7" [../src/ban.cpp:69]   --->   Operation 22 'bitselect' 'tmp' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node sub_ln69)   --->   "%select_ln69 = select i1 %tmp, i128 0, i128 %shl_ln69" [../src/ban.cpp:69]   --->   Operation 23 'select' 'select_ln69' <Predicate = (!icmp_ln68)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.51> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node sub_ln69)   --->   "%shl_ln69_1 = shl i97 1, i97 %zext_ln69_1" [../src/ban.cpp:69]   --->   Operation 24 'shl' 'shl_ln69_1' <Predicate = (!icmp_ln68)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node sub_ln69)   --->   "%zext_ln69_4 = zext i97 %shl_ln69_1" [../src/ban.cpp:69]   --->   Operation 25 'zext' 'zext_ln69_4' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (1.57ns) (out node of the LUT)   --->   "%sub_ln69 = sub i128 %select_ln69, i128 %zext_ln69_4" [../src/ban.cpp:69]   --->   Operation 26 'sub' 'sub_ln69' <Predicate = (!icmp_ln68)> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln69)   --->   "%and_ln69 = and i128 %sub_ln69, i128 %p_read" [../src/ban.cpp:69]   --->   Operation 27 'and' 'and_ln69' <Predicate = (!icmp_ln68)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (1.51ns) (out node of the LUT)   --->   "%lshr_ln69 = lshr i128 %and_ln69, i128 %zext_ln69" [../src/ban.cpp:69]   --->   Operation 28 'lshr' 'lshr_ln69' <Predicate = (!icmp_ln68)> <Delay = 1.51> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%trunc_ln69 = trunc i128 %lshr_ln69" [../src/ban.cpp:69]   --->   Operation 29 'trunc' 'trunc_ln69' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_8 = partselect i8 @_ssdm_op_PartSelect.i8.i128.i32.i32, i128 %lshr_ln69, i32 23, i32 30" [../src/ban.cpp:69]   --->   Operation 30 'partselect' 'tmp_8' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%empty_27 = trunc i128 %lshr_ln69" [../src/ban.cpp:69]   --->   Operation 31 'trunc' 'empty_27' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.84ns)   --->   "%notlhs37 = icmp_ne  i8 %tmp_8, i8 255" [../src/ban.cpp:69]   --->   Operation 32 'icmp' 'notlhs37' <Predicate = (!icmp_ln68)> <Delay = 0.84> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (1.05ns)   --->   "%notrhs38 = icmp_eq  i23 %empty_27, i23 0" [../src/ban.cpp:69]   --->   Operation 33 'icmp' 'notrhs38' <Predicate = (!icmp_ln68)> <Delay = 1.05> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.54ns)   --->   "%add_ln68 = add i2 %i_1, i2 1" [../src/ban.cpp:68]   --->   Operation 34 'add' 'add_ln68' <Predicate = (!icmp_ln68)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.42ns)   --->   "%store_ln68 = store i2 %add_ln68, i2 %i" [../src/ban.cpp:68]   --->   Operation 35 'store' 'store_ln68' <Predicate = (!icmp_ln68)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 2.78>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%res = phi i1 %res_1, void %.split8_ifconv, i1 1, void %newFuncRoot"   --->   Operation 36 'phi' 'res' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 37 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 2, i64 2, i64 2"   --->   Operation 38 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%bitcast_ln69 = bitcast i32 %trunc_ln69" [../src/ban.cpp:69]   --->   Operation 39 'bitcast' 'bitcast_ln69' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_2 : Operation 40 [2/2] (2.78ns)   --->   "%tmp_s = fcmp_oeq  i32 %bitcast_ln69, i32 0" [../src/ban.cpp:69]   --->   Operation 40 'fcmp' 'tmp_s' <Predicate = (!icmp_ln68)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%write_ln69 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %res_out, i1 %res" [../src/ban.cpp:69]   --->   Operation 47 'write' 'write_ln69' <Predicate = (icmp_ln68)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 48 'ret' 'ret_ln0' <Predicate = (icmp_ln68)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.06>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%specloopname_ln67 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11" [../src/ban.cpp:67]   --->   Operation 41 'specloopname' 'specloopname_ln67' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node res_1)   --->   "%empty_28 = or i1 %notrhs38, i1 %notlhs37" [../src/ban.cpp:69]   --->   Operation 42 'or' 'empty_28' <Predicate = (!icmp_ln68)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 43 [1/2] (2.78ns)   --->   "%tmp_s = fcmp_oeq  i32 %bitcast_ln69, i32 0" [../src/ban.cpp:69]   --->   Operation 43 'fcmp' 'tmp_s' <Predicate = (!icmp_ln68)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node res_1)   --->   "%empty_29 = and i1 %empty_28, i1 %tmp_s" [../src/ban.cpp:69]   --->   Operation 44 'and' 'empty_29' <Predicate = (!icmp_ln68)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 45 [1/1] (0.28ns) (out node of the LUT)   --->   "%res_1 = and i1 %empty_29, i1 %res" [../src/ban.cpp:69]   --->   Operation 45 'and' 'res_1' <Predicate = (!icmp_ln68)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.preheader"   --->   Operation 46 'br' 'br_ln0' <Predicate = (!icmp_ln68)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.7ns
The critical path consists of the following:
	'alloca' operation ('i') [3]  (0 ns)
	'load' operation ('i', ../src/ban.cpp:68) on local variable 'i' [9]  (0 ns)
	'add' operation ('add_ln69_1', ../src/ban.cpp:69) [18]  (0.773 ns)
	'add' operation ('add_ln69_2', ../src/ban.cpp:69) [22]  (0.773 ns)
	'select' operation ('select_ln69', ../src/ban.cpp:69) [26]  (0 ns)
	'sub' operation ('sub_ln69', ../src/ban.cpp:69) [29]  (1.58 ns)
	'and' operation ('and_ln69', ../src/ban.cpp:69) [30]  (0 ns)
	'lshr' operation ('lshr_ln69', ../src/ban.cpp:69) [31]  (1.52 ns)
	'icmp' operation ('notrhs38', ../src/ban.cpp:69) [37]  (1.05 ns)

 <State 2>: 2.78ns
The critical path consists of the following:
	'fcmp' operation ('tmp_s', ../src/ban.cpp:69) [39]  (2.78 ns)

 <State 3>: 3.07ns
The critical path consists of the following:
	'fcmp' operation ('tmp_s', ../src/ban.cpp:69) [39]  (2.78 ns)
	'and' operation ('empty_29', ../src/ban.cpp:69) [40]  (0 ns)
	'and' operation ('res', ../src/ban.cpp:69) [41]  (0.287 ns)
	'phi' operation ('res') with incoming values : ('res', ../src/ban.cpp:69) [8]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
