-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ban_interface_operator_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read14 : IN STD_LOGIC_VECTOR (127 downto 0);
    p_read25 : IN STD_LOGIC_VECTOR (127 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of ban_interface_operator_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (32 downto 0) := "000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (32 downto 0) := "000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (32 downto 0) := "000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (32 downto 0) := "000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (32 downto 0) := "000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (32 downto 0) := "000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (32 downto 0) := "000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (32 downto 0) := "000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (32 downto 0) := "000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (32 downto 0) := "001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (32 downto 0) := "010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (32 downto 0) := "100000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_fu_317_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_364 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_fu_321_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_370 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_325_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_376 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln61_fu_382_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln61_reg_776 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln61_fu_396_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln61_reg_782 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln61_5_fu_421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln61_5_reg_788 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln61_6_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln61_6_reg_793 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal and_ln61_3_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln61_3_reg_803 : STD_LOGIC_VECTOR (0 downto 0);
    signal normalizer_fu_464_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal normalizer_reg_807 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_p_1_fu_473_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_p_1_reg_815 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln9_reg_821 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal trunc_ln270_1_reg_826 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln270_fu_504_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal bitcast_ln270_1_fu_508_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal eps_0_reg_847 : STD_LOGIC_VECTOR (31 downto 0);
    signal eps_1_reg_854 : STD_LOGIC_VECTOR (31 downto 0);
    signal eps_2_reg_861 : STD_LOGIC_VECTOR (31 downto 0);
    signal eps_tmp_0_reg_874 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal eps_tmp_1_reg_880 : STD_LOGIC_VECTOR (31 downto 0);
    signal eps_tmp_2_reg_886 : STD_LOGIC_VECTOR (31 downto 0);
    signal eps_0_1_reg_892 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal eps_1_1_reg_897 : STD_LOGIC_VECTOR (31 downto 0);
    signal eps_2_1_reg_902 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_329_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_reg_907 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal grp_fu_333_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_reg_917 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_337_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_reg_925 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln77_fu_570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln77_reg_933 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal empty_fu_579_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_reg_937 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal icmp_ln92_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln92_reg_943 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln92_fu_590_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln92_reg_947 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_34_fu_631_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal icmp_ln104_fu_636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln104_reg_967 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln104_fu_658_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln104_reg_971 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_ap_start : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_ap_done : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_ap_idle : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_ap_ready : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_den_norm_2_019_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_den_norm_2_019_out_ap_vld : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_den_norm_1_018_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_den_norm_1_018_out_ap_vld : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_den_norm_270_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_den_norm_270_out_ap_vld : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_den_norm_169_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_den_norm_169_out_ap_vld : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_grp_fu_329_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_grp_fu_329_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_grp_fu_329_p_ce : STD_LOGIC;
    signal grp_p_mul_1_fu_257_ap_start : STD_LOGIC;
    signal grp_p_mul_1_fu_257_ap_done : STD_LOGIC;
    signal grp_p_mul_1_fu_257_ap_idle : STD_LOGIC;
    signal grp_p_mul_1_fu_257_ap_ready : STD_LOGIC;
    signal grp_p_mul_1_fu_257_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_mul_1_fu_257_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_mul_1_fu_257_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_mul_fu_264_ap_start : STD_LOGIC;
    signal grp_p_mul_fu_264_ap_done : STD_LOGIC;
    signal grp_p_mul_fu_264_ap_idle : STD_LOGIC;
    signal grp_p_mul_fu_264_ap_ready : STD_LOGIC;
    signal grp_p_mul_fu_264_num_a_0_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_mul_fu_264_num_a_1_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_mul_fu_264_num_a_2_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_mul_fu_264_num_res_0_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_mul_fu_264_num_res_1_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_mul_fu_264_num_res_2_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_mul_fu_264_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_mul_fu_264_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_mul_fu_264_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_ap_start : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_ap_done : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_ap_idle : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_ap_ready : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_idx_tmp_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_idx_tmp_out_ap_vld : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_ap_start : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_ap_done : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_ap_idle : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_ap_ready : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_c_num_load_121_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_c_num_load_121_out_ap_vld : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_c_num_load15_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_c_num_load15_out_ap_vld : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_num_res_assign_load9_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_num_res_assign_load9_out_ap_vld : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_ap_start : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_ap_done : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_ap_idle : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_ap_ready : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_c_num_load_118_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_c_num_load_118_out_ap_vld : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_c_num_load12_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_c_num_load12_out_ap_vld : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_num_res_assign_load6_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_num_res_assign_load6_out_ap_vld : STD_LOGIC;
    signal c_num_load_119_reg_132 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_num_load13_reg_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_res_assign_load7_reg_152 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_base_0_lcssa_i810_phi_fu_166_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal base_0_lcssa_i810_reg_162 : STD_LOGIC_VECTOR (1 downto 0);
    signal base_fu_614_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_31_reg_174 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_agg_result_1_0_0_phi_fu_189_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_result_1_0_0_reg_185 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_phi_mux_agg_result_1_1_0_phi_fu_204_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_result_1_1_0_reg_200 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_agg_result_1_2_0_phi_fu_219_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_result_1_2_0_reg_215 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_agg_result_01_0_phi_fu_234_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_result_01_0_reg_230 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_p_mul_1_fu_257_ap_start_reg : STD_LOGIC := '0';
    signal grp_p_mul_fu_264_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal grp_fu_317_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_317_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_fu_321_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_321_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_325_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_325_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_329_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_329_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_fu_341_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal trunc_ln61_s_fu_386_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_401_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln61_2_fu_411_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln61_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln61_fu_442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln61_fu_433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_fu_454_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln272_fu_469_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln77_fu_535_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_538_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln77_fu_548_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln77_2_fu_558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln77_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln77_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln92_fu_609_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln100_fu_621_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln100_fu_627_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln104_fu_642_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln104_2_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln104_fu_652_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_317_ce : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_fu_321_ce : STD_LOGIC;
    signal grp_fu_325_ce : STD_LOGIC;
    signal grp_fu_329_ce : STD_LOGIC;
    signal ap_return_0_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_3_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component ban_interface_operator_1_Pipeline_VITIS_LOOP_215_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read25 : IN STD_LOGIC_VECTOR (127 downto 0);
        normalizer : IN STD_LOGIC_VECTOR (31 downto 0);
        den_norm_2_019_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        den_norm_2_019_out_ap_vld : OUT STD_LOGIC;
        den_norm_1_018_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        den_norm_1_018_out_ap_vld : OUT STD_LOGIC;
        den_norm_270_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        den_norm_270_out_ap_vld : OUT STD_LOGIC;
        den_norm_169_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        den_norm_169_out_ap_vld : OUT STD_LOGIC;
        grp_fu_329_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_329_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_329_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_329_p_ce : OUT STD_LOGIC );
    end component;


    component ban_interface_p_mul_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (127 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ban_interface_p_mul IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        num_a_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
        num_a_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
        num_a_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
        num_b_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
        num_b_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
        num_b_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
        num_res_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
        num_res_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
        num_res_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ban_interface_operator_1_Pipeline_VITIS_LOOP_84_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp_47 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_48 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_49 : IN STD_LOGIC_VECTOR (31 downto 0);
        idx_tmp_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        idx_tmp_out_ap_vld : OUT STD_LOGIC );
    end component;


    component ban_interface_operator_1_Pipeline_VITIS_LOOP_92_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp_49 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_48 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_47 : IN STD_LOGIC_VECTOR (31 downto 0);
        zext_ln92 : IN STD_LOGIC_VECTOR (1 downto 0);
        xor_ln92 : IN STD_LOGIC_VECTOR (1 downto 0);
        c_num_load_121_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        c_num_load_121_out_ap_vld : OUT STD_LOGIC;
        c_num_load15_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        c_num_load15_out_ap_vld : OUT STD_LOGIC;
        num_res_assign_load9_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        num_res_assign_load9_out_ap_vld : OUT STD_LOGIC );
    end component;


    component ban_interface_operator_1_Pipeline_VITIS_LOOP_104_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        c_num_load_119 : IN STD_LOGIC_VECTOR (31 downto 0);
        c_num_load13 : IN STD_LOGIC_VECTOR (31 downto 0);
        num_res_assign_load7 : IN STD_LOGIC_VECTOR (31 downto 0);
        zext_ln104 : IN STD_LOGIC_VECTOR (1 downto 0);
        zext_ln104_4 : IN STD_LOGIC_VECTOR (2 downto 0);
        c_num_load_118_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        c_num_load_118_out_ap_vld : OUT STD_LOGIC;
        c_num_load12_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        c_num_load12_out_ap_vld : OUT STD_LOGIC;
        num_res_assign_load6_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        num_res_assign_load6_out_ap_vld : OUT STD_LOGIC );
    end component;


    component ban_interface_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ban_interface_fdiv_32ns_32ns_32_9_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ban_interface_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246 : component ban_interface_operator_1_Pipeline_VITIS_LOOP_215_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_ap_start,
        ap_done => grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_ap_done,
        ap_idle => grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_ap_idle,
        ap_ready => grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_ap_ready,
        p_read25 => p_read25,
        normalizer => normalizer_reg_807,
        den_norm_2_019_out => grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_den_norm_2_019_out,
        den_norm_2_019_out_ap_vld => grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_den_norm_2_019_out_ap_vld,
        den_norm_1_018_out => grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_den_norm_1_018_out,
        den_norm_1_018_out_ap_vld => grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_den_norm_1_018_out_ap_vld,
        den_norm_270_out => grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_den_norm_270_out,
        den_norm_270_out_ap_vld => grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_den_norm_270_out_ap_vld,
        den_norm_169_out => grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_den_norm_169_out,
        den_norm_169_out_ap_vld => grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_den_norm_169_out_ap_vld,
        grp_fu_329_p_din0 => grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_grp_fu_329_p_din0,
        grp_fu_329_p_din1 => grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_grp_fu_329_p_din1,
        grp_fu_329_p_dout0 => grp_fu_329_p2,
        grp_fu_329_p_ce => grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_grp_fu_329_p_ce);

    grp_p_mul_1_fu_257 : component ban_interface_p_mul_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_p_mul_1_fu_257_ap_start,
        ap_done => grp_p_mul_1_fu_257_ap_done,
        ap_idle => grp_p_mul_1_fu_257_ap_idle,
        ap_ready => grp_p_mul_1_fu_257_ap_ready,
        p_read => grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_den_norm_1_018_out,
        p_read1 => grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_den_norm_2_019_out,
        p_read2 => p_read14,
        ap_return_0 => grp_p_mul_1_fu_257_ap_return_0,
        ap_return_1 => grp_p_mul_1_fu_257_ap_return_1,
        ap_return_2 => grp_p_mul_1_fu_257_ap_return_2);

    grp_p_mul_fu_264 : component ban_interface_p_mul
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_p_mul_fu_264_ap_start,
        ap_done => grp_p_mul_fu_264_ap_done,
        ap_idle => grp_p_mul_fu_264_ap_idle,
        ap_ready => grp_p_mul_fu_264_ap_ready,
        num_a_0_read => grp_p_mul_fu_264_num_a_0_read,
        num_a_1_read => grp_p_mul_fu_264_num_a_1_read,
        num_a_2_read => grp_p_mul_fu_264_num_a_2_read,
        num_b_0_read => ap_const_lv32_0,
        num_b_1_read => grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_den_norm_169_out,
        num_b_2_read => grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_den_norm_270_out,
        num_res_0_read => grp_p_mul_fu_264_num_res_0_read,
        num_res_1_read => grp_p_mul_fu_264_num_res_1_read,
        num_res_2_read => grp_p_mul_fu_264_num_res_2_read,
        ap_return_0 => grp_p_mul_fu_264_ap_return_0,
        ap_return_1 => grp_p_mul_fu_264_ap_return_1,
        ap_return_2 => grp_p_mul_fu_264_ap_return_2);

    grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281 : component ban_interface_operator_1_Pipeline_VITIS_LOOP_84_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_ap_start,
        ap_done => grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_ap_done,
        ap_idle => grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_ap_idle,
        ap_ready => grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_ap_ready,
        tmp_47 => tmp_31_reg_907,
        tmp_48 => tmp_32_reg_917,
        tmp_49 => tmp_33_reg_925,
        idx_tmp_out => grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_idx_tmp_out,
        idx_tmp_out_ap_vld => grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_idx_tmp_out_ap_vld);

    grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289 : component ban_interface_operator_1_Pipeline_VITIS_LOOP_92_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_ap_start,
        ap_done => grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_ap_done,
        ap_idle => grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_ap_idle,
        ap_ready => grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_ap_ready,
        tmp_49 => tmp_33_reg_925,
        tmp_48 => tmp_32_reg_917,
        tmp_47 => tmp_31_reg_907,
        zext_ln92 => empty_reg_937,
        xor_ln92 => xor_ln92_reg_947,
        c_num_load_121_out => grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_c_num_load_121_out,
        c_num_load_121_out_ap_vld => grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_c_num_load_121_out_ap_vld,
        c_num_load15_out => grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_c_num_load15_out,
        c_num_load15_out_ap_vld => grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_c_num_load15_out_ap_vld,
        num_res_assign_load9_out => grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_num_res_assign_load9_out,
        num_res_assign_load9_out_ap_vld => grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_num_res_assign_load9_out_ap_vld);

    grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301 : component ban_interface_operator_1_Pipeline_VITIS_LOOP_104_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_ap_start,
        ap_done => grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_ap_done,
        ap_idle => grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_ap_idle,
        ap_ready => grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_ap_ready,
        c_num_load_119 => c_num_load_119_reg_132,
        c_num_load13 => c_num_load13_reg_142,
        num_res_assign_load7 => num_res_assign_load7_reg_152,
        zext_ln104 => base_0_lcssa_i810_reg_162,
        zext_ln104_4 => select_ln104_reg_971,
        c_num_load_118_out => grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_c_num_load_118_out,
        c_num_load_118_out_ap_vld => grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_c_num_load_118_out_ap_vld,
        c_num_load12_out => grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_c_num_load12_out,
        c_num_load12_out_ap_vld => grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_c_num_load12_out_ap_vld,
        num_res_assign_load6_out => grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_num_res_assign_load6_out,
        num_res_assign_load6_out_ap_vld => grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_num_res_assign_load6_out_ap_vld);

    fadd_32ns_32ns_32_4_full_dsp_1_U439 : component ban_interface_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_317_p0,
        din1 => grp_fu_317_p1,
        ce => grp_fu_317_ce,
        dout => grp_fu_317_p2);

    fadd_32ns_32ns_32_4_full_dsp_1_U440 : component ban_interface_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_321_p0,
        din1 => grp_fu_321_p1,
        ce => grp_fu_321_ce,
        dout => grp_fu_321_p2);

    fadd_32ns_32ns_32_4_full_dsp_1_U441 : component ban_interface_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_325_p0,
        din1 => grp_fu_325_p1,
        ce => grp_fu_325_ce,
        dout => grp_fu_325_p2);

    fdiv_32ns_32ns_32_9_no_dsp_1_U442 : component ban_interface_fdiv_32ns_32ns_32_9_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_329_p0,
        din1 => grp_fu_329_p1,
        ce => grp_fu_329_ce,
        dout => grp_fu_329_p2);

    fdiv_32ns_32ns_32_9_no_dsp_1_U443 : component ban_interface_fdiv_32ns_32ns_32_9_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_370,
        din1 => normalizer_reg_807,
        ce => ap_const_logic_1,
        dout => grp_fu_333_p2);

    fdiv_32ns_32ns_32_9_no_dsp_1_U444 : component ban_interface_fdiv_32ns_32ns_32_9_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_376,
        din1 => normalizer_reg_807,
        ce => ap_const_logic_1,
        dout => grp_fu_337_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U445 : component ban_interface_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_341_p0,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_1,
        dout => grp_fu_341_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                    ap_return_0_preg <= ap_phi_mux_agg_result_01_0_phi_fu_234_p8;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                    ap_return_1_preg <= ap_phi_mux_agg_result_1_0_0_phi_fu_189_p8;
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                    ap_return_2_preg <= ap_phi_mux_agg_result_1_1_0_phi_fu_204_p8;
                end if; 
            end if;
        end if;
    end process;


    ap_return_3_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_3_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                    ap_return_3_preg <= ap_phi_mux_agg_result_1_2_0_phi_fu_219_p8;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state31) and ((icmp_ln104_fu_636_p2 = ap_const_lv1_0) or (icmp_ln92_reg_943 = ap_const_lv1_0)))) then 
                    grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_ap_ready = ap_const_logic_1)) then 
                    grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = and_ln61_3_fu_448_p2))) then 
                    grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_ap_ready = ap_const_logic_1)) then 
                    grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_1 = and_ln77_fu_570_p2))) then 
                    grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_ap_ready = ap_const_logic_1)) then 
                    grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln92_fu_584_p2 = ap_const_lv1_1))) then 
                    grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_ap_ready = ap_const_logic_1)) then 
                    grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_p_mul_1_fu_257_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_mul_1_fu_257_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_p_mul_1_fu_257_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_mul_1_fu_257_ap_ready = ap_const_logic_1)) then 
                    grp_p_mul_1_fu_257_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_p_mul_fu_264_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_mul_fu_264_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((grp_p_mul_fu_264_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
                    grp_p_mul_fu_264_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_mul_fu_264_ap_ready = ap_const_logic_1)) then 
                    grp_p_mul_fu_264_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    agg_result_01_0_reg_230_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln104_fu_636_p2 = ap_const_lv1_1) and (icmp_ln92_reg_943 = ap_const_lv1_1))) then 
                agg_result_01_0_reg_230 <= tmp_34_fu_631_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_0 = and_ln77_fu_570_p2))) then 
                agg_result_01_0_reg_230 <= c_p_1_reg_815;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln61_3_fu_448_p2))) then 
                agg_result_01_0_reg_230 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state33) and (((icmp_ln104_reg_967 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln77_reg_933) and (ap_const_lv1_0 = and_ln61_3_reg_803)) or ((ap_const_lv1_1 = and_ln77_reg_933) and (icmp_ln92_reg_943 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln61_3_reg_803))))) then 
                agg_result_01_0_reg_230 <= empty_31_reg_174;
            end if; 
        end if;
    end process;

    agg_result_1_0_0_reg_185_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln104_fu_636_p2 = ap_const_lv1_1) and (icmp_ln92_reg_943 = ap_const_lv1_1))) then 
                agg_result_1_0_0_reg_185 <= grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_num_res_assign_load9_out;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_0 = and_ln77_fu_570_p2))) then 
                agg_result_1_0_0_reg_185 <= tmp_31_reg_907;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln61_3_fu_448_p2))) then 
                agg_result_1_0_0_reg_185 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state33) and (((icmp_ln104_reg_967 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln77_reg_933) and (ap_const_lv1_0 = and_ln61_3_reg_803)) or ((ap_const_lv1_1 = and_ln77_reg_933) and (icmp_ln92_reg_943 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln61_3_reg_803))))) then 
                agg_result_1_0_0_reg_185 <= grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_num_res_assign_load6_out;
            end if; 
        end if;
    end process;

    agg_result_1_1_0_reg_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln104_fu_636_p2 = ap_const_lv1_1) and (icmp_ln92_reg_943 = ap_const_lv1_1))) then 
                agg_result_1_1_0_reg_200 <= grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_c_num_load15_out;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_0 = and_ln77_fu_570_p2))) then 
                agg_result_1_1_0_reg_200 <= tmp_32_reg_917;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln61_3_fu_448_p2))) then 
                agg_result_1_1_0_reg_200 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state33) and (((icmp_ln104_reg_967 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln77_reg_933) and (ap_const_lv1_0 = and_ln61_3_reg_803)) or ((ap_const_lv1_1 = and_ln77_reg_933) and (icmp_ln92_reg_943 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln61_3_reg_803))))) then 
                agg_result_1_1_0_reg_200 <= grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_c_num_load12_out;
            end if; 
        end if;
    end process;

    agg_result_1_2_0_reg_215_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln104_fu_636_p2 = ap_const_lv1_1) and (icmp_ln92_reg_943 = ap_const_lv1_1))) then 
                agg_result_1_2_0_reg_215 <= grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_c_num_load_121_out;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_0 = and_ln77_fu_570_p2))) then 
                agg_result_1_2_0_reg_215 <= tmp_33_reg_925;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln61_3_fu_448_p2))) then 
                agg_result_1_2_0_reg_215 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state33) and (((icmp_ln104_reg_967 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln77_reg_933) and (ap_const_lv1_0 = and_ln61_3_reg_803)) or ((ap_const_lv1_1 = and_ln77_reg_933) and (icmp_ln92_reg_943 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln61_3_reg_803))))) then 
                agg_result_1_2_0_reg_215 <= grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_c_num_load_118_out;
            end if; 
        end if;
    end process;

    base_0_lcssa_i810_reg_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln104_fu_636_p2 = ap_const_lv1_0) and (icmp_ln92_reg_943 = ap_const_lv1_1))) then 
                base_0_lcssa_i810_reg_162 <= base_fu_614_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln92_fu_584_p2 = ap_const_lv1_0))) then 
                base_0_lcssa_i810_reg_162 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    c_num_load13_reg_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln104_fu_636_p2 = ap_const_lv1_0) and (icmp_ln92_reg_943 = ap_const_lv1_1))) then 
                c_num_load13_reg_142 <= grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_c_num_load15_out;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln92_fu_584_p2 = ap_const_lv1_0))) then 
                c_num_load13_reg_142 <= tmp_32_reg_917;
            end if; 
        end if;
    end process;

    c_num_load_119_reg_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln104_fu_636_p2 = ap_const_lv1_0) and (icmp_ln92_reg_943 = ap_const_lv1_1))) then 
                c_num_load_119_reg_132 <= grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_c_num_load_121_out;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln92_fu_584_p2 = ap_const_lv1_0))) then 
                c_num_load_119_reg_132 <= tmp_33_reg_925;
            end if; 
        end if;
    end process;

    empty_31_reg_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln104_fu_636_p2 = ap_const_lv1_0) and (icmp_ln92_reg_943 = ap_const_lv1_1))) then 
                empty_31_reg_174 <= tmp_34_fu_631_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln92_fu_584_p2 = ap_const_lv1_0))) then 
                empty_31_reg_174 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    num_res_assign_load7_reg_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln104_fu_636_p2 = ap_const_lv1_0) and (icmp_ln92_reg_943 = ap_const_lv1_1))) then 
                num_res_assign_load7_reg_152 <= grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_num_res_assign_load9_out;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln92_fu_584_p2 = ap_const_lv1_0))) then 
                num_res_assign_load7_reg_152 <= tmp_31_reg_907;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                and_ln61_3_reg_803 <= and_ln61_3_fu_448_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                and_ln77_reg_933 <= and_ln77_fu_570_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                bitcast_ln61_reg_782 <= bitcast_ln61_fu_396_p1;
                icmp_ln61_5_reg_788 <= icmp_ln61_5_fu_421_p2;
                icmp_ln61_6_reg_793 <= icmp_ln61_6_fu_427_p2;
                trunc_ln61_reg_776 <= trunc_ln61_fu_382_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = and_ln61_3_fu_448_p2))) then
                c_p_1_reg_815 <= c_p_1_fu_473_p2;
                normalizer_reg_807 <= normalizer_fu_464_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                empty_reg_937 <= empty_fu_579_p1;
                icmp_ln92_reg_943 <= icmp_ln92_fu_584_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                eps_0_1_reg_892 <= grp_p_mul_fu_264_ap_return_0;
                eps_1_1_reg_897 <= grp_p_mul_fu_264_ap_return_1;
                eps_2_1_reg_902 <= grp_p_mul_fu_264_ap_return_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                eps_0_reg_847 <= grp_p_mul_1_fu_257_ap_return_0;
                eps_1_reg_854 <= grp_p_mul_1_fu_257_ap_return_1;
                eps_2_reg_861 <= grp_p_mul_1_fu_257_ap_return_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                eps_tmp_0_reg_874 <= grp_p_mul_fu_264_ap_return_0;
                eps_tmp_1_reg_880 <= grp_p_mul_fu_264_ap_return_1;
                eps_tmp_2_reg_886 <= grp_p_mul_fu_264_ap_return_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln92_reg_943 = ap_const_lv1_1))) then
                icmp_ln104_reg_967 <= icmp_ln104_fu_636_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8))) then
                reg_364 <= grp_fu_317_p2;
                reg_370 <= grp_fu_321_p2;
                reg_376 <= grp_fu_325_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state31) and ((icmp_ln104_fu_636_p2 = ap_const_lv1_0) or (icmp_ln92_reg_943 = ap_const_lv1_0)))) then
                select_ln104_reg_971 <= select_ln104_fu_658_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                tmp_31_reg_907 <= grp_fu_329_p2;
                tmp_32_reg_917 <= grp_fu_333_p2;
                tmp_33_reg_925 <= grp_fu_337_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                trunc_ln270_1_reg_826 <= p_read14(127 downto 96);
                trunc_ln9_reg_821 <= p_read14(95 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln92_fu_584_p2 = ap_const_lv1_1))) then
                xor_ln92_reg_947 <= xor_ln92_fu_590_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, and_ln61_3_fu_448_p2, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state10, and_ln77_fu_570_p2, ap_CS_fsm_state27, ap_CS_fsm_state29, icmp_ln92_fu_584_p2, icmp_ln92_reg_943, ap_CS_fsm_state31, icmp_ln104_fu_636_p2, grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_ap_done, grp_p_mul_1_fu_257_ap_done, grp_p_mul_fu_264_ap_done, grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_ap_done, grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_ap_done, grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state32)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln61_3_fu_448_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_p_mul_1_fu_257_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((grp_p_mul_fu_264_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((grp_p_mul_fu_264_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_0 = and_ln77_fu_570_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                if (((grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln92_fu_584_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state30 => 
                if (((grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln104_fu_636_p2 = ap_const_lv1_1) and (icmp_ln92_reg_943 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state32 => 
                if (((grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln104_fu_652_p2 <= std_logic_vector(unsigned(zext_ln104_fu_642_p1) + unsigned(ap_const_lv3_1));
    and_ln61_3_fu_448_p2 <= (icmp_ln61_fu_433_p2 and and_ln61_fu_442_p2);
    and_ln61_fu_442_p2 <= (or_ln61_fu_438_p2 and grp_fu_341_p2);
    and_ln77_fu_570_p2 <= (or_ln77_fu_564_p2 and grp_fu_341_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_p_mul_fu_264_ap_done)
    begin
        if ((grp_p_mul_fu_264_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;

    ap_ST_fsm_state28_blk_assign_proc : process(grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_ap_done)
    begin
        if ((grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state28_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state28_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state30_blk_assign_proc : process(grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_ap_done)
    begin
        if ((grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state30_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state30_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state31_blk <= ap_const_logic_0;

    ap_ST_fsm_state32_blk_assign_proc : process(grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_ap_done)
    begin
        if ((grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state32_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state32_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state33_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_ap_done)
    begin
        if ((grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_p_mul_1_fu_257_ap_done)
    begin
        if ((grp_p_mul_1_fu_257_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_p_mul_fu_264_ap_done)
    begin
        if ((grp_p_mul_fu_264_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state33) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_agg_result_01_0_phi_fu_234_p8_assign_proc : process(and_ln61_3_reg_803, and_ln77_reg_933, icmp_ln92_reg_943, icmp_ln104_reg_967, empty_31_reg_174, ap_CS_fsm_state33, agg_result_01_0_reg_230)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state33) and (((icmp_ln104_reg_967 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln77_reg_933) and (ap_const_lv1_0 = and_ln61_3_reg_803)) or ((ap_const_lv1_1 = and_ln77_reg_933) and (icmp_ln92_reg_943 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln61_3_reg_803))))) then 
            ap_phi_mux_agg_result_01_0_phi_fu_234_p8 <= empty_31_reg_174;
        else 
            ap_phi_mux_agg_result_01_0_phi_fu_234_p8 <= agg_result_01_0_reg_230;
        end if; 
    end process;


    ap_phi_mux_agg_result_1_0_0_phi_fu_189_p8_assign_proc : process(and_ln61_3_reg_803, and_ln77_reg_933, icmp_ln92_reg_943, icmp_ln104_reg_967, grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_num_res_assign_load6_out, agg_result_1_0_0_reg_185, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state33) and (((icmp_ln104_reg_967 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln77_reg_933) and (ap_const_lv1_0 = and_ln61_3_reg_803)) or ((ap_const_lv1_1 = and_ln77_reg_933) and (icmp_ln92_reg_943 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln61_3_reg_803))))) then 
            ap_phi_mux_agg_result_1_0_0_phi_fu_189_p8 <= grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_num_res_assign_load6_out;
        else 
            ap_phi_mux_agg_result_1_0_0_phi_fu_189_p8 <= agg_result_1_0_0_reg_185;
        end if; 
    end process;


    ap_phi_mux_agg_result_1_1_0_phi_fu_204_p8_assign_proc : process(and_ln61_3_reg_803, and_ln77_reg_933, icmp_ln92_reg_943, icmp_ln104_reg_967, grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_c_num_load12_out, ap_CS_fsm_state33, agg_result_1_1_0_reg_200)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state33) and (((icmp_ln104_reg_967 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln77_reg_933) and (ap_const_lv1_0 = and_ln61_3_reg_803)) or ((ap_const_lv1_1 = and_ln77_reg_933) and (icmp_ln92_reg_943 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln61_3_reg_803))))) then 
            ap_phi_mux_agg_result_1_1_0_phi_fu_204_p8 <= grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_c_num_load12_out;
        else 
            ap_phi_mux_agg_result_1_1_0_phi_fu_204_p8 <= agg_result_1_1_0_reg_200;
        end if; 
    end process;


    ap_phi_mux_agg_result_1_2_0_phi_fu_219_p8_assign_proc : process(and_ln61_3_reg_803, and_ln77_reg_933, icmp_ln92_reg_943, icmp_ln104_reg_967, grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_c_num_load_118_out, ap_CS_fsm_state33, agg_result_1_2_0_reg_215)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state33) and (((icmp_ln104_reg_967 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln77_reg_933) and (ap_const_lv1_0 = and_ln61_3_reg_803)) or ((ap_const_lv1_1 = and_ln77_reg_933) and (icmp_ln92_reg_943 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln61_3_reg_803))))) then 
            ap_phi_mux_agg_result_1_2_0_phi_fu_219_p8 <= grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_c_num_load_118_out;
        else 
            ap_phi_mux_agg_result_1_2_0_phi_fu_219_p8 <= agg_result_1_2_0_reg_215;
        end if; 
    end process;


    ap_phi_mux_base_0_lcssa_i810_phi_fu_166_p4_assign_proc : process(icmp_ln92_reg_943, ap_CS_fsm_state31, icmp_ln104_fu_636_p2, base_0_lcssa_i810_reg_162, base_fu_614_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln104_fu_636_p2 = ap_const_lv1_0) and (icmp_ln92_reg_943 = ap_const_lv1_1))) then 
            ap_phi_mux_base_0_lcssa_i810_phi_fu_166_p4 <= base_fu_614_p2;
        else 
            ap_phi_mux_base_0_lcssa_i810_phi_fu_166_p4 <= base_0_lcssa_i810_reg_162;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_CS_fsm_state33, ap_phi_mux_agg_result_01_0_phi_fu_234_p8, ap_return_0_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            ap_return_0 <= ap_phi_mux_agg_result_01_0_phi_fu_234_p8;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_phi_mux_agg_result_1_0_0_phi_fu_189_p8, ap_CS_fsm_state33, ap_return_1_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            ap_return_1 <= ap_phi_mux_agg_result_1_0_0_phi_fu_189_p8;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(ap_CS_fsm_state33, ap_phi_mux_agg_result_1_1_0_phi_fu_204_p8, ap_return_2_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            ap_return_2 <= ap_phi_mux_agg_result_1_1_0_phi_fu_204_p8;
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;


    ap_return_3_assign_proc : process(ap_CS_fsm_state33, ap_phi_mux_agg_result_1_2_0_phi_fu_219_p8, ap_return_3_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            ap_return_3 <= ap_phi_mux_agg_result_1_2_0_phi_fu_219_p8;
        else 
            ap_return_3 <= ap_return_3_preg;
        end if; 
    end process;

    base_fu_614_p2 <= std_logic_vector(unsigned(sub_ln92_fu_609_p2) + unsigned(ap_const_lv2_1));
    bitcast_ln270_1_fu_508_p1 <= trunc_ln270_1_reg_826;
    bitcast_ln270_fu_504_p1 <= trunc_ln9_reg_821;
    bitcast_ln61_fu_396_p1 <= trunc_ln61_s_fu_386_p4;
    bitcast_ln77_fu_535_p1 <= tmp_31_reg_907;
    c_p_1_fu_473_p2 <= std_logic_vector(unsigned(trunc_ln61_reg_776) - unsigned(trunc_ln272_fu_469_p1));
    empty_fu_579_p1 <= grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_idx_tmp_out(2 - 1 downto 0);

    grp_fu_317_ce_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state10, grp_p_mul_1_fu_257_ap_done, grp_p_mul_fu_264_ap_done, ap_CS_fsm_state13, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state13) or ((grp_p_mul_1_fu_257_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((grp_p_mul_fu_264_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((grp_p_mul_fu_264_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            grp_fu_317_ce <= ap_const_logic_1;
        else 
            grp_fu_317_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_317_p0_assign_proc : process(reg_364, bitcast_ln61_reg_782, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_fu_317_p0 <= reg_364;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_317_p0 <= bitcast_ln61_reg_782;
        else 
            grp_fu_317_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_317_p1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state9, eps_0_1_reg_892, grp_p_mul_1_fu_257_ap_return_0, grp_p_mul_fu_264_ap_return_0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_317_p1 <= eps_0_1_reg_892;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_317_p1 <= grp_p_mul_fu_264_ap_return_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_317_p1 <= grp_p_mul_1_fu_257_ap_return_0;
        else 
            grp_fu_317_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_321_ce_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state10, grp_p_mul_1_fu_257_ap_done, grp_p_mul_fu_264_ap_done, ap_CS_fsm_state13, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state13) or ((grp_p_mul_1_fu_257_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((grp_p_mul_fu_264_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((grp_p_mul_fu_264_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            grp_fu_321_ce <= ap_const_logic_1;
        else 
            grp_fu_321_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_321_p0_assign_proc : process(reg_370, bitcast_ln270_fu_504_p1, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_fu_321_p0 <= reg_370;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_321_p0 <= bitcast_ln270_fu_504_p1;
        else 
            grp_fu_321_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_321_p1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state9, eps_1_1_reg_897, grp_p_mul_1_fu_257_ap_return_1, grp_p_mul_fu_264_ap_return_1, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_321_p1 <= eps_1_1_reg_897;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_321_p1 <= grp_p_mul_fu_264_ap_return_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_321_p1 <= grp_p_mul_1_fu_257_ap_return_1;
        else 
            grp_fu_321_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_325_ce_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state10, grp_p_mul_1_fu_257_ap_done, grp_p_mul_fu_264_ap_done, ap_CS_fsm_state13, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state13) or ((grp_p_mul_1_fu_257_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((grp_p_mul_fu_264_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((grp_p_mul_fu_264_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            grp_fu_325_ce <= ap_const_logic_1;
        else 
            grp_fu_325_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_325_p0_assign_proc : process(reg_376, ap_CS_fsm_state5, bitcast_ln270_1_fu_508_p1, ap_CS_fsm_state9, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_fu_325_p0 <= reg_376;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_325_p0 <= bitcast_ln270_1_fu_508_p1;
        else 
            grp_fu_325_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_325_p1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state9, eps_2_1_reg_902, grp_p_mul_1_fu_257_ap_return_2, grp_p_mul_fu_264_ap_return_2, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_325_p1 <= eps_2_1_reg_902;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_325_p1 <= grp_p_mul_fu_264_ap_return_2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_325_p1 <= grp_p_mul_1_fu_257_ap_return_2;
        else 
            grp_fu_325_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_329_ce_assign_proc : process(grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_grp_fu_329_p_ce, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_329_ce <= grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_grp_fu_329_p_ce;
        else 
            grp_fu_329_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_329_p0_assign_proc : process(reg_364, grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_grp_fu_329_p_din0, ap_CS_fsm_state3, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_329_p0 <= grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_grp_fu_329_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_329_p0 <= reg_364;
        else 
            grp_fu_329_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_329_p1_assign_proc : process(normalizer_reg_807, grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_grp_fu_329_p_din1, ap_CS_fsm_state3, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_329_p1 <= grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_grp_fu_329_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_329_p1 <= normalizer_reg_807;
        else 
            grp_fu_329_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_341_p0_assign_proc : process(ap_CS_fsm_state1, bitcast_ln61_fu_396_p1, tmp_31_reg_907, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_341_p0 <= tmp_31_reg_907;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_341_p0 <= bitcast_ln61_fu_396_p1;
        else 
            grp_fu_341_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_ap_start <= grp_operator_1_Pipeline_VITIS_LOOP_104_3_fu_301_ap_start_reg;
    grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_ap_start <= grp_operator_1_Pipeline_VITIS_LOOP_215_1_fu_246_ap_start_reg;
    grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_ap_start <= grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_ap_start_reg;
    grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_ap_start <= grp_operator_1_Pipeline_VITIS_LOOP_92_2_fu_289_ap_start_reg;
    grp_p_mul_1_fu_257_ap_start <= grp_p_mul_1_fu_257_ap_start_reg;
    grp_p_mul_fu_264_ap_start <= grp_p_mul_fu_264_ap_start_reg;

    grp_p_mul_fu_264_num_a_0_read_assign_proc : process(eps_0_reg_847, eps_tmp_0_reg_874, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_p_mul_fu_264_num_a_0_read <= eps_tmp_0_reg_874;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_p_mul_fu_264_num_a_0_read <= eps_0_reg_847;
        else 
            grp_p_mul_fu_264_num_a_0_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_p_mul_fu_264_num_a_1_read_assign_proc : process(eps_1_reg_854, ap_CS_fsm_state9, eps_tmp_1_reg_880, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_p_mul_fu_264_num_a_1_read <= eps_tmp_1_reg_880;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_p_mul_fu_264_num_a_1_read <= eps_1_reg_854;
        else 
            grp_p_mul_fu_264_num_a_1_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_p_mul_fu_264_num_a_2_read_assign_proc : process(eps_2_reg_861, ap_CS_fsm_state9, eps_tmp_2_reg_886, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_p_mul_fu_264_num_a_2_read <= eps_tmp_2_reg_886;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_p_mul_fu_264_num_a_2_read <= eps_2_reg_861;
        else 
            grp_p_mul_fu_264_num_a_2_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_p_mul_fu_264_num_res_0_read_assign_proc : process(eps_0_reg_847, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_p_mul_fu_264_num_res_0_read <= eps_0_reg_847;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_p_mul_fu_264_num_res_0_read <= ap_const_lv32_0;
        else 
            grp_p_mul_fu_264_num_res_0_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_p_mul_fu_264_num_res_1_read_assign_proc : process(eps_1_reg_854, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_p_mul_fu_264_num_res_1_read <= eps_1_reg_854;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_p_mul_fu_264_num_res_1_read <= ap_const_lv32_0;
        else 
            grp_p_mul_fu_264_num_res_1_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_p_mul_fu_264_num_res_2_read_assign_proc : process(eps_2_reg_861, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_p_mul_fu_264_num_res_2_read <= eps_2_reg_861;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_p_mul_fu_264_num_res_2_read <= ap_const_lv32_0;
        else 
            grp_p_mul_fu_264_num_res_2_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln104_2_fu_646_p2 <= "0" when (ap_phi_mux_base_0_lcssa_i810_phi_fu_166_p4 = ap_const_lv2_3) else "1";
    icmp_ln104_fu_636_p2 <= "1" when (base_fu_614_p2 = ap_const_lv2_3) else "0";
    icmp_ln61_5_fu_421_p2 <= "0" when (tmp_s_fu_401_p4 = ap_const_lv8_FF) else "1";
    icmp_ln61_6_fu_427_p2 <= "1" when (trunc_ln61_2_fu_411_p4 = ap_const_lv23_0) else "0";
    icmp_ln61_fu_433_p2 <= "1" when (trunc_ln61_reg_776 = ap_const_lv32_0) else "0";
    icmp_ln77_2_fu_558_p2 <= "1" when (trunc_ln77_fu_548_p1 = ap_const_lv23_0) else "0";
    icmp_ln77_fu_552_p2 <= "0" when (tmp_28_fu_538_p4 = ap_const_lv8_FF) else "1";
    icmp_ln92_fu_584_p2 <= "1" when (unsigned(grp_operator_1_Pipeline_VITIS_LOOP_84_1_fu_281_idx_tmp_out) < unsigned(ap_const_lv32_3)) else "0";
    normalizer_fu_464_p1 <= trunc_ln_fu_454_p4;
    or_ln61_fu_438_p2 <= (icmp_ln61_6_reg_793 or icmp_ln61_5_reg_788);
    or_ln77_fu_564_p2 <= (icmp_ln77_fu_552_p2 or icmp_ln77_2_fu_558_p2);
    select_ln104_fu_658_p3 <= 
        ap_const_lv3_3 when (icmp_ln104_2_fu_646_p2(0) = '1') else 
        add_ln104_fu_652_p2;
        sext_ln100_fu_627_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln100_fu_621_p2),32));

    sub_ln92_fu_609_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(empty_reg_937));
    tmp_28_fu_538_p4 <= bitcast_ln77_fu_535_p1(30 downto 23);
    tmp_34_fu_631_p2 <= std_logic_vector(signed(sext_ln100_fu_627_p1) + signed(c_p_1_reg_815));
    tmp_s_fu_401_p4 <= p_read14(62 downto 55);
    trunc_ln272_fu_469_p1 <= p_read25(32 - 1 downto 0);
    trunc_ln61_2_fu_411_p4 <= p_read14(54 downto 32);
    trunc_ln61_fu_382_p1 <= p_read14(32 - 1 downto 0);
    trunc_ln61_s_fu_386_p4 <= p_read14(63 downto 32);
    trunc_ln77_fu_548_p1 <= bitcast_ln77_fu_535_p1(23 - 1 downto 0);
    trunc_ln_fu_454_p4 <= p_read25(63 downto 32);
    xor_ln100_fu_621_p2 <= (sub_ln92_fu_609_p2 xor ap_const_lv2_2);
    xor_ln92_fu_590_p2 <= (empty_fu_579_p1 xor ap_const_lv2_3);
    zext_ln104_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_base_0_lcssa_i810_phi_fu_166_p4),3));
end behav;
