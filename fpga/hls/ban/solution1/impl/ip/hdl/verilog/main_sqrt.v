// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module main_sqrt (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        b_p_read,
        b_1_address0,
        b_1_ce0,
        b_1_q0,
        b_1_address1,
        b_1_ce1,
        b_1_q1,
        b_1_offset,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        grp_fu_12725_p_din0,
        grp_fu_12725_p_din1,
        grp_fu_12725_p_opcode,
        grp_fu_12725_p_dout0,
        grp_fu_12725_p_ce,
        grp_fu_4183_p_din0,
        grp_fu_4183_p_din1,
        grp_fu_4183_p_opcode,
        grp_fu_4183_p_dout0,
        grp_fu_4183_p_ce,
        grp_fu_4190_p_din0,
        grp_fu_4190_p_din1,
        grp_fu_4190_p_opcode,
        grp_fu_4190_p_dout0,
        grp_fu_4190_p_ce,
        grp_fu_4198_p_din0,
        grp_fu_4198_p_din1,
        grp_fu_4198_p_dout0,
        grp_fu_4198_p_ce,
        grp_fu_4204_p_din0,
        grp_fu_4204_p_din1,
        grp_fu_4204_p_dout0,
        grp_fu_4204_p_ce,
        grp_fu_12729_p_din0,
        grp_fu_12729_p_din1,
        grp_fu_12729_p_dout0,
        grp_fu_12729_p_ce,
        grp_fu_4211_p_din0,
        grp_fu_4211_p_din1,
        grp_fu_4211_p_dout0,
        grp_fu_4211_p_ce,
        grp_fu_4235_p_din0,
        grp_fu_4235_p_din1,
        grp_fu_4235_p_opcode,
        grp_fu_4235_p_dout0,
        grp_fu_4235_p_ce
);

parameter    ap_ST_fsm_state1 = 55'd1;
parameter    ap_ST_fsm_state2 = 55'd2;
parameter    ap_ST_fsm_state3 = 55'd4;
parameter    ap_ST_fsm_state4 = 55'd8;
parameter    ap_ST_fsm_state5 = 55'd16;
parameter    ap_ST_fsm_state6 = 55'd32;
parameter    ap_ST_fsm_state7 = 55'd64;
parameter    ap_ST_fsm_state8 = 55'd128;
parameter    ap_ST_fsm_state9 = 55'd256;
parameter    ap_ST_fsm_state10 = 55'd512;
parameter    ap_ST_fsm_state11 = 55'd1024;
parameter    ap_ST_fsm_state12 = 55'd2048;
parameter    ap_ST_fsm_state13 = 55'd4096;
parameter    ap_ST_fsm_state14 = 55'd8192;
parameter    ap_ST_fsm_state15 = 55'd16384;
parameter    ap_ST_fsm_state16 = 55'd32768;
parameter    ap_ST_fsm_state17 = 55'd65536;
parameter    ap_ST_fsm_state18 = 55'd131072;
parameter    ap_ST_fsm_state19 = 55'd262144;
parameter    ap_ST_fsm_state20 = 55'd524288;
parameter    ap_ST_fsm_state21 = 55'd1048576;
parameter    ap_ST_fsm_state22 = 55'd2097152;
parameter    ap_ST_fsm_state23 = 55'd4194304;
parameter    ap_ST_fsm_state24 = 55'd8388608;
parameter    ap_ST_fsm_state25 = 55'd16777216;
parameter    ap_ST_fsm_state26 = 55'd33554432;
parameter    ap_ST_fsm_state27 = 55'd67108864;
parameter    ap_ST_fsm_state28 = 55'd134217728;
parameter    ap_ST_fsm_state29 = 55'd268435456;
parameter    ap_ST_fsm_state30 = 55'd536870912;
parameter    ap_ST_fsm_state31 = 55'd1073741824;
parameter    ap_ST_fsm_state32 = 55'd2147483648;
parameter    ap_ST_fsm_state33 = 55'd4294967296;
parameter    ap_ST_fsm_state34 = 55'd8589934592;
parameter    ap_ST_fsm_state35 = 55'd17179869184;
parameter    ap_ST_fsm_state36 = 55'd34359738368;
parameter    ap_ST_fsm_state37 = 55'd68719476736;
parameter    ap_ST_fsm_state38 = 55'd137438953472;
parameter    ap_ST_fsm_state39 = 55'd274877906944;
parameter    ap_ST_fsm_state40 = 55'd549755813888;
parameter    ap_ST_fsm_state41 = 55'd1099511627776;
parameter    ap_ST_fsm_state42 = 55'd2199023255552;
parameter    ap_ST_fsm_state43 = 55'd4398046511104;
parameter    ap_ST_fsm_state44 = 55'd8796093022208;
parameter    ap_ST_fsm_state45 = 55'd17592186044416;
parameter    ap_ST_fsm_state46 = 55'd35184372088832;
parameter    ap_ST_fsm_state47 = 55'd70368744177664;
parameter    ap_ST_fsm_state48 = 55'd140737488355328;
parameter    ap_ST_fsm_state49 = 55'd281474976710656;
parameter    ap_ST_fsm_state50 = 55'd562949953421312;
parameter    ap_ST_fsm_state51 = 55'd1125899906842624;
parameter    ap_ST_fsm_state52 = 55'd2251799813685248;
parameter    ap_ST_fsm_state53 = 55'd4503599627370496;
parameter    ap_ST_fsm_state54 = 55'd9007199254740992;
parameter    ap_ST_fsm_state55 = 55'd18014398509481984;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p_read;
input  [31:0] p_read1;
input  [31:0] p_read2;
input  [31:0] b_p_read;
output  [5:0] b_1_address0;
output   b_1_ce0;
input  [31:0] b_1_q0;
output  [5:0] b_1_address1;
output   b_1_ce1;
input  [31:0] b_1_q1;
input  [3:0] b_1_offset;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] grp_fu_12725_p_din0;
output  [31:0] grp_fu_12725_p_din1;
output  [1:0] grp_fu_12725_p_opcode;
input  [31:0] grp_fu_12725_p_dout0;
output   grp_fu_12725_p_ce;
output  [31:0] grp_fu_4183_p_din0;
output  [31:0] grp_fu_4183_p_din1;
output  [0:0] grp_fu_4183_p_opcode;
input  [31:0] grp_fu_4183_p_dout0;
output   grp_fu_4183_p_ce;
output  [31:0] grp_fu_4190_p_din0;
output  [31:0] grp_fu_4190_p_din1;
output  [1:0] grp_fu_4190_p_opcode;
input  [31:0] grp_fu_4190_p_dout0;
output   grp_fu_4190_p_ce;
output  [31:0] grp_fu_4198_p_din0;
output  [31:0] grp_fu_4198_p_din1;
input  [31:0] grp_fu_4198_p_dout0;
output   grp_fu_4198_p_ce;
output  [31:0] grp_fu_4204_p_din0;
output  [31:0] grp_fu_4204_p_din1;
input  [31:0] grp_fu_4204_p_dout0;
output   grp_fu_4204_p_ce;
output  [31:0] grp_fu_12729_p_din0;
output  [31:0] grp_fu_12729_p_din1;
input  [31:0] grp_fu_12729_p_dout0;
output   grp_fu_12729_p_ce;
output  [31:0] grp_fu_4211_p_din0;
output  [31:0] grp_fu_4211_p_din1;
input  [31:0] grp_fu_4211_p_dout0;
output   grp_fu_4211_p_ce;
output  [31:0] grp_fu_4235_p_din0;
output  [31:0] grp_fu_4235_p_din1;
output  [4:0] grp_fu_4235_p_opcode;
input  [0:0] grp_fu_4235_p_dout0;
output   grp_fu_4235_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] b_1_address0;
reg b_1_ce0;
reg b_1_ce1;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;
reg[31:0] ap_return_2;
reg[31:0] ap_return_3;

(* fsm_encoding = "none" *) reg   [54:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_443;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state54;
reg   [31:0] reg_451;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state26;
reg   [0:0] icmp_ln172_reg_1277;
wire    ap_CS_fsm_state30;
reg   [0:0] icmp_ln172_1_reg_1287;
wire    ap_CS_fsm_state34;
reg   [0:0] icmp_ln172_2_reg_1297;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state51;
reg   [31:0] reg_457;
reg   [31:0] reg_462;
wire   [5:0] sub_ln61_fu_479_p2;
reg   [5:0] sub_ln61_reg_1094;
wire    ap_CS_fsm_state2;
reg   [5:0] b_1_addr_1_reg_1127;
reg   [5:0] b_1_addr_2_reg_1132;
wire   [0:0] icmp_ln61_fu_510_p2;
reg   [0:0] icmp_ln61_reg_1137;
reg   [31:0] normalizer_1_reg_1141;
wire   [0:0] or_ln61_fu_545_p2;
reg   [0:0] or_ln61_reg_1150;
wire    ap_CS_fsm_state3;
wire   [0:0] grp_fu_416_p2;
reg   [0:0] and_ln61_1_reg_1158;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire   [0:0] notlhs13_fu_614_p2;
reg   [0:0] notlhs13_reg_1220;
wire   [0:0] notrhs14_fu_620_p2;
reg   [0:0] notrhs14_reg_1225;
wire   [0:0] res_1_fu_636_p2;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln566_fu_665_p2;
reg   [0:0] icmp_ln566_reg_1243;
wire   [0:0] icmp_ln565_fu_659_p2;
reg   [31:0] eps_2_1_reg_1260;
wire    ap_CS_fsm_state18;
wire   [63:0] zext_ln169_fu_758_p1;
reg   [63:0] zext_ln169_reg_1269;
wire    ap_CS_fsm_state23;
wire   [0:0] icmp_ln172_fu_774_p2;
wire   [0:0] icmp_ln169_fu_762_p2;
wire   [31:0] tmp_9_fu_784_p5;
reg   [31:0] tmp_9_reg_1282;
wire   [0:0] icmp_ln172_1_fu_802_p2;
wire   [31:0] tmp_11_fu_814_p5;
reg   [31:0] tmp_11_reg_1292;
wire   [0:0] icmp_ln172_2_fu_832_p2;
wire   [31:0] tmp_14_fu_844_p5;
reg   [31:0] tmp_14_reg_1302;
wire    ap_CS_fsm_state28;
wire   [31:0] tmp_10_fu_866_p3;
reg   [31:0] tmp_10_reg_1337;
wire    ap_CS_fsm_state32;
wire   [31:0] tmp_13_fu_873_p3;
reg   [31:0] tmp_13_reg_1348;
wire   [31:0] tmp_16_fu_879_p3;
reg   [31:0] tmp_16_reg_1354;
wire    ap_CS_fsm_state38;
reg   [1:0] i_8_reg_1359;
wire    ap_CS_fsm_state40;
wire   [1:0] add_ln187_fu_899_p2;
reg   [1:0] add_ln187_reg_1366;
wire   [0:0] icmp_ln187_fu_893_p2;
reg   [30:0] p_reg_1422;
wire    ap_CS_fsm_state45;
reg   [31:0] tmp_reg_1446;
wire    ap_CS_fsm_state48;
reg   [31:0] tmp_2_reg_1451;
reg   [31:0] tmp_3_reg_1456;
wire   [31:0] grp_fu_411_p2;
reg   [31:0] normalizer_reg_1461;
wire    ap_CS_fsm_state52;
reg   [2:0] aux_address0;
reg    aux_ce0;
reg    aux_we0;
wire   [31:0] aux_q0;
wire   [0:0] ap_phi_mux_res_phi_fu_290_p4;
reg   [0:0] res_reg_286;
reg   [0:0] write_flag_2_reg_298;
wire   [0:0] icmp_ln21_fu_986_p2;
reg   [31:0] agg_result_1_2_reg_309;
reg   [0:0] write_flag4_2_reg_318;
reg   [31:0] agg_result_116_2_reg_329;
reg   [0:0] write_flag8_2_reg_338;
reg   [31:0] agg_result_12_2_reg_349;
reg   [30:0] this_p_write_assign_reg_358;
wire   [63:0] zext_ln61_1_fu_485_p1;
wire   [63:0] zext_ln558_fu_495_p1;
wire   [63:0] zext_ln558_1_fu_505_p1;
wire   [63:0] zext_ln69_1_fu_569_p1;
wire   [63:0] zext_ln566_1_fu_654_p1;
wire    ap_CS_fsm_state39;
wire   [63:0] zext_ln187_fu_888_p1;
reg   [1:0] i_fu_110;
wire   [1:0] add_ln68_fu_580_p2;
wire   [0:0] icmp_ln68_fu_574_p2;
reg   [1:0] i_1_fu_114;
wire   [1:0] add_ln565_fu_671_p2;
reg   [31:0] eps_2_2_fu_118;
wire   [31:0] eps_2_2_6_fu_693_p3;
wire    ap_CS_fsm_state19;
reg   [31:0] eps_2_2_3_fu_122;
wire   [31:0] eps_2_2_5_fu_687_p3;
reg   [31:0] num_res_load_1_fu_126;
wire   [31:0] select_ln567_1_fu_738_p3;
wire    ap_CS_fsm_state22;
reg   [31:0] num_res_load_2_fu_130;
wire   [31:0] select_ln567_fu_731_p3;
reg   [31:0] eps_1_2_fu_134;
wire   [31:0] eps_1_2_6_fu_705_p3;
reg   [31:0] eps_1_2_3_fu_138;
wire   [31:0] eps_1_2_5_fu_699_p3;
reg   [2:0] i_2_fu_142;
wire   [2:0] add_ln169_fu_768_p2;
reg   [1:0] i_3_fu_146;
wire    ap_CS_fsm_state41;
reg   [31:0] eps_3_2_fu_150;
wire    ap_CS_fsm_state42;
reg   [31:0] eps_3_2_1_fu_154;
reg   [31:0] eps_3_2_2_fu_158;
reg   [1:0] i_4_fu_162;
wire   [1:0] add_ln21_fu_992_p2;
wire   [1:0] i_9_load_fu_965_p1;
reg   [31:0] agg_result_12_0_fu_166;
wire   [31:0] tmp_20_fu_998_p5;
reg   [0:0] write_flag8_0_fu_170;
reg   [31:0] agg_result_116_0_fu_174;
reg   [0:0] write_flag4_0_fu_178;
reg   [31:0] agg_result_1_0_fu_182;
reg   [0:0] write_flag_0_fu_186;
wire    ap_CS_fsm_state53;
reg   [31:0] grp_fu_369_p0;
reg   [31:0] grp_fu_369_p1;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state35;
reg   [31:0] grp_fu_383_p0;
reg   [31:0] grp_fu_383_p1;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state49;
reg   [31:0] grp_fu_390_p0;
reg   [31:0] grp_fu_390_p1;
reg   [31:0] grp_fu_395_p0;
reg   [31:0] grp_fu_395_p1;
reg   [31:0] grp_fu_404_p0;
reg   [31:0] grp_fu_404_p1;
reg   [0:0] grp_fu_416_p0;
wire   [5:0] tmp_1_fu_471_p3;
wire   [5:0] zext_ln61_fu_467_p1;
wire   [5:0] add_ln558_fu_490_p2;
wire   [5:0] add_ln558_1_fu_500_p2;
wire   [31:0] bitcast_ln61_fu_516_p1;
wire   [7:0] tmp_4_fu_519_p4;
wire   [22:0] trunc_ln61_fu_529_p1;
wire   [0:0] icmp_ln61_2_fu_539_p2;
wire   [0:0] icmp_ln61_1_fu_533_p2;
wire   [5:0] zext_ln69_fu_560_p1;
wire   [5:0] add_ln69_fu_564_p2;
wire   [31:0] b_1_load_to_int_fu_596_p1;
wire   [7:0] tmp_8_fu_600_p4;
wire   [22:0] empty_28_fu_610_p1;
wire   [0:0] empty_29_fu_626_p2;
wire   [0:0] empty_30_fu_630_p2;
wire   [5:0] zext_ln566_fu_645_p1;
wire   [5:0] add_ln566_fu_649_p2;
wire   [1:0] trunc_ln173_fu_780_p1;
wire   [2:0] add_ln172_fu_796_p2;
wire   [1:0] tmp_11_fu_814_p4;
wire   [2:0] add_ln172_1_fu_826_p2;
wire   [1:0] tmp_14_fu_844_p4;
wire    ap_CS_fsm_state55;
wire  signed [31:0] sext_ln0_fu_1045_p1;
wire   [31:0] select_ln624_fu_1049_p3;
wire   [31:0] select_ln624_1_fu_1056_p3;
wire   [31:0] select_ln624_2_fu_1063_p3;
reg   [31:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [31:0] ap_return_2_preg;
reg   [31:0] ap_return_3_preg;
reg   [54:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
reg    ap_condition_1237;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 55'd1;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 32'd0;
#0 ap_return_2_preg = 32'd0;
#0 ap_return_3_preg = 32'd0;
end

main_sqrt_aux_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
aux_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(aux_address0),
    .ce0(aux_ce0),
    .we0(aux_we0),
    .d0(tmp_16_reg_1354),
    .q0(aux_q0)
);

main_fsqrt_32ns_32ns_32_8_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsqrt_32ns_32ns_32_8_no_dsp_1_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(normalizer_1_reg_1141),
    .ce(1'b1),
    .dout(grp_fu_411_p2)
);

main_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U64(
    .din0(32'd0),
    .din1(eps_1_2_3_fu_138),
    .din2(eps_1_2_fu_134),
    .din3(trunc_ln173_fu_780_p1),
    .dout(tmp_9_fu_784_p5)
);

main_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U65(
    .din0(32'd0),
    .din1(eps_1_2_3_fu_138),
    .din2(eps_1_2_fu_134),
    .din3(tmp_11_fu_814_p4),
    .dout(tmp_11_fu_814_p5)
);

main_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U66(
    .din0(32'd0),
    .din1(eps_1_2_3_fu_138),
    .din2(eps_1_2_fu_134),
    .din3(tmp_14_fu_844_p4),
    .dout(tmp_14_fu_844_p5)
);

main_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U67(
    .din0(reg_451),
    .din1(reg_457),
    .din2(reg_462),
    .din3(i_4_fu_162),
    .dout(tmp_20_fu_998_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state55)) begin
            ap_return_0_preg <= sext_ln0_fu_1045_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state55)) begin
            ap_return_1_preg <= select_ln624_fu_1049_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state55)) begin
            ap_return_2_preg <= select_ln624_1_fu_1056_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state55)) begin
            ap_return_3_preg <= select_ln624_2_fu_1063_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_fu_986_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
        agg_result_116_2_reg_329 <= agg_result_116_0_fu_174;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        agg_result_116_2_reg_329 <= b_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_fu_986_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
        agg_result_12_2_reg_349 <= agg_result_12_0_fu_166;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        agg_result_12_2_reg_349 <= b_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_fu_986_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
        agg_result_1_2_reg_309 <= agg_result_1_0_fu_182;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        agg_result_1_2_reg_309 <= normalizer_1_reg_1141;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & ((icmp_ln61_reg_1137 == 1'd0) | ((1'd0 == and_ln61_1_reg_1158) | ((icmp_ln68_fu_574_p2 == 1'd1) & (ap_phi_mux_res_phi_fu_290_p4 == 1'd0)))))) begin
        i_1_fu_114 <= 2'd1;
    end else if (((icmp_ln565_fu_659_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        i_1_fu_114 <= add_ln565_fu_671_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln565_fu_659_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_2_fu_142 <= 3'd0;
    end else if (((icmp_ln169_fu_762_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        i_2_fu_142 <= add_ln169_fu_768_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln169_fu_762_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        i_3_fu_146 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        i_3_fu_146 <= add_ln187_reg_1366;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln187_fu_893_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        i_4_fu_162 <= 2'd0;
    end else if (((icmp_ln21_fu_986_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state52))) begin
        i_4_fu_162 <= add_ln21_fu_992_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((icmp_ln61_reg_1137 == 1'd1)) begin
        if (((grp_fu_416_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
            i_fu_110 <= 2'd1;
        end else if ((1'b1 == ap_condition_1237)) begin
            i_fu_110 <= add_ln68_fu_580_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_443 <= b_1_q1;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_443 <= b_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_416_p2 == 1'd1) & (icmp_ln61_reg_1137 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        res_reg_286 <= 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        res_reg_286 <= res_1_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_fu_986_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
        this_p_write_assign_reg_358 <= p_reg_1422;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        this_p_write_assign_reg_358 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln187_fu_893_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        write_flag4_0_fu_178 <= 1'd0;
    end else if (((i_9_load_fu_965_p1 == 2'd1) & (icmp_ln21_fu_986_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state52))) begin
        write_flag4_0_fu_178 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_fu_986_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
        write_flag4_2_reg_318 <= write_flag4_0_fu_178;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        write_flag4_2_reg_318 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln187_fu_893_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        write_flag8_0_fu_170 <= 1'd0;
    end else if ((~(i_9_load_fu_965_p1 == 2'd1) & ~(i_9_load_fu_965_p1 == 2'd0) & (icmp_ln21_fu_986_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state52))) begin
        write_flag8_0_fu_170 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_fu_986_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
        write_flag8_2_reg_338 <= write_flag8_0_fu_170;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        write_flag8_2_reg_338 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln187_fu_893_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        write_flag_0_fu_186 <= 1'd0;
    end else if (((i_9_load_fu_965_p1 == 2'd0) & (icmp_ln21_fu_986_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state52))) begin
        write_flag_0_fu_186 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_fu_986_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
        write_flag_2_reg_298 <= write_flag_0_fu_186;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        write_flag_2_reg_298 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        add_ln187_reg_1366 <= add_ln187_fu_899_p2;
        i_8_reg_1359 <= i_3_fu_146;
    end
end

always @ (posedge ap_clk) begin
    if (((i_9_load_fu_965_p1 == 2'd1) & (icmp_ln21_fu_986_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state52))) begin
        agg_result_116_0_fu_174 <= tmp_20_fu_998_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((~(i_9_load_fu_965_p1 == 2'd1) & ~(i_9_load_fu_965_p1 == 2'd0) & (icmp_ln21_fu_986_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state52))) begin
        agg_result_12_0_fu_166 <= tmp_20_fu_998_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((i_9_load_fu_965_p1 == 2'd0) & (icmp_ln21_fu_986_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state52))) begin
        agg_result_1_0_fu_182 <= tmp_20_fu_998_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln61_reg_1137 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        and_ln61_1_reg_1158 <= grp_fu_416_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        b_1_addr_1_reg_1127 <= zext_ln558_fu_495_p1;
        b_1_addr_2_reg_1132 <= zext_ln558_1_fu_505_p1;
        icmp_ln61_reg_1137 <= icmp_ln61_fu_510_p2;
        normalizer_1_reg_1141 <= b_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        eps_1_2_3_fu_138 <= eps_1_2_5_fu_699_p3;
        eps_1_2_fu_134 <= eps_1_2_6_fu_705_p3;
        eps_2_2_3_fu_122 <= eps_2_2_5_fu_687_p3;
        eps_2_2_fu_118 <= eps_2_2_6_fu_693_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        eps_2_1_reg_1260 <= grp_fu_4211_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((i_8_reg_1359 == 2'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        eps_3_2_1_fu_154 <= aux_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((i_8_reg_1359 == 2'd0) & (1'b1 == ap_CS_fsm_state41))) begin
        eps_3_2_2_fu_158 <= aux_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(i_8_reg_1359 == 2'd1) & ~(i_8_reg_1359 == 2'd0) & (1'b1 == ap_CS_fsm_state41))) begin
        eps_3_2_fu_150 <= aux_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln169_fu_762_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        icmp_ln172_1_reg_1287 <= icmp_ln172_1_fu_802_p2;
        icmp_ln172_2_reg_1297 <= icmp_ln172_2_fu_832_p2;
        icmp_ln172_reg_1277 <= icmp_ln172_fu_774_p2;
        tmp_11_reg_1292 <= tmp_11_fu_814_p5;
        tmp_14_reg_1302 <= tmp_14_fu_844_p5;
        tmp_9_reg_1282 <= tmp_9_fu_784_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln565_fu_659_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        icmp_ln566_reg_1243 <= icmp_ln566_fu_665_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        normalizer_reg_1461 <= grp_fu_411_p2;
        tmp_2_reg_1451 <= grp_fu_4183_p_dout0;
        tmp_3_reg_1456 <= grp_fu_4190_p_dout0;
        tmp_reg_1446 <= grp_fu_12725_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        notlhs13_reg_1220 <= notlhs13_fu_614_p2;
        notrhs14_reg_1225 <= notrhs14_fu_620_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        num_res_load_1_fu_126 <= select_ln567_1_fu_738_p3;
        num_res_load_2_fu_130 <= select_ln567_fu_731_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        or_ln61_reg_1150 <= or_ln61_fu_545_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln187_fu_893_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        p_reg_1422 <= {{b_p_read[31:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state34) & (icmp_ln172_2_reg_1297 == 1'd1)) | ((1'b1 == ap_CS_fsm_state30) & (icmp_ln172_1_reg_1287 == 1'd1)) | ((1'b1 == ap_CS_fsm_state26) & (icmp_ln172_reg_1277 == 1'd1)))) begin
        reg_451 <= grp_fu_4198_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state44))) begin
        reg_457 <= grp_fu_4204_p_dout0;
        reg_462 <= grp_fu_12729_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        sub_ln61_reg_1094 <= sub_ln61_fu_479_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        tmp_10_reg_1337 <= tmp_10_fu_866_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        tmp_13_reg_1348 <= tmp_13_fu_873_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        tmp_16_reg_1354 <= tmp_16_fu_879_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        zext_ln169_reg_1269[2 : 0] <= zext_ln169_fu_758_p1[2 : 0];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        ap_return_0 = sext_ln0_fu_1045_p1;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        ap_return_1 = select_ln624_fu_1049_p3;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        ap_return_2 = select_ln624_1_fu_1056_p3;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        ap_return_3 = select_ln624_2_fu_1063_p3;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        aux_address0 = zext_ln187_fu_888_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        aux_address0 = zext_ln169_reg_1269;
    end else begin
        aux_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40))) begin
        aux_ce0 = 1'b1;
    end else begin
        aux_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        aux_we0 = 1'b1;
    end else begin
        aux_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        b_1_address0 = b_1_addr_2_reg_1132;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_1_address0 = zext_ln566_1_fu_654_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_1_address0 = zext_ln69_1_fu_569_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_1_address0 = zext_ln61_1_fu_485_p1;
    end else begin
        b_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        b_1_ce0 = 1'b1;
    end else begin
        b_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        b_1_ce1 = 1'b1;
    end else begin
        b_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_369_p0 = tmp_13_reg_1348;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_369_p0 = tmp_10_reg_1337;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_369_p0 = reg_451;
    end else begin
        grp_fu_369_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_369_p1 = 32'd1065353216;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_369_p1 = reg_451;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_369_p1 = 32'd0;
    end else begin
        grp_fu_369_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_383_p0 = tmp_reg_1446;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_383_p0 = eps_3_2_2_fu_158;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_383_p0 = tmp_14_reg_1302;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_383_p0 = tmp_11_reg_1292;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_383_p0 = tmp_9_reg_1282;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_383_p0 = eps_2_1_reg_1260;
    end else begin
        grp_fu_383_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_383_p1 = normalizer_reg_1461;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_383_p1 = 32'd3187671040;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_383_p1 = eps_2_2_fu_118;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_383_p1 = eps_2_2_3_fu_122;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_383_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_383_p1 = 32'd1056964608;
    end else begin
        grp_fu_383_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_390_p0 = tmp_2_reg_1451;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_390_p0 = eps_3_2_1_fu_154;
    end else begin
        grp_fu_390_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_390_p1 = normalizer_reg_1461;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_390_p1 = 32'd3187671040;
    end else begin
        grp_fu_390_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_395_p0 = tmp_3_reg_1456;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_395_p0 = eps_3_2_fu_150;
    end else begin
        grp_fu_395_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_395_p1 = normalizer_reg_1461;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_395_p1 = 32'd3187671040;
    end else begin
        grp_fu_395_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_404_p0 = normalizer_1_reg_1141;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_fu_404_p0 = b_1_q0;
    end else begin
        grp_fu_404_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_404_p1 = 32'd1065353216;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_fu_404_p1 = 32'd0;
    end else begin
        grp_fu_404_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_416_p0 = or_ln61_reg_1150;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_416_p0 = or_ln61_fu_545_p2;
    end else begin
        grp_fu_416_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln61_fu_510_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_fu_416_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & ((icmp_ln61_reg_1137 == 1'd0) | ((1'd0 == and_ln61_1_reg_1158) | ((icmp_ln68_fu_574_p2 == 1'd1) & (ap_phi_mux_res_phi_fu_290_p4 == 1'd0)))))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((icmp_ln68_fu_574_p2 == 1'd1) & (ap_phi_mux_res_phi_fu_290_p4 == 1'd1) & (icmp_ln61_reg_1137 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (1'd1 == and_ln61_1_reg_1158))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln565_fu_659_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state23 : begin
            if (((icmp_ln169_fu_762_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state40 : begin
            if (((icmp_ln187_fu_893_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            if (((icmp_ln21_fu_986_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln169_fu_768_p2 = (i_2_fu_142 + 3'd1);

assign add_ln172_1_fu_826_p2 = ($signed(i_2_fu_142) + $signed(3'd6));

assign add_ln172_fu_796_p2 = ($signed(i_2_fu_142) + $signed(3'd7));

assign add_ln187_fu_899_p2 = (i_3_fu_146 + 2'd1);

assign add_ln21_fu_992_p2 = (i_4_fu_162 + 2'd1);

assign add_ln558_1_fu_500_p2 = (sub_ln61_reg_1094 + 6'd2);

assign add_ln558_fu_490_p2 = (sub_ln61_reg_1094 + 6'd1);

assign add_ln565_fu_671_p2 = (i_1_fu_114 + 2'd1);

assign add_ln566_fu_649_p2 = (sub_ln61_reg_1094 + zext_ln566_fu_645_p1);

assign add_ln68_fu_580_p2 = (i_fu_110 + 2'd1);

assign add_ln69_fu_564_p2 = (sub_ln61_reg_1094 + zext_ln69_fu_560_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_condition_1237 = ((icmp_ln68_fu_574_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (1'd1 == and_ln61_1_reg_1158));
end

assign ap_phi_mux_res_phi_fu_290_p4 = res_reg_286;

assign b_1_address1 = b_1_addr_1_reg_1127;

assign b_1_load_to_int_fu_596_p1 = b_1_q0;

assign bitcast_ln61_fu_516_p1 = normalizer_1_reg_1141;

assign empty_28_fu_610_p1 = b_1_load_to_int_fu_596_p1[22:0];

assign empty_29_fu_626_p2 = (notrhs14_reg_1225 | notlhs13_reg_1220);

assign empty_30_fu_630_p2 = (grp_fu_4235_p_dout0 & empty_29_fu_626_p2);

assign eps_1_2_5_fu_699_p3 = ((icmp_ln566_reg_1243[0:0] == 1'b1) ? eps_2_1_reg_1260 : eps_1_2_3_fu_138);

assign eps_1_2_6_fu_705_p3 = ((icmp_ln566_reg_1243[0:0] == 1'b1) ? eps_1_2_fu_134 : eps_2_1_reg_1260);

assign eps_2_2_5_fu_687_p3 = ((icmp_ln566_reg_1243[0:0] == 1'b1) ? eps_2_1_reg_1260 : eps_2_2_3_fu_122);

assign eps_2_2_6_fu_693_p3 = ((icmp_ln566_reg_1243[0:0] == 1'b1) ? eps_2_2_fu_118 : eps_2_1_reg_1260);

assign grp_fu_12725_p_ce = 1'b1;

assign grp_fu_12725_p_din0 = grp_fu_369_p0;

assign grp_fu_12725_p_din1 = grp_fu_369_p1;

assign grp_fu_12725_p_opcode = 2'd0;

assign grp_fu_12729_p_ce = 1'b1;

assign grp_fu_12729_p_din0 = grp_fu_395_p0;

assign grp_fu_12729_p_din1 = grp_fu_395_p1;

assign grp_fu_416_p2 = (grp_fu_4235_p_dout0 & grp_fu_416_p0);

assign grp_fu_4183_p_ce = 1'b1;

assign grp_fu_4183_p_din0 = num_res_load_1_fu_126;

assign grp_fu_4183_p_din1 = reg_457;

assign grp_fu_4183_p_opcode = 2'd0;

assign grp_fu_4190_p_ce = 1'b1;

assign grp_fu_4190_p_din0 = num_res_load_2_fu_130;

assign grp_fu_4190_p_din1 = reg_462;

assign grp_fu_4190_p_opcode = 2'd0;

assign grp_fu_4198_p_ce = 1'b1;

assign grp_fu_4198_p_din0 = grp_fu_383_p0;

assign grp_fu_4198_p_din1 = grp_fu_383_p1;

assign grp_fu_4204_p_ce = 1'b1;

assign grp_fu_4204_p_din0 = grp_fu_390_p0;

assign grp_fu_4204_p_din1 = grp_fu_390_p1;

assign grp_fu_4211_p_ce = 1'b1;

assign grp_fu_4211_p_din0 = reg_443;

assign grp_fu_4211_p_din1 = normalizer_1_reg_1141;

assign grp_fu_4235_p_ce = 1'b1;

assign grp_fu_4235_p_din0 = grp_fu_404_p0;

assign grp_fu_4235_p_din1 = grp_fu_404_p1;

assign grp_fu_4235_p_opcode = 5'd1;

assign i_9_load_fu_965_p1 = i_4_fu_162;

assign icmp_ln169_fu_762_p2 = ((i_2_fu_142 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln172_1_fu_802_p2 = ((add_ln172_fu_796_p2 < 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln172_2_fu_832_p2 = ((add_ln172_1_fu_826_p2 < 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln172_fu_774_p2 = ((i_2_fu_142 < 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln187_fu_893_p2 = ((i_3_fu_146 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_986_p2 = ((i_4_fu_162 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln565_fu_659_p2 = ((i_1_fu_114 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln566_fu_665_p2 = ((i_1_fu_114 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln61_1_fu_533_p2 = ((tmp_4_fu_519_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln61_2_fu_539_p2 = ((trunc_ln61_fu_529_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_510_p2 = ((b_p_read == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_574_p2 = ((i_fu_110 == 2'd3) ? 1'b1 : 1'b0);

assign notlhs13_fu_614_p2 = ((tmp_8_fu_600_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs14_fu_620_p2 = ((empty_28_fu_610_p1 == 23'd0) ? 1'b1 : 1'b0);

assign or_ln61_fu_545_p2 = (icmp_ln61_2_fu_539_p2 | icmp_ln61_1_fu_533_p2);

assign res_1_fu_636_p2 = (res_reg_286 & empty_30_fu_630_p2);

assign select_ln567_1_fu_738_p3 = ((icmp_ln566_reg_1243[0:0] == 1'b1) ? reg_451 : num_res_load_1_fu_126);

assign select_ln567_fu_731_p3 = ((icmp_ln566_reg_1243[0:0] == 1'b1) ? num_res_load_2_fu_130 : reg_451);

assign select_ln624_1_fu_1056_p3 = ((write_flag4_2_reg_318[0:0] == 1'b1) ? agg_result_116_2_reg_329 : p_read1);

assign select_ln624_2_fu_1063_p3 = ((write_flag8_2_reg_338[0:0] == 1'b1) ? agg_result_12_2_reg_349 : p_read2);

assign select_ln624_fu_1049_p3 = ((write_flag_2_reg_298[0:0] == 1'b1) ? agg_result_1_2_reg_309 : p_read);

assign sext_ln0_fu_1045_p1 = $signed(this_p_write_assign_reg_358);

assign sub_ln61_fu_479_p2 = (tmp_1_fu_471_p3 - zext_ln61_fu_467_p1);

assign tmp_10_fu_866_p3 = ((icmp_ln172_reg_1277[0:0] == 1'b1) ? grp_fu_12725_p_dout0 : 32'd0);

assign tmp_11_fu_814_p4 = ($signed(trunc_ln173_fu_780_p1) + $signed(2'd3));

assign tmp_13_fu_873_p3 = ((icmp_ln172_1_reg_1287[0:0] == 1'b1) ? grp_fu_12725_p_dout0 : tmp_10_reg_1337);

assign tmp_14_fu_844_p4 = (trunc_ln173_fu_780_p1 ^ 2'd2);

assign tmp_16_fu_879_p3 = ((icmp_ln172_2_reg_1297[0:0] == 1'b1) ? grp_fu_12725_p_dout0 : tmp_13_reg_1348);

assign tmp_1_fu_471_p3 = {{b_1_offset}, {2'd0}};

assign tmp_4_fu_519_p4 = {{bitcast_ln61_fu_516_p1[30:23]}};

assign tmp_8_fu_600_p4 = {{b_1_load_to_int_fu_596_p1[30:23]}};

assign trunc_ln173_fu_780_p1 = i_2_fu_142[1:0];

assign trunc_ln61_fu_529_p1 = bitcast_ln61_fu_516_p1[22:0];

assign zext_ln169_fu_758_p1 = i_2_fu_142;

assign zext_ln187_fu_888_p1 = i_3_fu_146;

assign zext_ln558_1_fu_505_p1 = add_ln558_1_fu_500_p2;

assign zext_ln558_fu_495_p1 = add_ln558_fu_490_p2;

assign zext_ln566_1_fu_654_p1 = add_ln566_fu_649_p2;

assign zext_ln566_fu_645_p1 = i_1_fu_114;

assign zext_ln61_1_fu_485_p1 = sub_ln61_fu_479_p2;

assign zext_ln61_fu_467_p1 = b_1_offset;

assign zext_ln69_1_fu_569_p1 = add_ln69_fu_564_p2;

assign zext_ln69_fu_560_p1 = i_fu_110;

always @ (posedge ap_clk) begin
    zext_ln169_reg_1269[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //main_sqrt
