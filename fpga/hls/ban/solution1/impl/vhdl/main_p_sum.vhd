-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity main_p_sum is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    b_num_offset : IN STD_LOGIC_VECTOR (1 downto 0);
    diff_p : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of main_p_sum is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal sub_ln109_fu_143_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln109_reg_307 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln75_fu_172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln75_reg_315 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln75_2_fu_178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln75_2_reg_320 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln75_1_fu_207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln75_1_reg_331 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal targetBlock_reg_335 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal or_ln86_fu_225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_reg_343 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal sub_ln86_fu_230_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln86_reg_347 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln98_fu_261_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln98_reg_352 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_ap_start : STD_LOGIC;
    signal grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_ap_done : STD_LOGIC;
    signal grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_ap_idle : STD_LOGIC;
    signal grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_ap_ready : STD_LOGIC;
    signal grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_agg_result_num_load_31616_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_agg_result_num_load_31616_out_ap_vld : STD_LOGIC;
    signal grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_agg_result_num_load_2226_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_agg_result_num_load_2226_out_ap_vld : STD_LOGIC;
    signal grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_agg_result_num_load_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_agg_result_num_load_1_out_ap_vld : STD_LOGIC;
    signal grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_start : STD_LOGIC;
    signal grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_done : STD_LOGIC;
    signal grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_idle : STD_LOGIC;
    signal grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_ready : STD_LOGIC;
    signal grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_idx_out : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_idx_out_ap_vld : STD_LOGIC;
    signal grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_idx_2_out : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_idx_2_out_ap_vld : STD_LOGIC;
    signal grp_p_sum_Pipeline_VITIS_LOOP_86_2_fu_110_ap_start : STD_LOGIC;
    signal grp_p_sum_Pipeline_VITIS_LOOP_86_2_fu_110_ap_done : STD_LOGIC;
    signal grp_p_sum_Pipeline_VITIS_LOOP_86_2_fu_110_ap_idle : STD_LOGIC;
    signal grp_p_sum_Pipeline_VITIS_LOOP_86_2_fu_110_ap_ready : STD_LOGIC;
    signal grp_p_sum_Pipeline_VITIS_LOOP_98_3_fu_115_ap_start : STD_LOGIC;
    signal grp_p_sum_Pipeline_VITIS_LOOP_98_3_fu_115_ap_done : STD_LOGIC;
    signal grp_p_sum_Pipeline_VITIS_LOOP_98_3_fu_115_ap_idle : STD_LOGIC;
    signal grp_p_sum_Pipeline_VITIS_LOOP_98_3_fu_115_ap_ready : STD_LOGIC;
    signal base_fu_242_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_base_0_lcssa_i69_phi_fu_80_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal base_0_lcssa_i69_reg_76 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state7_on_subcall_done : BOOLEAN;
    signal grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_start_reg : STD_LOGIC := '0';
    signal idx_loc_fu_48 : STD_LOGIC_VECTOR (1 downto 0);
    signal idx_2_loc_fu_44 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_sum_Pipeline_VITIS_LOOP_86_2_fu_110_ap_start_reg : STD_LOGIC := '0';
    signal grp_p_sum_Pipeline_VITIS_LOOP_98_3_fu_115_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_1_fu_131_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln109_1_fu_139_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln109_fu_127_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal bitcast_ln75_fu_154_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_158_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln75_fu_168_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln75_fu_197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln75_fu_201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln75_fu_192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_fu_219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln86_1_fu_237_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln98_fu_249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln98_fu_255_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state8_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component main_p_sum_Pipeline_VITIS_LOOP_108_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln108 : IN STD_LOGIC_VECTOR (0 downto 0);
        zext_ln108_1 : IN STD_LOGIC_VECTOR (0 downto 0);
        sub_ln109_1 : IN STD_LOGIC_VECTOR (4 downto 0);
        agg_result_num_load_31616_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        agg_result_num_load_31616_out_ap_vld : OUT STD_LOGIC;
        agg_result_num_load_2226_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        agg_result_num_load_2226_out_ap_vld : OUT STD_LOGIC;
        agg_result_num_load_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        agg_result_num_load_1_out_ap_vld : OUT STD_LOGIC );
    end component;


    component main_p_sum_Pipeline_VITIS_LOOP_80_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        agg_result_num_load_2226_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        agg_result_num_load_31616_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        idx_out : OUT STD_LOGIC_VECTOR (1 downto 0);
        idx_out_ap_vld : OUT STD_LOGIC;
        idx_2_out : OUT STD_LOGIC_VECTOR (1 downto 0);
        idx_2_out_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component main_p_sum_Pipeline_VITIS_LOOP_86_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sub_ln86 : IN STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component main_p_sum_Pipeline_VITIS_LOOP_98_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln98 : IN STD_LOGIC_VECTOR (1 downto 0);
        zext_ln98_1 : IN STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component main_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88 : component main_p_sum_Pipeline_VITIS_LOOP_108_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_ap_start,
        ap_done => grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_ap_done,
        ap_idle => grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_ap_idle,
        ap_ready => grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_ap_ready,
        zext_ln108 => diff_p,
        zext_ln108_1 => diff_p,
        sub_ln109_1 => sub_ln109_reg_307,
        agg_result_num_load_31616_out => grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_agg_result_num_load_31616_out,
        agg_result_num_load_31616_out_ap_vld => grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_agg_result_num_load_31616_out_ap_vld,
        agg_result_num_load_2226_out => grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_agg_result_num_load_2226_out,
        agg_result_num_load_2226_out_ap_vld => grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_agg_result_num_load_2226_out_ap_vld,
        agg_result_num_load_1_out => grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_agg_result_num_load_1_out,
        agg_result_num_load_1_out_ap_vld => grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_agg_result_num_load_1_out_ap_vld);

    grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102 : component main_p_sum_Pipeline_VITIS_LOOP_80_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_start,
        ap_done => grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_done,
        ap_idle => grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_idle,
        ap_ready => grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_ready,
        agg_result_num_load_2226_reload => grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_agg_result_num_load_2226_out,
        agg_result_num_load_31616_reload => grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_agg_result_num_load_31616_out,
        idx_out => grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_idx_out,
        idx_out_ap_vld => grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_idx_out_ap_vld,
        idx_2_out => grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_idx_2_out,
        idx_2_out_ap_vld => grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_idx_2_out_ap_vld,
        ap_return => grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_return);

    grp_p_sum_Pipeline_VITIS_LOOP_86_2_fu_110 : component main_p_sum_Pipeline_VITIS_LOOP_86_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_p_sum_Pipeline_VITIS_LOOP_86_2_fu_110_ap_start,
        ap_done => grp_p_sum_Pipeline_VITIS_LOOP_86_2_fu_110_ap_done,
        ap_idle => grp_p_sum_Pipeline_VITIS_LOOP_86_2_fu_110_ap_idle,
        ap_ready => grp_p_sum_Pipeline_VITIS_LOOP_86_2_fu_110_ap_ready,
        sub_ln86 => sub_ln86_reg_347);

    grp_p_sum_Pipeline_VITIS_LOOP_98_3_fu_115 : component main_p_sum_Pipeline_VITIS_LOOP_98_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_p_sum_Pipeline_VITIS_LOOP_98_3_fu_115_ap_start,
        ap_done => grp_p_sum_Pipeline_VITIS_LOOP_98_3_fu_115_ap_done,
        ap_idle => grp_p_sum_Pipeline_VITIS_LOOP_98_3_fu_115_ap_idle,
        ap_ready => grp_p_sum_Pipeline_VITIS_LOOP_98_3_fu_115_ap_ready,
        zext_ln98 => base_0_lcssa_i69_reg_76,
        zext_ln98_1 => select_ln98_reg_352);

    fcmp_32ns_32ns_1_2_no_dsp_1_U21 : component main_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_agg_result_num_load_1_out,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_1,
        dout => grp_fu_122_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_ap_ready = ap_const_logic_1)) then 
                    grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln75_1_fu_207_p2))) then 
                    grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_ready = ap_const_logic_1)) then 
                    grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_p_sum_Pipeline_VITIS_LOOP_86_2_fu_110_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_sum_Pipeline_VITIS_LOOP_86_2_fu_110_ap_start_reg <= ap_const_logic_0;
            else
                if (((or_ln86_fu_225_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    grp_p_sum_Pipeline_VITIS_LOOP_86_2_fu_110_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_sum_Pipeline_VITIS_LOOP_86_2_fu_110_ap_ready = ap_const_logic_1)) then 
                    grp_p_sum_Pipeline_VITIS_LOOP_86_2_fu_110_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_p_sum_Pipeline_VITIS_LOOP_98_3_fu_115_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_sum_Pipeline_VITIS_LOOP_98_3_fu_115_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done))) then 
                    grp_p_sum_Pipeline_VITIS_LOOP_98_3_fu_115_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_sum_Pipeline_VITIS_LOOP_98_3_fu_115_ap_ready = ap_const_logic_1)) then 
                    grp_p_sum_Pipeline_VITIS_LOOP_98_3_fu_115_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    base_0_lcssa_i69_reg_76_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln86_fu_225_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                base_0_lcssa_i69_reg_76 <= ap_const_lv2_0;
            elsif (((or_ln86_reg_343 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done))) then 
                base_0_lcssa_i69_reg_76 <= base_fu_242_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                and_ln75_1_reg_331 <= and_ln75_1_fu_207_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                icmp_ln75_2_reg_320 <= icmp_ln75_2_fu_178_p2;
                icmp_ln75_reg_315 <= icmp_ln75_fu_172_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_idx_2_out_ap_vld = ap_const_logic_1))) then
                idx_2_loc_fu_44 <= grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_idx_2_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_idx_out_ap_vld = ap_const_logic_1))) then
                idx_loc_fu_48 <= grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_idx_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                or_ln86_reg_343 <= or_ln86_fu_225_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                select_ln98_reg_352 <= select_ln98_fu_261_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                sub_ln109_reg_307 <= sub_ln109_fu_143_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln86_fu_225_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                sub_ln86_reg_347 <= sub_ln86_fu_230_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                targetBlock_reg_335 <= grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_return;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, and_ln75_1_fu_207_p2, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state7, grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_ap_done, grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_done, ap_block_state7_on_subcall_done, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_block_state8_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_lv1_0 = and_ln75_1_fu_207_p2) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln98_fu_255_p2 <= std_logic_vector(unsigned(ap_phi_mux_base_0_lcssa_i69_phi_fu_80_p4) + unsigned(ap_const_lv2_1));
    and_ln75_1_fu_207_p2 <= (xor_ln75_fu_192_p2 and and_ln75_fu_201_p2);
    and_ln75_fu_201_p2 <= (or_ln75_fu_197_p2 and grp_fu_122_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_ap_done)
    begin
        if ((grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_done)
    begin
        if ((grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(ap_block_state7_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state7_on_subcall_done)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(ap_block_state8_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state8_on_subcall_done)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state7_on_subcall_done_assign_proc : process(or_ln86_reg_343, grp_p_sum_Pipeline_VITIS_LOOP_86_2_fu_110_ap_done)
    begin
                ap_block_state7_on_subcall_done <= ((or_ln86_reg_343 = ap_const_lv1_0) and (grp_p_sum_Pipeline_VITIS_LOOP_86_2_fu_110_ap_done = ap_const_logic_0));
    end process;


    ap_block_state8_on_subcall_done_assign_proc : process(and_ln75_1_reg_331, grp_p_sum_Pipeline_VITIS_LOOP_98_3_fu_115_ap_done)
    begin
                ap_block_state8_on_subcall_done <= ((ap_const_lv1_1 = and_ln75_1_reg_331) and (grp_p_sum_Pipeline_VITIS_LOOP_98_3_fu_115_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state8, ap_block_state8_on_subcall_done)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_base_0_lcssa_i69_phi_fu_80_p4_assign_proc : process(or_ln86_reg_343, ap_CS_fsm_state7, base_fu_242_p2, base_0_lcssa_i69_reg_76)
    begin
        if (((or_ln86_reg_343 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_phi_mux_base_0_lcssa_i69_phi_fu_80_p4 <= base_fu_242_p2;
        else 
            ap_phi_mux_base_0_lcssa_i69_phi_fu_80_p4 <= base_0_lcssa_i69_reg_76;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8, ap_block_state8_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    base_fu_242_p2 <= std_logic_vector(unsigned(sub_ln86_1_fu_237_p2) + unsigned(ap_const_lv2_1));
    bitcast_ln75_fu_154_p1 <= grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_agg_result_num_load_1_out;
    grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_ap_start <= grp_p_sum_Pipeline_VITIS_LOOP_108_1_fu_88_ap_start_reg;
    grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_start <= grp_p_sum_Pipeline_VITIS_LOOP_80_1_fu_102_ap_start_reg;
    grp_p_sum_Pipeline_VITIS_LOOP_86_2_fu_110_ap_start <= grp_p_sum_Pipeline_VITIS_LOOP_86_2_fu_110_ap_start_reg;
    grp_p_sum_Pipeline_VITIS_LOOP_98_3_fu_115_ap_start <= grp_p_sum_Pipeline_VITIS_LOOP_98_3_fu_115_ap_start_reg;
    icmp_ln75_2_fu_178_p2 <= "1" when (trunc_ln75_fu_168_p1 = ap_const_lv23_0) else "0";
    icmp_ln75_fu_172_p2 <= "0" when (tmp_4_fu_158_p4 = ap_const_lv8_FF) else "1";
    icmp_ln86_fu_219_p2 <= "1" when (idx_2_loc_fu_44 = ap_const_lv2_3) else "0";
    icmp_ln98_fu_249_p2 <= "0" when (ap_phi_mux_base_0_lcssa_i69_phi_fu_80_p4 = ap_const_lv2_3) else "1";
    or_ln75_fu_197_p2 <= (icmp_ln75_reg_315 or icmp_ln75_2_reg_320);
    or_ln86_fu_225_p2 <= (targetBlock_reg_335 or icmp_ln86_fu_219_p2);
    select_ln98_fu_261_p3 <= 
        ap_const_lv2_3 when (icmp_ln98_fu_249_p2(0) = '1') else 
        add_ln98_fu_255_p2;
    sub_ln109_fu_143_p2 <= std_logic_vector(unsigned(zext_ln109_1_fu_139_p1) - unsigned(zext_ln109_fu_127_p1));
    sub_ln86_1_fu_237_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) - unsigned(idx_loc_fu_48));
    sub_ln86_fu_230_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(idx_loc_fu_48));
    tmp_1_fu_131_p3 <= (b_num_offset & ap_const_lv2_0);
    tmp_4_fu_158_p4 <= bitcast_ln75_fu_154_p1(30 downto 23);
    trunc_ln75_fu_168_p1 <= bitcast_ln75_fu_154_p1(23 - 1 downto 0);
    xor_ln75_fu_192_p2 <= (diff_p xor ap_const_lv1_1);
    zext_ln109_1_fu_139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_131_p3),5));
    zext_ln109_fu_127_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_num_offset),5));
end behav;
