-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity main_operator_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    this_p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read14 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read25 : IN STD_LOGIC_VECTOR (31 downto 0);
    b_p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    b_num_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    b_num_ce0 : OUT STD_LOGIC;
    b_num_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    b_num_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    b_num_ce1 : OUT STD_LOGIC;
    b_num_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    b_num_offset : IN STD_LOGIC_VECTOR (11 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12738_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12738_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12738_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_12738_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12738_p_ce : OUT STD_LOGIC;
    grp_fu_4230_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4230_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4230_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_4230_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_4230_p_ce : OUT STD_LOGIC );
end;


architecture behav of main_operator_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (19 downto 0) := "00000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (19 downto 0) := "00000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (19 downto 0) := "00000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (19 downto 0) := "00001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (19 downto 0) := "00010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (19 downto 0) := "00100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_233 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal b_num_addr_reg_537 : STD_LOGIC_VECTOR (12 downto 0);
    signal b_num_addr_1_reg_543 : STD_LOGIC_VECTOR (12 downto 0);
    signal b_num_addr_2_reg_549 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln60_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln60_reg_555 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln60_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln60_reg_559 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln60_9_fu_336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln60_9_reg_563 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln60_10_fu_359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln60_10_reg_567 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln60_11_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln60_11_reg_572 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln60_2_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln60_2_reg_577 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal trunc_ln136_fu_385_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln136_reg_581 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln139_fu_389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln139_reg_588 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln142_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln142_reg_592 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_94_fu_401_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_94_reg_596 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal sub_ln115_fu_425_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln115_reg_620 : STD_LOGIC_VECTOR (1 downto 0);
    signal b_num_load_7_reg_625 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_95_reg_630 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_num_load_9_reg_634 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal select_ln115_fu_441_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal tmp_86_fu_453_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_num_load_4_reg_654 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal b_num_load_reg_669 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_p_sum_2_fu_209_ap_start : STD_LOGIC;
    signal grp_p_sum_2_fu_209_ap_done : STD_LOGIC;
    signal grp_p_sum_2_fu_209_ap_idle : STD_LOGIC;
    signal grp_p_sum_2_fu_209_ap_ready : STD_LOGIC;
    signal grp_p_sum_2_fu_209_b_num_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_p_sum_2_fu_209_b_num_ce0 : STD_LOGIC;
    signal grp_p_sum_2_fu_209_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_sum_2_fu_209_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_sum_2_fu_209_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_sum_2_fu_209_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_sum_2_fu_209_grp_fu_221_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_sum_2_fu_209_grp_fu_221_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_sum_2_fu_209_grp_fu_221_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_p_sum_2_fu_209_grp_fu_221_p_ce : STD_LOGIC;
    signal grp_p_sum_2_fu_209_grp_fu_226_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_sum_2_fu_209_grp_fu_226_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_sum_2_fu_209_grp_fu_226_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_sum_2_fu_209_grp_fu_226_p_ce : STD_LOGIC;
    signal agg_result_num16_0_i_reg_130 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_agg_result_1_0_phi_fu_143_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_result_1_0_reg_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_phi_mux_agg_result_112_0_phi_fu_160_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_result_112_0_reg_157 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_agg_result_12_0_phi_fu_178_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_result_12_0_reg_175 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_agg_result_01_0_phi_fu_195_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_result_01_0_reg_192 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_sum_2_fu_209_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal zext_ln131_1_fu_262_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln131_2_fu_273_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln131_3_fu_284_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_fu_221_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_221_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_226_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_226_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln131_fu_244_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_119_cast_fu_248_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln131_fu_240_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln131_fu_256_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln131_fu_267_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln131_1_fu_278_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal bitcast_ln60_fu_295_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_298_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln60_fu_308_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln60_8_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln60_7_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln60_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln60_1_fu_341_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_fu_345_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln60_1_fu_355_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln60_1_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal diff_p_fu_381_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln115_fu_438_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_fu_453_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_221_ce : STD_LOGIC;
    signal grp_fu_226_ce : STD_LOGIC;
    signal grp_fu_226_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_3_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component main_p_sum_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read13 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read25 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_num_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        b_num_ce0 : OUT STD_LOGIC;
        b_num_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_num_offset : IN STD_LOGIC_VECTOR (11 downto 0);
        diff_p : IN STD_LOGIC_VECTOR (1 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_221_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_221_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_221_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_221_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_221_p_ce : OUT STD_LOGIC;
        grp_fu_226_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_226_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_226_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_226_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_226_p_ce : OUT STD_LOGIC );
    end component;


    component main_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component main_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component main_mux_32_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_p_sum_2_fu_209 : component main_p_sum_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_p_sum_2_fu_209_ap_start,
        ap_done => grp_p_sum_2_fu_209_ap_done,
        ap_idle => grp_p_sum_2_fu_209_ap_idle,
        ap_ready => grp_p_sum_2_fu_209_ap_ready,
        p_read13 => this_p_read,
        p_read4 => p_read3,
        p_read25 => p_read14,
        p_read3 => p_read25,
        b_num_address0 => grp_p_sum_2_fu_209_b_num_address0,
        b_num_ce0 => grp_p_sum_2_fu_209_b_num_ce0,
        b_num_q0 => b_num_q0,
        b_num_offset => b_num_offset,
        diff_p => trunc_ln136_reg_581,
        ap_return_0 => grp_p_sum_2_fu_209_ap_return_0,
        ap_return_1 => grp_p_sum_2_fu_209_ap_return_1,
        ap_return_2 => grp_p_sum_2_fu_209_ap_return_2,
        ap_return_3 => grp_p_sum_2_fu_209_ap_return_3,
        grp_fu_221_p_din0 => grp_p_sum_2_fu_209_grp_fu_221_p_din0,
        grp_fu_221_p_din1 => grp_p_sum_2_fu_209_grp_fu_221_p_din1,
        grp_fu_221_p_opcode => grp_p_sum_2_fu_209_grp_fu_221_p_opcode,
        grp_fu_221_p_dout0 => grp_fu_12738_p_dout0,
        grp_fu_221_p_ce => grp_p_sum_2_fu_209_grp_fu_221_p_ce,
        grp_fu_226_p_din0 => grp_p_sum_2_fu_209_grp_fu_226_p_din0,
        grp_fu_226_p_din1 => grp_p_sum_2_fu_209_grp_fu_226_p_din1,
        grp_fu_226_p_opcode => grp_p_sum_2_fu_209_grp_fu_226_p_opcode,
        grp_fu_226_p_dout0 => grp_fu_4230_p_dout0,
        grp_fu_226_p_ce => grp_p_sum_2_fu_209_grp_fu_226_p_ce);

    mux_32_32_1_1_U1027 : component main_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => p_read3,
        din1 => p_read14,
        din2 => p_read25,
        din3 => tmp_86_fu_453_p4,
        dout => tmp_86_fu_453_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    ap_return_0_preg <= ap_phi_mux_agg_result_01_0_phi_fu_195_p12;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    ap_return_1_preg <= ap_phi_mux_agg_result_1_0_phi_fu_143_p12;
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    ap_return_2_preg <= ap_phi_mux_agg_result_112_0_phi_fu_160_p12;
                end if; 
            end if;
        end if;
    end process;


    ap_return_3_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_3_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    ap_return_3_preg <= ap_phi_mux_agg_result_12_0_phi_fu_178_p12;
                end if; 
            end if;
        end if;
    end process;


    grp_p_sum_2_fu_209_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_sum_2_fu_209_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_p_sum_2_fu_209_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_sum_2_fu_209_ap_ready = ap_const_logic_1)) then 
                    grp_p_sum_2_fu_209_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    agg_result_01_0_reg_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = and_ln60_2_fu_375_p2) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln60_9_reg_563 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (((icmp_ln139_fu_389_p2 = ap_const_lv1_1) and (icmp_ln60_9_reg_563 = ap_const_lv1_0)) or ((icmp_ln139_fu_389_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln60_2_fu_375_p2)))))) then 
                agg_result_01_0_reg_192 <= this_p_read;
            elsif (((grp_p_sum_2_fu_209_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                agg_result_01_0_reg_192 <= grp_p_sum_2_fu_209_ap_return_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (((((tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_reg_559) and (ap_const_lv1_0 = and_ln60_2_reg_577)) or ((tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_reg_559) and (icmp_ln60_9_reg_563 = ap_const_lv1_0))) or ((icmp_ln60_reg_555 = ap_const_lv1_0) and (tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_2_reg_577))) or ((icmp_ln60_reg_555 = ap_const_lv1_0) and (tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (icmp_ln60_9_reg_563 = ap_const_lv1_0)))))) then 
                agg_result_01_0_reg_192 <= b_p_read;
            end if; 
        end if;
    end process;

    agg_result_112_0_reg_157_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = and_ln60_2_fu_375_p2) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln60_9_reg_563 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (((icmp_ln139_fu_389_p2 = ap_const_lv1_1) and (icmp_ln60_9_reg_563 = ap_const_lv1_0)) or ((icmp_ln139_fu_389_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln60_2_fu_375_p2)))))) then 
                agg_result_112_0_reg_157 <= p_read14;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                agg_result_112_0_reg_157 <= b_num_q1;
            elsif (((grp_p_sum_2_fu_209_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                agg_result_112_0_reg_157 <= grp_p_sum_2_fu_209_ap_return_2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (((((tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_reg_559) and (ap_const_lv1_0 = and_ln60_2_reg_577)) or ((tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_reg_559) and (icmp_ln60_9_reg_563 = ap_const_lv1_0))) or ((icmp_ln60_reg_555 = ap_const_lv1_0) and (tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_2_reg_577))) or ((icmp_ln60_reg_555 = ap_const_lv1_0) and (tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (icmp_ln60_9_reg_563 = ap_const_lv1_0))))) then 
                agg_result_112_0_reg_157 <= agg_result_num16_0_i_reg_130;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                agg_result_112_0_reg_157 <= b_num_q0;
            end if; 
        end if;
    end process;

    agg_result_12_0_reg_175_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = and_ln60_2_fu_375_p2) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln60_9_reg_563 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (((icmp_ln139_fu_389_p2 = ap_const_lv1_1) and (icmp_ln60_9_reg_563 = ap_const_lv1_0)) or ((icmp_ln139_fu_389_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln60_2_fu_375_p2)))))) then 
                agg_result_12_0_reg_175 <= p_read25;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                agg_result_12_0_reg_175 <= b_num_q0;
            elsif (((grp_p_sum_2_fu_209_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                agg_result_12_0_reg_175 <= grp_p_sum_2_fu_209_ap_return_3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (((((tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_reg_559) and (ap_const_lv1_0 = and_ln60_2_reg_577)) or ((tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_reg_559) and (icmp_ln60_9_reg_563 = ap_const_lv1_0))) or ((icmp_ln60_reg_555 = ap_const_lv1_0) and (tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_2_reg_577))) or ((icmp_ln60_reg_555 = ap_const_lv1_0) and (tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (icmp_ln60_9_reg_563 = ap_const_lv1_0))))) then 
                agg_result_12_0_reg_175 <= grp_fu_12738_p_dout0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                agg_result_12_0_reg_175 <= b_num_q1;
            end if; 
        end if;
    end process;

    agg_result_1_0_reg_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = and_ln60_2_fu_375_p2) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln60_9_reg_563 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (((icmp_ln139_fu_389_p2 = ap_const_lv1_1) and (icmp_ln60_9_reg_563 = ap_const_lv1_0)) or ((icmp_ln139_fu_389_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln60_2_fu_375_p2)))))) then 
                agg_result_1_0_reg_140 <= p_read3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                agg_result_1_0_reg_140 <= b_num_load_reg_669;
            elsif (((grp_p_sum_2_fu_209_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                agg_result_1_0_reg_140 <= grp_p_sum_2_fu_209_ap_return_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (((((tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_reg_559) and (ap_const_lv1_0 = and_ln60_2_reg_577)) or ((tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_reg_559) and (icmp_ln60_9_reg_563 = ap_const_lv1_0))) or ((icmp_ln60_reg_555 = ap_const_lv1_0) and (tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_2_reg_577))) or ((icmp_ln60_reg_555 = ap_const_lv1_0) and (tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (icmp_ln60_9_reg_563 = ap_const_lv1_0))))) then 
                agg_result_1_0_reg_140 <= b_num_load_7_reg_625;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                agg_result_1_0_reg_140 <= b_num_load_4_reg_654;
            end if; 
        end if;
    end process;

    agg_result_num16_0_i_reg_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_95_reg_630 = ap_const_lv1_1))) then 
                agg_result_num16_0_i_reg_130 <= reg_233;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_95_reg_630 = ap_const_lv1_0))) then 
                agg_result_num16_0_i_reg_130 <= grp_fu_12738_p_dout0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln60_9_reg_563 = ap_const_lv1_1))) then
                and_ln60_2_reg_577 <= and_ln60_2_fu_375_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln60_reg_555 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                and_ln60_reg_559 <= and_ln60_fu_330_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                b_num_addr_1_reg_543 <= zext_ln131_2_fu_273_p1(13 - 1 downto 0);
                b_num_addr_2_reg_549 <= zext_ln131_3_fu_284_p1(13 - 1 downto 0);
                b_num_addr_reg_537 <= zext_ln131_1_fu_262_p1(13 - 1 downto 0);
                icmp_ln60_reg_555 <= icmp_ln60_fu_289_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                b_num_load_4_reg_654 <= b_num_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                b_num_load_7_reg_625 <= b_num_q1;
                sub_ln115_reg_620 <= sub_ln115_fu_425_p2;
                tmp_95_reg_630 <= sub_ln115_fu_425_p2(1 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                b_num_load_9_reg_634 <= b_num_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                b_num_load_reg_669 <= b_num_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((ap_const_lv1_0 = and_ln60_2_fu_375_p2) or (icmp_ln60_9_reg_563 = ap_const_lv1_0)))) then
                icmp_ln139_reg_588 <= icmp_ln139_fu_389_p2;
                trunc_ln136_reg_581 <= trunc_ln136_fu_385_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (((icmp_ln139_fu_389_p2 = ap_const_lv1_0) and (icmp_ln60_9_reg_563 = ap_const_lv1_0)) or ((icmp_ln139_fu_389_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_2_fu_375_p2))))) then
                icmp_ln142_reg_592 <= icmp_ln142_fu_395_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                icmp_ln60_10_reg_567 <= icmp_ln60_10_fu_359_p2;
                icmp_ln60_11_reg_572 <= icmp_ln60_11_fu_365_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and ((icmp_ln60_reg_555 = ap_const_lv1_0) or (ap_const_lv1_0 = and_ln60_fu_330_p2)))) then
                icmp_ln60_9_reg_563 <= icmp_ln60_9_fu_336_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state3))) then
                reg_233 <= b_num_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (((icmp_ln142_fu_395_p2 = ap_const_lv1_0) and (icmp_ln139_fu_389_p2 = ap_const_lv1_0) and (icmp_ln60_9_reg_563 = ap_const_lv1_0)) or ((icmp_ln142_fu_395_p2 = ap_const_lv1_0) and (icmp_ln139_fu_389_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_2_fu_375_p2))))) then
                tmp_94_reg_596 <= diff_p_fu_381_p2(31 downto 31);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln60_reg_555, and_ln60_fu_330_p2, ap_CS_fsm_state2, icmp_ln60_9_fu_336_p2, icmp_ln60_9_reg_563, and_ln60_2_fu_375_p2, ap_CS_fsm_state4, icmp_ln139_fu_389_p2, icmp_ln142_fu_395_p2, tmp_94_fu_401_p3, ap_CS_fsm_state6, tmp_95_reg_630, ap_CS_fsm_state8, grp_p_sum_2_fu_209_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (((icmp_ln60_reg_555 = ap_const_lv1_0) and (icmp_ln60_9_fu_336_p2 = ap_const_lv1_0)) or ((ap_const_lv1_0 = and_ln60_fu_330_p2) and (icmp_ln60_9_fu_336_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (((icmp_ln60_reg_555 = ap_const_lv1_0) and (icmp_ln60_9_fu_336_p2 = ap_const_lv1_1)) or ((ap_const_lv1_0 = and_ln60_fu_330_p2) and (icmp_ln60_9_fu_336_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (((tmp_94_fu_401_p3 = ap_const_lv1_1) and (icmp_ln142_fu_395_p2 = ap_const_lv1_0) and (icmp_ln139_fu_389_p2 = ap_const_lv1_0) and (icmp_ln60_9_reg_563 = ap_const_lv1_0)) or ((tmp_94_fu_401_p3 = ap_const_lv1_1) and (icmp_ln142_fu_395_p2 = ap_const_lv1_0) and (icmp_ln139_fu_389_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_2_fu_375_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (((tmp_94_fu_401_p3 = ap_const_lv1_0) and (icmp_ln142_fu_395_p2 = ap_const_lv1_0) and (icmp_ln139_fu_389_p2 = ap_const_lv1_0) and (icmp_ln60_9_reg_563 = ap_const_lv1_0)) or ((tmp_94_fu_401_p3 = ap_const_lv1_0) and (icmp_ln142_fu_395_p2 = ap_const_lv1_0) and (icmp_ln139_fu_389_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_2_fu_375_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (((icmp_ln142_fu_395_p2 = ap_const_lv1_1) and (icmp_ln139_fu_389_p2 = ap_const_lv1_0) and (icmp_ln60_9_reg_563 = ap_const_lv1_0)) or ((icmp_ln142_fu_395_p2 = ap_const_lv1_1) and (icmp_ln139_fu_389_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_2_fu_375_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_p_sum_2_fu_209_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_95_reg_630 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln131_1_fu_278_p2 <= std_logic_vector(unsigned(sub_ln131_fu_256_p2) + unsigned(ap_const_lv13_2));
    add_ln131_fu_267_p2 <= std_logic_vector(unsigned(sub_ln131_fu_256_p2) + unsigned(ap_const_lv13_1));
    and_ln60_2_fu_375_p2 <= (or_ln60_1_fu_371_p2 and grp_fu_4230_p_dout0);
    and_ln60_fu_330_p2 <= (or_ln60_fu_324_p2 and grp_fu_4230_p_dout0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_p_sum_2_fu_209_ap_done)
    begin
        if ((grp_p_sum_2_fu_209_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_agg_result_01_0_phi_fu_195_p12_assign_proc : process(b_p_read, icmp_ln60_reg_555, and_ln60_reg_559, icmp_ln60_9_reg_563, and_ln60_2_reg_577, icmp_ln139_reg_588, icmp_ln142_reg_592, tmp_94_reg_596, ap_CS_fsm_state14, agg_result_01_0_reg_192)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (((((tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_reg_559) and (ap_const_lv1_0 = and_ln60_2_reg_577)) or ((tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_reg_559) and (icmp_ln60_9_reg_563 = ap_const_lv1_0))) or ((icmp_ln60_reg_555 = ap_const_lv1_0) and (tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_2_reg_577))) or ((icmp_ln60_reg_555 = ap_const_lv1_0) and (tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (icmp_ln60_9_reg_563 = ap_const_lv1_0))))) then 
            ap_phi_mux_agg_result_01_0_phi_fu_195_p12 <= b_p_read;
        else 
            ap_phi_mux_agg_result_01_0_phi_fu_195_p12 <= agg_result_01_0_reg_192;
        end if; 
    end process;


    ap_phi_mux_agg_result_112_0_phi_fu_160_p12_assign_proc : process(icmp_ln60_reg_555, and_ln60_reg_559, icmp_ln60_9_reg_563, and_ln60_2_reg_577, icmp_ln139_reg_588, icmp_ln142_reg_592, tmp_94_reg_596, agg_result_num16_0_i_reg_130, ap_CS_fsm_state14, agg_result_112_0_reg_157)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (((((tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_reg_559) and (ap_const_lv1_0 = and_ln60_2_reg_577)) or ((tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_reg_559) and (icmp_ln60_9_reg_563 = ap_const_lv1_0))) or ((icmp_ln60_reg_555 = ap_const_lv1_0) and (tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_2_reg_577))) or ((icmp_ln60_reg_555 = ap_const_lv1_0) and (tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (icmp_ln60_9_reg_563 = ap_const_lv1_0))))) then 
            ap_phi_mux_agg_result_112_0_phi_fu_160_p12 <= agg_result_num16_0_i_reg_130;
        else 
            ap_phi_mux_agg_result_112_0_phi_fu_160_p12 <= agg_result_112_0_reg_157;
        end if; 
    end process;


    ap_phi_mux_agg_result_12_0_phi_fu_178_p12_assign_proc : process(icmp_ln60_reg_555, and_ln60_reg_559, icmp_ln60_9_reg_563, and_ln60_2_reg_577, icmp_ln139_reg_588, icmp_ln142_reg_592, tmp_94_reg_596, ap_CS_fsm_state14, agg_result_12_0_reg_175, grp_fu_12738_p_dout0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (((((tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_reg_559) and (ap_const_lv1_0 = and_ln60_2_reg_577)) or ((tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_reg_559) and (icmp_ln60_9_reg_563 = ap_const_lv1_0))) or ((icmp_ln60_reg_555 = ap_const_lv1_0) and (tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_2_reg_577))) or ((icmp_ln60_reg_555 = ap_const_lv1_0) and (tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (icmp_ln60_9_reg_563 = ap_const_lv1_0))))) then 
            ap_phi_mux_agg_result_12_0_phi_fu_178_p12 <= grp_fu_12738_p_dout0;
        else 
            ap_phi_mux_agg_result_12_0_phi_fu_178_p12 <= agg_result_12_0_reg_175;
        end if; 
    end process;


    ap_phi_mux_agg_result_1_0_phi_fu_143_p12_assign_proc : process(icmp_ln60_reg_555, and_ln60_reg_559, icmp_ln60_9_reg_563, and_ln60_2_reg_577, icmp_ln139_reg_588, icmp_ln142_reg_592, tmp_94_reg_596, b_num_load_7_reg_625, agg_result_1_0_reg_140, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (((((tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_reg_559) and (ap_const_lv1_0 = and_ln60_2_reg_577)) or ((tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_reg_559) and (icmp_ln60_9_reg_563 = ap_const_lv1_0))) or ((icmp_ln60_reg_555 = ap_const_lv1_0) and (tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln60_2_reg_577))) or ((icmp_ln60_reg_555 = ap_const_lv1_0) and (tmp_94_reg_596 = ap_const_lv1_1) and (icmp_ln142_reg_592 = ap_const_lv1_0) and (icmp_ln139_reg_588 = ap_const_lv1_0) and (icmp_ln60_9_reg_563 = ap_const_lv1_0))))) then 
            ap_phi_mux_agg_result_1_0_phi_fu_143_p12 <= b_num_load_7_reg_625;
        else 
            ap_phi_mux_agg_result_1_0_phi_fu_143_p12 <= agg_result_1_0_reg_140;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_CS_fsm_state14, ap_phi_mux_agg_result_01_0_phi_fu_195_p12, ap_return_0_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_return_0 <= ap_phi_mux_agg_result_01_0_phi_fu_195_p12;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_phi_mux_agg_result_1_0_phi_fu_143_p12, ap_CS_fsm_state14, ap_return_1_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_return_1 <= ap_phi_mux_agg_result_1_0_phi_fu_143_p12;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(ap_CS_fsm_state14, ap_phi_mux_agg_result_112_0_phi_fu_160_p12, ap_return_2_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_return_2 <= ap_phi_mux_agg_result_112_0_phi_fu_160_p12;
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;


    ap_return_3_assign_proc : process(ap_CS_fsm_state14, ap_phi_mux_agg_result_12_0_phi_fu_178_p12, ap_return_3_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_return_3 <= ap_phi_mux_agg_result_12_0_phi_fu_178_p12;
        else 
            ap_return_3 <= ap_return_3_preg;
        end if; 
    end process;


    b_num_address0_assign_proc : process(b_num_addr_reg_537, b_num_addr_1_reg_543, b_num_addr_2_reg_549, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state16, ap_CS_fsm_state19, grp_p_sum_2_fu_209_b_num_address0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            b_num_address0 <= b_num_addr_2_reg_549;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            b_num_address0 <= b_num_addr_1_reg_543;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            b_num_address0 <= b_num_addr_reg_537;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            b_num_address0 <= grp_p_sum_2_fu_209_b_num_address0;
        else 
            b_num_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    b_num_address1_assign_proc : process(ap_CS_fsm_state7, b_num_addr_reg_537, b_num_addr_1_reg_543, b_num_addr_2_reg_549, ap_CS_fsm_state4, ap_CS_fsm_state16, ap_CS_fsm_state19, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            b_num_address1 <= b_num_addr_1_reg_543;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            b_num_address1 <= b_num_addr_2_reg_549;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            b_num_address1 <= b_num_addr_reg_537;
        else 
            b_num_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    b_num_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state16, ap_CS_fsm_state19, grp_p_sum_2_fu_209_b_num_ce0, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            b_num_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            b_num_ce0 <= grp_p_sum_2_fu_209_b_num_ce0;
        else 
            b_num_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_num_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state4, ap_CS_fsm_state16, ap_CS_fsm_state19, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            b_num_ce1 <= ap_const_logic_1;
        else 
            b_num_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln60_1_fu_341_p1 <= b_num_q0;
    bitcast_ln60_fu_295_p1 <= p_read3;
    diff_p_fu_381_p2 <= std_logic_vector(unsigned(this_p_read) - unsigned(b_p_read));
    grp_fu_12738_p_ce <= grp_fu_221_ce;
    grp_fu_12738_p_din0 <= grp_fu_221_p0;
    grp_fu_12738_p_din1 <= grp_fu_221_p1;
    grp_fu_12738_p_opcode <= ap_const_lv2_0;

    grp_fu_221_ce_assign_proc : process(ap_CS_fsm_state6, grp_p_sum_2_fu_209_grp_fu_221_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_221_ce <= grp_p_sum_2_fu_209_grp_fu_221_p_ce;
        else 
            grp_fu_221_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_221_p0_assign_proc : process(reg_233, ap_CS_fsm_state6, b_num_load_9_reg_634, ap_CS_fsm_state8, ap_CS_fsm_state11, grp_p_sum_2_fu_209_grp_fu_221_p_din0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_221_p0 <= grp_p_sum_2_fu_209_grp_fu_221_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_221_p0 <= b_num_load_9_reg_634;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_221_p0 <= reg_233;
        else 
            grp_fu_221_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_221_p1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, select_ln115_fu_441_p3, ap_CS_fsm_state11, tmp_86_fu_453_p5, grp_p_sum_2_fu_209_grp_fu_221_p_din1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_221_p1 <= grp_p_sum_2_fu_209_grp_fu_221_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_221_p1 <= tmp_86_fu_453_p5;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_221_p1 <= select_ln115_fu_441_p3;
        else 
            grp_fu_221_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_226_ce_assign_proc : process(ap_CS_fsm_state6, grp_p_sum_2_fu_209_grp_fu_226_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_226_ce <= grp_p_sum_2_fu_209_grp_fu_226_p_ce;
        else 
            grp_fu_226_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_226_opcode_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3, icmp_ln60_fu_289_p2, ap_CS_fsm_state6, grp_p_sum_2_fu_209_grp_fu_226_p_opcode)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_226_opcode <= grp_p_sum_2_fu_209_grp_fu_226_p_opcode;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln60_fu_289_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            grp_fu_226_opcode <= ap_const_lv5_1;
        else 
            grp_fu_226_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_226_p0_assign_proc : process(ap_CS_fsm_state1, p_read3, b_num_q0, ap_CS_fsm_state3, ap_CS_fsm_state6, grp_p_sum_2_fu_209_grp_fu_226_p_din0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_226_p0 <= grp_p_sum_2_fu_209_grp_fu_226_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_226_p0 <= b_num_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_226_p0 <= p_read3;
        else 
            grp_fu_226_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_226_p1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state6, grp_p_sum_2_fu_209_grp_fu_226_p_din1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_226_p1 <= grp_p_sum_2_fu_209_grp_fu_226_p_din1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_fu_226_p1 <= ap_const_lv32_0;
        else 
            grp_fu_226_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_4230_p_ce <= grp_fu_226_ce;
    grp_fu_4230_p_din0 <= grp_fu_226_p0;
    grp_fu_4230_p_din1 <= grp_fu_226_p1;
    grp_fu_4230_p_opcode <= grp_fu_226_opcode;
    grp_p_sum_2_fu_209_ap_start <= grp_p_sum_2_fu_209_ap_start_reg;
    icmp_ln139_fu_389_p2 <= "1" when (signed(diff_p_fu_381_p2) > signed(ap_const_lv32_2)) else "0";
    icmp_ln142_fu_395_p2 <= "1" when (signed(diff_p_fu_381_p2) < signed(ap_const_lv32_FFFFFFFE)) else "0";
    icmp_ln60_10_fu_359_p2 <= "0" when (tmp_83_fu_345_p4 = ap_const_lv8_FF) else "1";
    icmp_ln60_11_fu_365_p2 <= "1" when (trunc_ln60_1_fu_355_p1 = ap_const_lv23_0) else "0";
    icmp_ln60_7_fu_312_p2 <= "0" when (tmp_fu_298_p4 = ap_const_lv8_FF) else "1";
    icmp_ln60_8_fu_318_p2 <= "1" when (trunc_ln60_fu_308_p1 = ap_const_lv23_0) else "0";
    icmp_ln60_9_fu_336_p2 <= "1" when (b_p_read = ap_const_lv32_0) else "0";
    icmp_ln60_fu_289_p2 <= "1" when (this_p_read = ap_const_lv32_0) else "0";
    or_ln60_1_fu_371_p2 <= (icmp_ln60_11_reg_572 or icmp_ln60_10_reg_567);
    or_ln60_fu_324_p2 <= (icmp_ln60_8_fu_318_p2 or icmp_ln60_7_fu_312_p2);
    select_ln115_fu_441_p3 <= 
        p_read3 when (trunc_ln115_fu_438_p1(0) = '1') else 
        p_read14;
    sub_ln115_fu_425_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(trunc_ln136_reg_581));
    sub_ln131_fu_256_p2 <= std_logic_vector(unsigned(tmp_119_cast_fu_248_p3) - unsigned(zext_ln131_fu_240_p1));
    tmp_119_cast_fu_248_p3 <= (trunc_ln131_fu_244_p1 & ap_const_lv2_0);
    tmp_83_fu_345_p4 <= bitcast_ln60_1_fu_341_p1(30 downto 23);
    tmp_86_fu_453_p4 <= (trunc_ln136_reg_581 xor ap_const_lv2_2);
    tmp_94_fu_401_p3 <= diff_p_fu_381_p2(31 downto 31);
    tmp_fu_298_p4 <= bitcast_ln60_fu_295_p1(30 downto 23);
    trunc_ln115_fu_438_p1 <= sub_ln115_reg_620(1 - 1 downto 0);
    trunc_ln131_fu_244_p1 <= b_num_offset(11 - 1 downto 0);
    trunc_ln136_fu_385_p1 <= diff_p_fu_381_p2(2 - 1 downto 0);
    trunc_ln60_1_fu_355_p1 <= bitcast_ln60_1_fu_341_p1(23 - 1 downto 0);
    trunc_ln60_fu_308_p1 <= bitcast_ln60_fu_295_p1(23 - 1 downto 0);
    zext_ln131_1_fu_262_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln131_fu_256_p2),64));
    zext_ln131_2_fu_273_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln131_fu_267_p2),64));
    zext_ln131_3_fu_284_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln131_1_fu_278_p2),64));
    zext_ln131_fu_240_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_num_offset),13));
end behav;
