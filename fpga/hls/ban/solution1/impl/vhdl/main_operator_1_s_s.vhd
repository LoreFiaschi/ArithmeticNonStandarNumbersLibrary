-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity main_operator_1_s_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_5034_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_5034_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_5034_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_5034_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_5034_p_ce : OUT STD_LOGIC;
    grp_fu_5022_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_5022_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_5022_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_5022_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_5022_p_ce : OUT STD_LOGIC );
end;


architecture behav of main_operator_1_s_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal and_ln75_fu_233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln75_reg_384 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal empty_fu_242_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_reg_388 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln90_fu_247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln90_reg_394 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln90_fu_253_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln90_reg_398 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln102_fu_272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln102_reg_403 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal select_ln102_fu_294_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln102_reg_407 : STD_LOGIC_VECTOR (2 downto 0);
    signal aux_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal aux_ce0 : STD_LOGIC;
    signal aux_we0 : STD_LOGIC;
    signal aux_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_ap_start : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_ap_done : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_ap_idle : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_ap_ready : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_num_aux_2_03_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_num_aux_2_03_out_ap_vld : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_num_aux_1_02_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_num_aux_1_02_out_ap_vld : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_num_aux_0_01_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_num_aux_0_01_out_ap_vld : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_ap_start : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_ap_done : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_ap_idle : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_ap_ready : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_aux_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_aux_ce0 : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_aux_we0 : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_aux_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_ap_start : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_ap_done : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_ap_idle : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_ap_ready : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_aux_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_aux_ce0 : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_b_1_0_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_b_1_0_out_ap_vld : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_b_112_0_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_b_112_0_out_ap_vld : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_b_12_0_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_b_12_0_out_ap_vld : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_ap_start : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_ap_done : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_ap_idle : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_ap_ready : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_idx_tmp_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_idx_tmp_out_ap_vld : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_grp_fu_412_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_grp_fu_412_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_grp_fu_412_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_grp_fu_412_p_ce : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_90_2_s_fu_153_ap_start : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_90_2_s_fu_153_ap_done : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_90_2_s_fu_153_ap_idle : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_90_2_s_fu_153_ap_ready : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_102_3_s_fu_162_ap_start : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_102_3_s_fu_162_ap_done : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_102_3_s_fu_162_ap_idle : STD_LOGIC;
    signal grp_operator_1_Pipeline_VITIS_LOOP_102_3_s_fu_162_ap_ready : STD_LOGIC;
    signal ap_phi_mux_base_0_lcssa_i104107_phi_fu_102_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal base_0_lcssa_i104107_reg_98 : STD_LOGIC_VECTOR (1 downto 0);
    signal base_fu_265_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state11_on_subcall_done : BOOLEAN;
    signal grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_operator_1_Pipeline_VITIS_LOOP_90_2_s_fu_153_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_1_Pipeline_VITIS_LOOP_102_3_s_fu_162_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal bitcast_ln75_fu_198_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_201_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln75_fu_211_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln75_8_fu_221_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln75_fu_215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln75_fu_227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln90_fu_260_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln102_fu_278_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln102_7_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln102_fu_288_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_412_ce : STD_LOGIC;
    signal ap_predicate_op65_call_state12 : BOOLEAN;
    signal ap_block_state12_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component main_operator_1_Pipeline_VITIS_LOOP_358_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
        num_aux_2_03_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        num_aux_2_03_out_ap_vld : OUT STD_LOGIC;
        num_aux_1_02_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        num_aux_1_02_out_ap_vld : OUT STD_LOGIC;
        num_aux_0_01_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        num_aux_0_01_out_ap_vld : OUT STD_LOGIC );
    end component;


    component main_operator_1_Pipeline_VITIS_LOOP_167_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
        num_aux_0_01_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        num_aux_1_02_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        num_aux_2_03_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        aux_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        aux_ce0 : OUT STD_LOGIC;
        aux_we0 : OUT STD_LOGIC;
        aux_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component main_operator_1_Pipeline_VITIS_LOOP_185_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
        aux_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        aux_ce0 : OUT STD_LOGIC;
        aux_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_1_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        b_1_0_out_ap_vld : OUT STD_LOGIC;
        b_112_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        b_112_0_out_ap_vld : OUT STD_LOGIC;
        b_12_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        b_12_0_out_ap_vld : OUT STD_LOGIC );
    end component;


    component main_operator_1_Pipeline_VITIS_LOOP_82_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        b_1_0_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        b_112_0_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        b_12_0_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        idx_tmp_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        idx_tmp_out_ap_vld : OUT STD_LOGIC;
        grp_fu_412_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_412_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_412_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_412_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_412_p_ce : OUT STD_LOGIC );
    end component;


    component main_operator_1_Pipeline_VITIS_LOOP_90_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        b_112_0_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        b_12_0_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        b_1_0_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        zext_ln90 : IN STD_LOGIC_VECTOR (1 downto 0);
        xor_ln90 : IN STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component main_operator_1_Pipeline_VITIS_LOOP_102_3_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln102 : IN STD_LOGIC_VECTOR (1 downto 0);
        zext_ln102_14 : IN STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component main_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component main_mul_body_aux_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    aux_U : component main_mul_body_aux_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => aux_address0,
        ce0 => aux_ce0,
        we0 => aux_we0,
        d0 => grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_aux_d0,
        q0 => aux_q0);

    grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110 : component main_operator_1_Pipeline_VITIS_LOOP_358_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_ap_start,
        ap_done => grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_ap_done,
        ap_idle => grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_ap_idle,
        ap_ready => grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_ap_ready,
        p_read => p_read,
        p_read1 => p_read1,
        p_read2 => p_read2,
        num_aux_2_03_out => grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_num_aux_2_03_out,
        num_aux_2_03_out_ap_vld => grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_num_aux_2_03_out_ap_vld,
        num_aux_1_02_out => grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_num_aux_1_02_out,
        num_aux_1_02_out_ap_vld => grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_num_aux_1_02_out_ap_vld,
        num_aux_0_01_out => grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_num_aux_0_01_out,
        num_aux_0_01_out_ap_vld => grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_num_aux_0_01_out_ap_vld);

    grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123 : component main_operator_1_Pipeline_VITIS_LOOP_167_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_ap_start,
        ap_done => grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_ap_done,
        ap_idle => grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_ap_idle,
        ap_ready => grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_ap_ready,
        p_read => p_read,
        p_read1 => p_read1,
        p_read2 => p_read2,
        num_aux_0_01_reload => grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_num_aux_0_01_out,
        num_aux_1_02_reload => grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_num_aux_1_02_out,
        num_aux_2_03_reload => grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_num_aux_2_03_out,
        aux_address0 => grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_aux_address0,
        aux_ce0 => grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_aux_ce0,
        aux_we0 => grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_aux_we0,
        aux_d0 => grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_aux_d0);

    grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134 : component main_operator_1_Pipeline_VITIS_LOOP_185_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_ap_start,
        ap_done => grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_ap_done,
        ap_idle => grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_ap_idle,
        ap_ready => grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_ap_ready,
        p_read => p_read,
        p_read1 => p_read1,
        p_read2 => p_read2,
        aux_address0 => grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_aux_address0,
        aux_ce0 => grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_aux_ce0,
        aux_q0 => aux_q0,
        b_1_0_out => grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_b_1_0_out,
        b_1_0_out_ap_vld => grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_b_1_0_out_ap_vld,
        b_112_0_out => grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_b_112_0_out,
        b_112_0_out_ap_vld => grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_b_112_0_out_ap_vld,
        b_12_0_out => grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_b_12_0_out,
        b_12_0_out_ap_vld => grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_b_12_0_out_ap_vld);

    grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145 : component main_operator_1_Pipeline_VITIS_LOOP_82_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_ap_start,
        ap_done => grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_ap_done,
        ap_idle => grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_ap_idle,
        ap_ready => grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_ap_ready,
        b_1_0_reload => grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_b_1_0_out,
        b_112_0_reload => grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_b_112_0_out,
        b_12_0_reload => grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_b_12_0_out,
        idx_tmp_out => grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_idx_tmp_out,
        idx_tmp_out_ap_vld => grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_idx_tmp_out_ap_vld,
        grp_fu_412_p_din0 => grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_grp_fu_412_p_din0,
        grp_fu_412_p_din1 => grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_grp_fu_412_p_din1,
        grp_fu_412_p_opcode => grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_grp_fu_412_p_opcode,
        grp_fu_412_p_dout0 => grp_fu_5022_p_dout0,
        grp_fu_412_p_ce => grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_grp_fu_412_p_ce);

    grp_operator_1_Pipeline_VITIS_LOOP_90_2_s_fu_153 : component main_operator_1_Pipeline_VITIS_LOOP_90_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_1_Pipeline_VITIS_LOOP_90_2_s_fu_153_ap_start,
        ap_done => grp_operator_1_Pipeline_VITIS_LOOP_90_2_s_fu_153_ap_done,
        ap_idle => grp_operator_1_Pipeline_VITIS_LOOP_90_2_s_fu_153_ap_idle,
        ap_ready => grp_operator_1_Pipeline_VITIS_LOOP_90_2_s_fu_153_ap_ready,
        b_112_0_reload => grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_b_112_0_out,
        b_12_0_reload => grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_b_12_0_out,
        b_1_0_reload => grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_b_1_0_out,
        zext_ln90 => empty_reg_388,
        xor_ln90 => xor_ln90_reg_398);

    grp_operator_1_Pipeline_VITIS_LOOP_102_3_s_fu_162 : component main_operator_1_Pipeline_VITIS_LOOP_102_3_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_1_Pipeline_VITIS_LOOP_102_3_s_fu_162_ap_start,
        ap_done => grp_operator_1_Pipeline_VITIS_LOOP_102_3_s_fu_162_ap_done,
        ap_idle => grp_operator_1_Pipeline_VITIS_LOOP_102_3_s_fu_162_ap_idle,
        ap_ready => grp_operator_1_Pipeline_VITIS_LOOP_102_3_s_fu_162_ap_ready,
        zext_ln102 => base_0_lcssa_i104107_reg_98,
        zext_ln102_14 => select_ln102_reg_407);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_operator_1_Pipeline_VITIS_LOOP_102_3_s_fu_162_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_1_Pipeline_VITIS_LOOP_102_3_s_fu_162_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_boolean_0 = ap_block_state11_on_subcall_done) and ((icmp_ln102_fu_272_p2 = ap_const_lv1_0) or (icmp_ln90_reg_394 = ap_const_lv1_0)))) then 
                    grp_operator_1_Pipeline_VITIS_LOOP_102_3_s_fu_162_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_1_Pipeline_VITIS_LOOP_102_3_s_fu_162_ap_ready = ap_const_logic_1)) then 
                    grp_operator_1_Pipeline_VITIS_LOOP_102_3_s_fu_162_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_ap_ready = ap_const_logic_1)) then 
                    grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_ap_ready = ap_const_logic_1)) then 
                    grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_ap_ready = ap_const_logic_1)) then 
                    grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = and_ln75_fu_233_p2) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_ap_ready = ap_const_logic_1)) then 
                    grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_1_Pipeline_VITIS_LOOP_90_2_s_fu_153_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_1_Pipeline_VITIS_LOOP_90_2_s_fu_153_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln90_fu_247_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    grp_operator_1_Pipeline_VITIS_LOOP_90_2_s_fu_153_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_1_Pipeline_VITIS_LOOP_90_2_s_fu_153_ap_ready = ap_const_logic_1)) then 
                    grp_operator_1_Pipeline_VITIS_LOOP_90_2_s_fu_153_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    base_0_lcssa_i104107_reg_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln102_fu_272_p2 = ap_const_lv1_0) and (icmp_ln90_reg_394 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_boolean_0 = ap_block_state11_on_subcall_done))) then 
                base_0_lcssa_i104107_reg_98 <= base_fu_265_p2;
            elsif (((icmp_ln90_fu_247_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                base_0_lcssa_i104107_reg_98 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                and_ln75_reg_384 <= and_ln75_fu_233_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                empty_reg_388 <= empty_fu_242_p1;
                icmp_ln90_reg_394 <= icmp_ln90_fu_247_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln90_reg_394 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                icmp_ln102_reg_403 <= icmp_ln102_fu_272_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and ((icmp_ln102_fu_272_p2 = ap_const_lv1_0) or (icmp_ln90_reg_394 = ap_const_lv1_0)))) then
                select_ln102_reg_407 <= select_ln102_fu_294_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln90_fu_247_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                xor_ln90_reg_398 <= xor_ln90_fu_253_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, and_ln75_fu_233_p2, ap_CS_fsm_state8, ap_CS_fsm_state11, grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_ap_done, grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_ap_done, grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_ap_done, grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_ap_done, ap_block_state11_on_subcall_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_block_state12_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_lv1_0 = and_ln75_fu_233_p2) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_boolean_0 = ap_block_state11_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln102_fu_288_p2 <= std_logic_vector(unsigned(zext_ln102_fu_278_p1) + unsigned(ap_const_lv3_1));
    and_ln75_fu_233_p2 <= (or_ln75_fu_227_p2 and grp_fu_5034_p_dout0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(ap_block_state11_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state11_on_subcall_done)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state12_blk_assign_proc : process(ap_block_state12_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state12_on_subcall_done)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_ap_done)
    begin
        if ((grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_ap_done)
    begin
        if ((grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_ap_done)
    begin
        if ((grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_ap_done)
    begin
        if ((grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state11_on_subcall_done_assign_proc : process(icmp_ln90_reg_394, grp_operator_1_Pipeline_VITIS_LOOP_90_2_s_fu_153_ap_done)
    begin
                ap_block_state11_on_subcall_done <= ((icmp_ln90_reg_394 = ap_const_lv1_1) and (grp_operator_1_Pipeline_VITIS_LOOP_90_2_s_fu_153_ap_done = ap_const_logic_0));
    end process;


    ap_block_state12_on_subcall_done_assign_proc : process(grp_operator_1_Pipeline_VITIS_LOOP_102_3_s_fu_162_ap_done, ap_predicate_op65_call_state12)
    begin
                ap_block_state12_on_subcall_done <= ((ap_predicate_op65_call_state12 = ap_const_boolean_1) and (grp_operator_1_Pipeline_VITIS_LOOP_102_3_s_fu_162_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state12, ap_block_state12_on_subcall_done)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_base_0_lcssa_i104107_phi_fu_102_p4_assign_proc : process(icmp_ln90_reg_394, icmp_ln102_fu_272_p2, ap_CS_fsm_state11, base_0_lcssa_i104107_reg_98, base_fu_265_p2)
    begin
        if (((icmp_ln102_fu_272_p2 = ap_const_lv1_0) and (icmp_ln90_reg_394 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_phi_mux_base_0_lcssa_i104107_phi_fu_102_p4 <= base_fu_265_p2;
        else 
            ap_phi_mux_base_0_lcssa_i104107_phi_fu_102_p4 <= base_0_lcssa_i104107_reg_98;
        end if; 
    end process;


    ap_predicate_op65_call_state12_assign_proc : process(and_ln75_reg_384, icmp_ln90_reg_394, icmp_ln102_reg_403)
    begin
                ap_predicate_op65_call_state12 <= (((icmp_ln102_reg_403 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln75_reg_384)) or ((ap_const_lv1_1 = and_ln75_reg_384) and (icmp_ln90_reg_394 = ap_const_lv1_0)));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12, ap_block_state12_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    aux_address0_assign_proc : process(grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_aux_address0, grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_aux_address0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            aux_address0 <= grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_aux_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            aux_address0 <= grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_aux_address0;
        else 
            aux_address0 <= "XXX";
        end if; 
    end process;


    aux_ce0_assign_proc : process(grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_aux_ce0, grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_aux_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            aux_ce0 <= grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_aux_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            aux_ce0 <= grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_aux_ce0;
        else 
            aux_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    aux_we0_assign_proc : process(grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_aux_we0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            aux_we0 <= grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_aux_we0;
        else 
            aux_we0 <= ap_const_logic_0;
        end if; 
    end process;

    base_fu_265_p2 <= std_logic_vector(unsigned(sub_ln90_fu_260_p2) + unsigned(ap_const_lv2_1));
    bitcast_ln75_fu_198_p1 <= grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_b_1_0_out;
    empty_fu_242_p1 <= grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_idx_tmp_out(2 - 1 downto 0);

    grp_fu_412_ce_assign_proc : process(grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_grp_fu_412_p_ce, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_412_ce <= grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_grp_fu_412_p_ce;
        else 
            grp_fu_412_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_5022_p_ce <= grp_fu_412_ce;
    grp_fu_5022_p_din0 <= grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_grp_fu_412_p_din0;
    grp_fu_5022_p_din1 <= grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_grp_fu_412_p_din1;
    grp_fu_5022_p_opcode <= grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_grp_fu_412_p_opcode;
    grp_fu_5034_p_ce <= ap_const_logic_1;
    grp_fu_5034_p_din0 <= grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_b_1_0_out;
    grp_fu_5034_p_din1 <= ap_const_lv32_0;
    grp_fu_5034_p_opcode <= ap_const_lv5_1;
    grp_operator_1_Pipeline_VITIS_LOOP_102_3_s_fu_162_ap_start <= grp_operator_1_Pipeline_VITIS_LOOP_102_3_s_fu_162_ap_start_reg;
    grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_ap_start <= grp_operator_1_Pipeline_VITIS_LOOP_167_1_fu_123_ap_start_reg;
    grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_ap_start <= grp_operator_1_Pipeline_VITIS_LOOP_185_1_fu_134_ap_start_reg;
    grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_ap_start <= grp_operator_1_Pipeline_VITIS_LOOP_358_1_fu_110_ap_start_reg;
    grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_ap_start <= grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_ap_start_reg;
    grp_operator_1_Pipeline_VITIS_LOOP_90_2_s_fu_153_ap_start <= grp_operator_1_Pipeline_VITIS_LOOP_90_2_s_fu_153_ap_start_reg;
    icmp_ln102_7_fu_282_p2 <= "0" when (ap_phi_mux_base_0_lcssa_i104107_phi_fu_102_p4 = ap_const_lv2_3) else "1";
    icmp_ln102_fu_272_p2 <= "1" when (base_fu_265_p2 = ap_const_lv2_3) else "0";
    icmp_ln75_8_fu_221_p2 <= "1" when (trunc_ln75_fu_211_p1 = ap_const_lv23_0) else "0";
    icmp_ln75_fu_215_p2 <= "0" when (tmp_s_fu_201_p4 = ap_const_lv8_FF) else "1";
    icmp_ln90_fu_247_p2 <= "1" when (unsigned(grp_operator_1_Pipeline_VITIS_LOOP_82_1_s_fu_145_idx_tmp_out) < unsigned(ap_const_lv32_3)) else "0";
    or_ln75_fu_227_p2 <= (icmp_ln75_fu_215_p2 or icmp_ln75_8_fu_221_p2);
    select_ln102_fu_294_p3 <= 
        ap_const_lv3_3 when (icmp_ln102_7_fu_282_p2(0) = '1') else 
        add_ln102_fu_288_p2;
    sub_ln90_fu_260_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(empty_reg_388));
    tmp_s_fu_201_p4 <= bitcast_ln75_fu_198_p1(30 downto 23);
    trunc_ln75_fu_211_p1 <= bitcast_ln75_fu_198_p1(23 - 1 downto 0);
    xor_ln90_fu_253_p2 <= (empty_fu_242_p1 xor ap_const_lv2_3);
    zext_ln102_fu_278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_base_0_lcssa_i104107_phi_fu_102_p4),3));
end behav;
