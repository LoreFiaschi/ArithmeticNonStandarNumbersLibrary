// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module main_main_Pipeline_VITIS_LOOP_315_240 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sub_ln542,
        b_num_address0,
        b_num_ce0,
        b_num_we0,
        b_num_d0,
        sub11_i_i,
        tmp_309,
        tmp_310,
        tmp_311,
        trunc_ln297_3,
        num_aux_0_2_reload,
        num_aux_1_2_reload,
        num_aux_2_2_reload,
        grp_fu_12725_p_din0,
        grp_fu_12725_p_din1,
        grp_fu_12725_p_opcode,
        grp_fu_12725_p_dout0,
        grp_fu_12725_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [5:0] sub_ln542;
output  [5:0] b_num_address0;
output   b_num_ce0;
output   b_num_we0;
output  [31:0] b_num_d0;
input  [1:0] sub11_i_i;
input  [31:0] tmp_309;
input  [31:0] tmp_310;
input  [31:0] tmp_311;
input  [1:0] trunc_ln297_3;
input  [31:0] num_aux_0_2_reload;
input  [31:0] num_aux_1_2_reload;
input  [31:0] num_aux_2_2_reload;
output  [31:0] grp_fu_12725_p_din0;
output  [31:0] grp_fu_12725_p_din1;
output  [1:0] grp_fu_12725_p_opcode;
input  [31:0] grp_fu_12725_p_dout0;
output   grp_fu_12725_p_ce;

reg ap_idle;
reg b_num_ce0;
reg b_num_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln315_fu_137_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [1:0] i_37_reg_245;
reg   [1:0] i_37_reg_245_pp0_iter1_reg;
reg   [1:0] i_37_reg_245_pp0_iter2_reg;
reg   [1:0] i_37_reg_245_pp0_iter3_reg;
reg   [1:0] i_37_reg_245_pp0_iter4_reg;
wire   [0:0] icmp_ln316_fu_149_p2;
reg   [0:0] icmp_ln316_reg_255;
reg   [0:0] icmp_ln316_reg_255_pp0_iter1_reg;
reg   [0:0] icmp_ln316_reg_255_pp0_iter2_reg;
reg   [0:0] icmp_ln316_reg_255_pp0_iter3_reg;
wire   [1:0] add_ln319_fu_155_p2;
reg   [1:0] add_ln319_reg_260;
wire   [31:0] tmp_s_fu_166_p5;
reg   [31:0] tmp_s_reg_265;
reg   [31:0] tmp_s_reg_265_pp0_iter2_reg;
reg   [31:0] tmp_s_reg_265_pp0_iter3_reg;
wire   [31:0] tmp_142_fu_175_p5;
wire   [31:0] select_ln316_fu_184_p3;
reg   [31:0] select_ln316_reg_276;
wire   [63:0] zext_ln317_1_fu_198_p1;
wire    ap_block_pp0_stage0;
reg   [1:0] i_fu_54;
wire   [1:0] add_ln315_fu_143_p2;
wire    ap_loop_init;
reg   [1:0] ap_sig_allocacmp_i_37;
wire   [5:0] zext_ln317_fu_190_p1;
wire   [5:0] add_ln317_fu_193_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_done_reg = 1'b0;
end

main_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U490(
    .din0(tmp_309),
    .din1(tmp_310),
    .din2(tmp_311),
    .din3(i_37_reg_245),
    .dout(tmp_s_fu_166_p5)
);

main_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U491(
    .din0(num_aux_0_2_reload),
    .din1(num_aux_1_2_reload),
    .din2(num_aux_2_2_reload),
    .din3(add_ln319_reg_260),
    .dout(tmp_142_fu_175_p5)
);

main_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln315_fu_137_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_54 <= add_ln315_fu_143_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_54 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln315_fu_137_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln319_reg_260 <= add_ln319_fu_155_p2;
        icmp_ln316_reg_255 <= icmp_ln316_fu_149_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_37_reg_245 <= ap_sig_allocacmp_i_37;
        i_37_reg_245_pp0_iter1_reg <= i_37_reg_245;
        icmp_ln316_reg_255_pp0_iter1_reg <= icmp_ln316_reg_255;
        tmp_s_reg_265 <= tmp_s_fu_166_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        i_37_reg_245_pp0_iter2_reg <= i_37_reg_245_pp0_iter1_reg;
        i_37_reg_245_pp0_iter3_reg <= i_37_reg_245_pp0_iter2_reg;
        i_37_reg_245_pp0_iter4_reg <= i_37_reg_245_pp0_iter3_reg;
        icmp_ln316_reg_255_pp0_iter2_reg <= icmp_ln316_reg_255_pp0_iter1_reg;
        icmp_ln316_reg_255_pp0_iter3_reg <= icmp_ln316_reg_255_pp0_iter2_reg;
        select_ln316_reg_276 <= select_ln316_fu_184_p3;
        tmp_s_reg_265_pp0_iter2_reg <= tmp_s_reg_265;
        tmp_s_reg_265_pp0_iter3_reg <= tmp_s_reg_265_pp0_iter2_reg;
    end
end

always @ (*) begin
    if (((icmp_ln315_fu_137_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_37 = 2'd0;
    end else begin
        ap_sig_allocacmp_i_37 = i_fu_54;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        b_num_ce0 = 1'b1;
    end else begin
        b_num_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        b_num_we0 = 1'b1;
    end else begin
        b_num_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln315_fu_143_p2 = (ap_sig_allocacmp_i_37 + 2'd1);

assign add_ln317_fu_193_p2 = (sub_ln542 + zext_ln317_fu_190_p1);

assign add_ln319_fu_155_p2 = (ap_sig_allocacmp_i_37 + trunc_ln297_3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign b_num_address0 = zext_ln317_1_fu_198_p1;

assign b_num_d0 = select_ln316_reg_276;

assign grp_fu_12725_p_ce = 1'b1;

assign grp_fu_12725_p_din0 = tmp_s_fu_166_p5;

assign grp_fu_12725_p_din1 = tmp_142_fu_175_p5;

assign grp_fu_12725_p_opcode = 2'd0;

assign icmp_ln315_fu_137_p2 = ((ap_sig_allocacmp_i_37 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln316_fu_149_p2 = ((ap_sig_allocacmp_i_37 < sub11_i_i) ? 1'b1 : 1'b0);

assign select_ln316_fu_184_p3 = ((icmp_ln316_reg_255_pp0_iter3_reg[0:0] == 1'b1) ? tmp_s_reg_265_pp0_iter3_reg : grp_fu_12725_p_dout0);

assign zext_ln317_1_fu_198_p1 = add_ln317_fu_193_p2;

assign zext_ln317_fu_190_p1 = i_37_reg_245_pp0_iter4_reg;

endmodule //main_main_Pipeline_VITIS_LOOP_315_240
