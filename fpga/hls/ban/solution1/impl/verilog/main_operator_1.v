// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module main_operator_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        this_p_read,
        b_1_address0,
        b_1_ce0,
        b_1_q0,
        b_1_address1,
        b_1_ce1,
        b_1_q1,
        this_1_offset,
        b_p_read,
        b_1_offset,
        grp_fu_1967_p_din0,
        grp_fu_1967_p_din1,
        grp_fu_1967_p_opcode,
        grp_fu_1967_p_dout0,
        grp_fu_1967_p_ce
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] this_p_read;
output  [5:0] b_1_address0;
output   b_1_ce0;
input  [31:0] b_1_q0;
output  [5:0] b_1_address1;
output   b_1_ce1;
input  [31:0] b_1_q1;
input  [4:0] this_1_offset;
input  [31:0] b_p_read;
input  [4:0] b_1_offset;
output  [31:0] grp_fu_1967_p_din0;
output  [31:0] grp_fu_1967_p_din1;
output  [4:0] grp_fu_1967_p_opcode;
input  [0:0] grp_fu_1967_p_dout0;
output   grp_fu_1967_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] b_1_address0;
reg b_1_ce0;
reg b_1_ce1;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state4;
reg   [5:0] b_1_addr16_reg_318;
wire   [0:0] icmp_ln60_fu_162_p2;
reg   [0:0] icmp_ln60_reg_328;
wire   [0:0] icmp_ln60_16_fu_186_p2;
reg   [0:0] icmp_ln60_16_reg_332;
wire   [0:0] icmp_ln60_17_fu_192_p2;
reg   [0:0] icmp_ln60_17_reg_337;
wire   [0:0] and_ln60_fu_202_p2;
reg   [0:0] and_ln60_reg_342;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln60_6_fu_208_p2;
reg   [0:0] icmp_ln60_6_reg_346;
wire   [0:0] icmp_ln60_18_fu_231_p2;
reg   [0:0] icmp_ln60_18_reg_350;
wire   [0:0] icmp_ln60_19_fu_237_p2;
reg   [0:0] icmp_ln60_19_reg_355;
wire   [0:0] and_ln60_5_fu_247_p2;
reg   [0:0] and_ln60_5_reg_360;
wire    ap_CS_fsm_state5;
wire   [1:0] trunc_ln136_fu_257_p1;
reg   [1:0] trunc_ln136_reg_364;
wire   [0:0] or_ln142_fu_274_p2;
reg   [0:0] or_ln142_reg_369;
wire   [0:0] tmp_25_fu_280_p3;
reg   [0:0] tmp_25_reg_373;
wire   [1:0] sub_ln147_fu_288_p2;
reg   [1:0] sub_ln147_reg_377;
wire    grp_p_sum_fu_88_ap_start;
wire    grp_p_sum_fu_88_ap_done;
wire    grp_p_sum_fu_88_ap_idle;
wire    grp_p_sum_fu_88_ap_ready;
wire   [5:0] grp_p_sum_fu_88_b_1_address0;
wire    grp_p_sum_fu_88_b_1_ce0;
wire   [5:0] grp_p_sum_fu_88_b_1_address1;
wire    grp_p_sum_fu_88_b_1_ce1;
reg   [4:0] grp_p_sum_fu_88_a_1_offset;
reg   [4:0] grp_p_sum_fu_88_b_1_offset;
reg   [1:0] grp_p_sum_fu_88_diff_p;
reg    grp_p_sum_fu_88_ap_start_reg;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln131_1_fu_130_p1;
wire   [63:0] zext_ln60_5_fu_157_p1;
wire   [3:0] trunc_ln131_fu_112_p1;
wire   [5:0] tmp_47_cast_fu_116_p3;
wire   [5:0] zext_ln131_fu_108_p1;
wire   [5:0] sub_ln131_fu_124_p2;
wire   [3:0] trunc_ln60_fu_139_p1;
wire   [5:0] tmp_48_cast_fu_143_p3;
wire   [5:0] zext_ln60_fu_135_p1;
wire   [5:0] sub_ln60_fu_151_p2;
wire   [31:0] bitcast_ln60_fu_168_p1;
wire   [7:0] tmp_fu_172_p4;
wire   [22:0] trunc_ln60_8_fu_182_p1;
wire   [0:0] or_ln60_fu_198_p2;
wire   [31:0] bitcast_ln60_4_fu_213_p1;
wire   [7:0] tmp_42_fu_217_p4;
wire   [22:0] trunc_ln60_9_fu_227_p1;
wire   [0:0] or_ln60_4_fu_243_p2;
wire   [31:0] diff_p_fu_253_p2;
wire   [0:0] icmp_ln139_fu_262_p2;
wire   [0:0] icmp_ln142_fu_268_p2;
reg    ap_predicate_op62_call_state6;
reg    ap_predicate_op64_call_state6;
reg    ap_block_state6_on_subcall_done;
reg   [5:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_condition_167;
reg    ap_condition_176;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 grp_p_sum_fu_88_ap_start_reg = 1'b0;
end

main_p_sum grp_p_sum_fu_88(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_p_sum_fu_88_ap_start),
    .ap_done(grp_p_sum_fu_88_ap_done),
    .ap_idle(grp_p_sum_fu_88_ap_idle),
    .ap_ready(grp_p_sum_fu_88_ap_ready),
    .b_1_address0(grp_p_sum_fu_88_b_1_address0),
    .b_1_ce0(grp_p_sum_fu_88_b_1_ce0),
    .b_1_q0(b_1_q0),
    .b_1_address1(grp_p_sum_fu_88_b_1_address1),
    .b_1_ce1(grp_p_sum_fu_88_b_1_ce1),
    .b_1_q1(b_1_q1),
    .a_1_offset(grp_p_sum_fu_88_a_1_offset),
    .b_1_offset(grp_p_sum_fu_88_b_1_offset),
    .diff_p(grp_p_sum_fu_88_diff_p)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_p_sum_fu_88_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state5) & (((icmp_ln60_6_reg_346 == 1'd0) & (tmp_25_fu_280_p3 == 1'd0) & (or_ln142_fu_274_p2 == 1'd0)) | ((1'd0 == and_ln60_5_fu_247_p2) & (tmp_25_fu_280_p3 == 1'd0) & (or_ln142_fu_274_p2 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state5) & (((icmp_ln60_6_reg_346 == 1'd0) & (tmp_25_fu_280_p3 == 1'd1) & (or_ln142_fu_274_p2 == 1'd0)) | ((1'd0 == and_ln60_5_fu_247_p2) & (tmp_25_fu_280_p3 == 1'd1) & (or_ln142_fu_274_p2 == 1'd0)))))) begin
            grp_p_sum_fu_88_ap_start_reg <= 1'b1;
        end else if ((grp_p_sum_fu_88_ap_ready == 1'b1)) begin
            grp_p_sum_fu_88_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln60_6_reg_346 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        and_ln60_5_reg_360 <= and_ln60_5_fu_247_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln60_reg_328 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        and_ln60_reg_342 <= and_ln60_fu_202_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        b_1_addr16_reg_318 <= zext_ln131_1_fu_130_p1;
        icmp_ln60_reg_328 <= icmp_ln60_fu_162_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln60_16_reg_332 <= icmp_ln60_16_fu_186_p2;
        icmp_ln60_17_reg_337 <= icmp_ln60_17_fu_192_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        icmp_ln60_18_reg_350 <= icmp_ln60_18_fu_231_p2;
        icmp_ln60_19_reg_355 <= icmp_ln60_19_fu_237_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & ((1'd0 == and_ln60_fu_202_p2) | (icmp_ln60_reg_328 == 1'd0)))) begin
        icmp_ln60_6_reg_346 <= icmp_ln60_6_fu_208_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & ((1'd0 == and_ln60_5_fu_247_p2) | (icmp_ln60_6_reg_346 == 1'd0)))) begin
        or_ln142_reg_369 <= or_ln142_fu_274_p2;
        trunc_ln136_reg_364 <= trunc_ln136_fu_257_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (((icmp_ln60_6_reg_346 == 1'd0) & (tmp_25_fu_280_p3 == 1'd1) & (or_ln142_fu_274_p2 == 1'd0)) | ((1'd0 == and_ln60_5_fu_247_p2) & (tmp_25_fu_280_p3 == 1'd1) & (or_ln142_fu_274_p2 == 1'd0))))) begin
        sub_ln147_reg_377 <= sub_ln147_fu_288_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (((icmp_ln60_6_reg_346 == 1'd0) & (or_ln142_fu_274_p2 == 1'd0)) | ((1'd0 == and_ln60_5_fu_247_p2) & (or_ln142_fu_274_p2 == 1'd0))))) begin
        tmp_25_reg_373 <= diff_p_fu_253_p2[32'd31];
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state6_on_subcall_done)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        b_1_address0 = b_1_addr16_reg_318;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_1_address0 = zext_ln60_5_fu_157_p1;
    end else if ((((1'b1 == ap_CS_fsm_state6) & (((((1'd0 == and_ln60_5_reg_360) & (1'd0 == and_ln60_reg_342) & (tmp_25_reg_373 == 1'd1) & (or_ln142_reg_369 == 1'd0)) | ((1'd0 == and_ln60_reg_342) & (icmp_ln60_6_reg_346 == 1'd0) & (tmp_25_reg_373 == 1'd1) & (or_ln142_reg_369 == 1'd0))) | ((1'd0 == and_ln60_5_reg_360) & (icmp_ln60_reg_328 == 1'd0) & (tmp_25_reg_373 == 1'd1) & (or_ln142_reg_369 == 1'd0))) | ((icmp_ln60_6_reg_346 == 1'd0) & (icmp_ln60_reg_328 == 1'd0) & (tmp_25_reg_373 == 1'd1) & (or_ln142_reg_369 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state6) & (((((1'd0 == and_ln60_5_reg_360) & (1'd0 == and_ln60_reg_342) & (tmp_25_reg_373 == 1'd0) & (or_ln142_reg_369 == 1'd0)) | ((1'd0 == and_ln60_reg_342) & (icmp_ln60_6_reg_346 == 1'd0) & (tmp_25_reg_373 == 1'd0) & (or_ln142_reg_369 == 1'd0))) | ((1'd0 == and_ln60_5_reg_360) & (icmp_ln60_reg_328 == 1'd0) & (tmp_25_reg_373 == 1'd0) & (or_ln142_reg_369 == 1'd0))) | ((icmp_ln60_6_reg_346 == 1'd0) & (icmp_ln60_reg_328 == 1'd0) & (tmp_25_reg_373 == 1'd0) & (or_ln142_reg_369 == 1'd0)))))) begin
        b_1_address0 = grp_p_sum_fu_88_b_1_address0;
    end else begin
        b_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        b_1_ce0 = 1'b1;
    end else if ((((1'b1 == ap_CS_fsm_state6) & (((((1'd0 == and_ln60_5_reg_360) & (1'd0 == and_ln60_reg_342) & (tmp_25_reg_373 == 1'd1) & (or_ln142_reg_369 == 1'd0)) | ((1'd0 == and_ln60_reg_342) & (icmp_ln60_6_reg_346 == 1'd0) & (tmp_25_reg_373 == 1'd1) & (or_ln142_reg_369 == 1'd0))) | ((1'd0 == and_ln60_5_reg_360) & (icmp_ln60_reg_328 == 1'd0) & (tmp_25_reg_373 == 1'd1) & (or_ln142_reg_369 == 1'd0))) | ((icmp_ln60_6_reg_346 == 1'd0) & (icmp_ln60_reg_328 == 1'd0) & (tmp_25_reg_373 == 1'd1) & (or_ln142_reg_369 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state6) & (((((1'd0 == and_ln60_5_reg_360) & (1'd0 == and_ln60_reg_342) & (tmp_25_reg_373 == 1'd0) & (or_ln142_reg_369 == 1'd0)) | ((1'd0 == and_ln60_reg_342) & (icmp_ln60_6_reg_346 == 1'd0) & (tmp_25_reg_373 == 1'd0) & (or_ln142_reg_369 == 1'd0))) | ((1'd0 == and_ln60_5_reg_360) & (icmp_ln60_reg_328 == 1'd0) & (tmp_25_reg_373 == 1'd0) & (or_ln142_reg_369 == 1'd0))) | ((icmp_ln60_6_reg_346 == 1'd0) & (icmp_ln60_reg_328 == 1'd0) & (tmp_25_reg_373 == 1'd0) & (or_ln142_reg_369 == 1'd0)))))) begin
        b_1_ce0 = grp_p_sum_fu_88_b_1_ce0;
    end else begin
        b_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & (((((1'd0 == and_ln60_5_reg_360) & (1'd0 == and_ln60_reg_342) & (tmp_25_reg_373 == 1'd1) & (or_ln142_reg_369 == 1'd0)) | ((1'd0 == and_ln60_reg_342) & (icmp_ln60_6_reg_346 == 1'd0) & (tmp_25_reg_373 == 1'd1) & (or_ln142_reg_369 == 1'd0))) | ((1'd0 == and_ln60_5_reg_360) & (icmp_ln60_reg_328 == 1'd0) & (tmp_25_reg_373 == 1'd1) & (or_ln142_reg_369 == 1'd0))) | ((icmp_ln60_6_reg_346 == 1'd0) & (icmp_ln60_reg_328 == 1'd0) & (tmp_25_reg_373 == 1'd1) & (or_ln142_reg_369 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state6) & (((((1'd0 == and_ln60_5_reg_360) & (1'd0 == and_ln60_reg_342) & (tmp_25_reg_373 == 1'd0) & (or_ln142_reg_369 == 1'd0)) | ((1'd0 == and_ln60_reg_342) & (icmp_ln60_6_reg_346 == 1'd0) & (tmp_25_reg_373 == 1'd0) & (or_ln142_reg_369 == 1'd0))) | ((1'd0 == and_ln60_5_reg_360) & (icmp_ln60_reg_328 == 1'd0) & (tmp_25_reg_373 == 1'd0) & (or_ln142_reg_369 == 1'd0))) | ((icmp_ln60_6_reg_346 == 1'd0) & (icmp_ln60_reg_328 == 1'd0) & (tmp_25_reg_373 == 1'd0) & (or_ln142_reg_369 == 1'd0)))))) begin
        b_1_ce1 = grp_p_sum_fu_88_b_1_ce1;
    end else begin
        b_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((1'b1 == ap_condition_176)) begin
            grp_p_sum_fu_88_a_1_offset = b_1_offset;
        end else if ((1'b1 == ap_condition_167)) begin
            grp_p_sum_fu_88_a_1_offset = this_1_offset;
        end else begin
            grp_p_sum_fu_88_a_1_offset = 'bx;
        end
    end else begin
        grp_p_sum_fu_88_a_1_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((1'b1 == ap_condition_176)) begin
            grp_p_sum_fu_88_b_1_offset = this_1_offset;
        end else if ((1'b1 == ap_condition_167)) begin
            grp_p_sum_fu_88_b_1_offset = b_1_offset;
        end else begin
            grp_p_sum_fu_88_b_1_offset = 'bx;
        end
    end else begin
        grp_p_sum_fu_88_b_1_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((1'b1 == ap_condition_176)) begin
            grp_p_sum_fu_88_diff_p = sub_ln147_reg_377;
        end else if ((1'b1 == ap_condition_167)) begin
            grp_p_sum_fu_88_diff_p = trunc_ln136_reg_364;
        end else begin
            grp_p_sum_fu_88_diff_p = 'bx;
        end
    end else begin
        grp_p_sum_fu_88_diff_p = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((icmp_ln60_fu_162_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((icmp_ln60_fu_162_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (((1'd0 == and_ln60_fu_202_p2) & (icmp_ln60_6_fu_208_p2 == 1'd0)) | ((icmp_ln60_6_fu_208_p2 == 1'd0) & (icmp_ln60_reg_328 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((1'b1 == ap_CS_fsm_state3) & (((1'd0 == and_ln60_fu_202_p2) & (icmp_ln60_6_fu_208_p2 == 1'd1)) | ((icmp_ln60_6_fu_208_p2 == 1'd1) & (icmp_ln60_reg_328 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln60_5_fu_247_p2 = (or_ln60_4_fu_243_p2 & grp_fu_1967_p_dout0);

assign and_ln60_fu_202_p2 = (or_ln60_fu_198_p2 & grp_fu_1967_p_dout0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state6_on_subcall_done = (((ap_predicate_op64_call_state6 == 1'b1) & (grp_p_sum_fu_88_ap_done == 1'b0)) | ((ap_predicate_op62_call_state6 == 1'b1) & (grp_p_sum_fu_88_ap_done == 1'b0)));
end

always @ (*) begin
    ap_condition_167 = (((((1'd0 == and_ln60_5_reg_360) & (1'd0 == and_ln60_reg_342) & (tmp_25_reg_373 == 1'd0) & (or_ln142_reg_369 == 1'd0)) | ((1'd0 == and_ln60_reg_342) & (icmp_ln60_6_reg_346 == 1'd0) & (tmp_25_reg_373 == 1'd0) & (or_ln142_reg_369 == 1'd0))) | ((1'd0 == and_ln60_5_reg_360) & (icmp_ln60_reg_328 == 1'd0) & (tmp_25_reg_373 == 1'd0) & (or_ln142_reg_369 == 1'd0))) | ((icmp_ln60_6_reg_346 == 1'd0) & (icmp_ln60_reg_328 == 1'd0) & (tmp_25_reg_373 == 1'd0) & (or_ln142_reg_369 == 1'd0)));
end

always @ (*) begin
    ap_condition_176 = (((((1'd0 == and_ln60_5_reg_360) & (1'd0 == and_ln60_reg_342) & (tmp_25_reg_373 == 1'd1) & (or_ln142_reg_369 == 1'd0)) | ((1'd0 == and_ln60_reg_342) & (icmp_ln60_6_reg_346 == 1'd0) & (tmp_25_reg_373 == 1'd1) & (or_ln142_reg_369 == 1'd0))) | ((1'd0 == and_ln60_5_reg_360) & (icmp_ln60_reg_328 == 1'd0) & (tmp_25_reg_373 == 1'd1) & (or_ln142_reg_369 == 1'd0))) | ((icmp_ln60_6_reg_346 == 1'd0) & (icmp_ln60_reg_328 == 1'd0) & (tmp_25_reg_373 == 1'd1) & (or_ln142_reg_369 == 1'd0)));
end

always @ (*) begin
    ap_predicate_op62_call_state6 = (((((1'd0 == and_ln60_5_reg_360) & (1'd0 == and_ln60_reg_342) & (tmp_25_reg_373 == 1'd0) & (or_ln142_reg_369 == 1'd0)) | ((1'd0 == and_ln60_reg_342) & (icmp_ln60_6_reg_346 == 1'd0) & (tmp_25_reg_373 == 1'd0) & (or_ln142_reg_369 == 1'd0))) | ((1'd0 == and_ln60_5_reg_360) & (icmp_ln60_reg_328 == 1'd0) & (tmp_25_reg_373 == 1'd0) & (or_ln142_reg_369 == 1'd0))) | ((icmp_ln60_6_reg_346 == 1'd0) & (icmp_ln60_reg_328 == 1'd0) & (tmp_25_reg_373 == 1'd0) & (or_ln142_reg_369 == 1'd0)));
end

always @ (*) begin
    ap_predicate_op64_call_state6 = (((((1'd0 == and_ln60_5_reg_360) & (1'd0 == and_ln60_reg_342) & (tmp_25_reg_373 == 1'd1) & (or_ln142_reg_369 == 1'd0)) | ((1'd0 == and_ln60_reg_342) & (icmp_ln60_6_reg_346 == 1'd0) & (tmp_25_reg_373 == 1'd1) & (or_ln142_reg_369 == 1'd0))) | ((1'd0 == and_ln60_5_reg_360) & (icmp_ln60_reg_328 == 1'd0) & (tmp_25_reg_373 == 1'd1) & (or_ln142_reg_369 == 1'd0))) | ((icmp_ln60_6_reg_346 == 1'd0) & (icmp_ln60_reg_328 == 1'd0) & (tmp_25_reg_373 == 1'd1) & (or_ln142_reg_369 == 1'd0)));
end

assign b_1_address1 = grp_p_sum_fu_88_b_1_address1;

assign bitcast_ln60_4_fu_213_p1 = b_1_q0;

assign bitcast_ln60_fu_168_p1 = b_1_q0;

assign diff_p_fu_253_p2 = (this_p_read - b_p_read);

assign grp_fu_1967_p_ce = 1'b1;

assign grp_fu_1967_p_din0 = b_1_q0;

assign grp_fu_1967_p_din1 = 32'd0;

assign grp_fu_1967_p_opcode = 5'd1;

assign grp_p_sum_fu_88_ap_start = grp_p_sum_fu_88_ap_start_reg;

assign icmp_ln139_fu_262_p2 = (($signed(diff_p_fu_253_p2) > $signed(32'd2)) ? 1'b1 : 1'b0);

assign icmp_ln142_fu_268_p2 = (($signed(diff_p_fu_253_p2) < $signed(32'd4294967294)) ? 1'b1 : 1'b0);

assign icmp_ln60_16_fu_186_p2 = ((tmp_fu_172_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln60_17_fu_192_p2 = ((trunc_ln60_8_fu_182_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln60_18_fu_231_p2 = ((tmp_42_fu_217_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln60_19_fu_237_p2 = ((trunc_ln60_9_fu_227_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln60_6_fu_208_p2 = ((b_p_read == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln60_fu_162_p2 = ((this_p_read == 32'd0) ? 1'b1 : 1'b0);

assign or_ln142_fu_274_p2 = (icmp_ln142_fu_268_p2 | icmp_ln139_fu_262_p2);

assign or_ln60_4_fu_243_p2 = (icmp_ln60_19_reg_355 | icmp_ln60_18_reg_350);

assign or_ln60_fu_198_p2 = (icmp_ln60_17_reg_337 | icmp_ln60_16_reg_332);

assign sub_ln131_fu_124_p2 = (tmp_47_cast_fu_116_p3 - zext_ln131_fu_108_p1);

assign sub_ln147_fu_288_p2 = (2'd0 - trunc_ln136_fu_257_p1);

assign sub_ln60_fu_151_p2 = (tmp_48_cast_fu_143_p3 - zext_ln60_fu_135_p1);

assign tmp_25_fu_280_p3 = diff_p_fu_253_p2[32'd31];

assign tmp_42_fu_217_p4 = {{bitcast_ln60_4_fu_213_p1[30:23]}};

assign tmp_47_cast_fu_116_p3 = {{trunc_ln131_fu_112_p1}, {2'd0}};

assign tmp_48_cast_fu_143_p3 = {{trunc_ln60_fu_139_p1}, {2'd0}};

assign tmp_fu_172_p4 = {{bitcast_ln60_fu_168_p1[30:23]}};

assign trunc_ln131_fu_112_p1 = b_1_offset[3:0];

assign trunc_ln136_fu_257_p1 = diff_p_fu_253_p2[1:0];

assign trunc_ln60_8_fu_182_p1 = bitcast_ln60_fu_168_p1[22:0];

assign trunc_ln60_9_fu_227_p1 = bitcast_ln60_4_fu_213_p1[22:0];

assign trunc_ln60_fu_139_p1 = this_1_offset[3:0];

assign zext_ln131_1_fu_130_p1 = sub_ln131_fu_124_p2;

assign zext_ln131_fu_108_p1 = b_1_offset;

assign zext_ln60_5_fu_157_p1 = sub_ln60_fu_151_p2;

assign zext_ln60_fu_135_p1 = this_1_offset;

endmodule //main_operator_1
