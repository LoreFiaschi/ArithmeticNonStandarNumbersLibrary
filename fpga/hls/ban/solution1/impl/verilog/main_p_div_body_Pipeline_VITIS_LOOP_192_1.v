// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module main_p_div_body_Pipeline_VITIS_LOOP_192_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sub_ln188,
        num_num_address0,
        num_num_ce0,
        num_num_q0,
        normalizer,
        den_norm_2_03_out,
        den_norm_2_03_out_ap_vld,
        den_norm_1_02_out,
        den_norm_1_02_out_ap_vld,
        den_norm_load_2208_out,
        den_norm_load_2208_out_ap_vld,
        den_norm_load_2194_out,
        den_norm_load_2194_out_ap_vld,
        grp_fu_818_p_din0,
        grp_fu_818_p_din1,
        grp_fu_818_p_dout0,
        grp_fu_818_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [4:0] sub_ln188;
output  [5:0] num_num_address0;
output   num_num_ce0;
input  [31:0] num_num_q0;
input  [31:0] normalizer;
output  [31:0] den_norm_2_03_out;
output   den_norm_2_03_out_ap_vld;
output  [31:0] den_norm_1_02_out;
output   den_norm_1_02_out_ap_vld;
output  [31:0] den_norm_load_2208_out;
output   den_norm_load_2208_out_ap_vld;
output  [31:0] den_norm_load_2194_out;
output   den_norm_load_2194_out_ap_vld;
output  [31:0] grp_fu_818_p_din0;
output  [31:0] grp_fu_818_p_din1;
input  [31:0] grp_fu_818_p_dout0;
output   grp_fu_818_p_ce;

reg ap_idle;
reg num_num_ce0;
reg den_norm_2_03_out_ap_vld;
reg den_norm_1_02_out_ap_vld;
reg den_norm_load_2208_out_ap_vld;
reg den_norm_load_2194_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln192_fu_135_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln192_reg_299;
reg   [0:0] icmp_ln192_reg_299_pp0_iter1_reg;
reg   [0:0] icmp_ln192_reg_299_pp0_iter2_reg;
reg   [0:0] icmp_ln192_reg_299_pp0_iter3_reg;
reg   [0:0] icmp_ln192_reg_299_pp0_iter4_reg;
reg   [0:0] icmp_ln192_reg_299_pp0_iter5_reg;
reg   [0:0] icmp_ln192_reg_299_pp0_iter6_reg;
reg   [0:0] icmp_ln192_reg_299_pp0_iter7_reg;
reg   [0:0] icmp_ln192_reg_299_pp0_iter8_reg;
reg   [0:0] icmp_ln192_reg_299_pp0_iter9_reg;
wire   [0:0] icmp_ln193_fu_156_p2;
reg   [0:0] icmp_ln193_reg_308;
reg   [0:0] icmp_ln193_reg_308_pp0_iter1_reg;
reg   [0:0] icmp_ln193_reg_308_pp0_iter2_reg;
reg   [0:0] icmp_ln193_reg_308_pp0_iter3_reg;
reg   [0:0] icmp_ln193_reg_308_pp0_iter4_reg;
reg   [0:0] icmp_ln193_reg_308_pp0_iter5_reg;
reg   [0:0] icmp_ln193_reg_308_pp0_iter6_reg;
reg   [0:0] icmp_ln193_reg_308_pp0_iter7_reg;
reg   [0:0] icmp_ln193_reg_308_pp0_iter8_reg;
reg   [0:0] icmp_ln193_reg_308_pp0_iter9_reg;
reg   [0:0] icmp_ln193_reg_308_pp0_iter10_reg;
wire   [31:0] xor_ln193_fu_177_p2;
reg   [31:0] xor_ln193_reg_316;
wire   [31:0] bitcast_ln193_1_fu_183_p1;
reg   [31:0] den_norm_1_reg_326;
wire  signed [63:0] sext_ln193_fu_151_p1;
wire    ap_block_pp0_stage0;
reg   [1:0] i_fu_46;
wire   [1:0] add_ln192_fu_162_p2;
wire    ap_loop_init;
reg   [1:0] ap_sig_allocacmp_i_4;
reg   [31:0] den_norm_2_fu_50;
wire   [31:0] den_norm_2_11_fu_217_p3;
reg   [31:0] den_norm_2_5_fu_54;
wire   [31:0] den_norm_2_10_fu_211_p3;
reg   [31:0] den_norm_2_6_fu_58;
wire   [31:0] den_norm_2_9_fu_205_p3;
reg   [31:0] den_norm_2_03_fu_62;
wire   [31:0] den_norm_2_8_fu_199_p3;
wire    ap_block_pp0_stage0_01001;
wire  signed [5:0] sub_ln188_cast_fu_123_p1;
wire   [5:0] zext_ln193_fu_141_p1;
wire   [5:0] add_ln193_fu_145_p2;
wire   [31:0] bitcast_ln193_fu_173_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_done_reg = 1'b0;
end

main_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln192_fu_135_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_46 <= add_ln192_fu_162_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_46 <= 2'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        den_norm_1_reg_326 <= grp_fu_818_p_dout0;
        icmp_ln192_reg_299_pp0_iter2_reg <= icmp_ln192_reg_299_pp0_iter1_reg;
        icmp_ln192_reg_299_pp0_iter3_reg <= icmp_ln192_reg_299_pp0_iter2_reg;
        icmp_ln192_reg_299_pp0_iter4_reg <= icmp_ln192_reg_299_pp0_iter3_reg;
        icmp_ln192_reg_299_pp0_iter5_reg <= icmp_ln192_reg_299_pp0_iter4_reg;
        icmp_ln192_reg_299_pp0_iter6_reg <= icmp_ln192_reg_299_pp0_iter5_reg;
        icmp_ln192_reg_299_pp0_iter7_reg <= icmp_ln192_reg_299_pp0_iter6_reg;
        icmp_ln192_reg_299_pp0_iter8_reg <= icmp_ln192_reg_299_pp0_iter7_reg;
        icmp_ln192_reg_299_pp0_iter9_reg <= icmp_ln192_reg_299_pp0_iter8_reg;
        icmp_ln193_reg_308_pp0_iter10_reg <= icmp_ln193_reg_308_pp0_iter9_reg;
        icmp_ln193_reg_308_pp0_iter2_reg <= icmp_ln193_reg_308_pp0_iter1_reg;
        icmp_ln193_reg_308_pp0_iter3_reg <= icmp_ln193_reg_308_pp0_iter2_reg;
        icmp_ln193_reg_308_pp0_iter4_reg <= icmp_ln193_reg_308_pp0_iter3_reg;
        icmp_ln193_reg_308_pp0_iter5_reg <= icmp_ln193_reg_308_pp0_iter4_reg;
        icmp_ln193_reg_308_pp0_iter6_reg <= icmp_ln193_reg_308_pp0_iter5_reg;
        icmp_ln193_reg_308_pp0_iter7_reg <= icmp_ln193_reg_308_pp0_iter6_reg;
        icmp_ln193_reg_308_pp0_iter8_reg <= icmp_ln193_reg_308_pp0_iter7_reg;
        icmp_ln193_reg_308_pp0_iter9_reg <= icmp_ln193_reg_308_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln192_reg_299 <= icmp_ln192_fu_135_p2;
        icmp_ln192_reg_299_pp0_iter1_reg <= icmp_ln192_reg_299;
        icmp_ln193_reg_308_pp0_iter1_reg <= icmp_ln193_reg_308;
        xor_ln193_reg_316 <= xor_ln193_fu_177_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        den_norm_2_03_fu_62 <= den_norm_2_8_fu_199_p3;
        den_norm_2_5_fu_54 <= den_norm_2_10_fu_211_p3;
        den_norm_2_6_fu_58 <= den_norm_2_9_fu_205_p3;
        den_norm_2_fu_50 <= den_norm_2_11_fu_217_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln192_fu_135_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln193_reg_308 <= icmp_ln193_fu_156_p2;
    end
end

always @ (*) begin
    if (((icmp_ln192_fu_135_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_4 = 2'd1;
    end else begin
        ap_sig_allocacmp_i_4 = i_fu_46;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln192_reg_299_pp0_iter9_reg == 1'd1))) begin
        den_norm_1_02_out_ap_vld = 1'b1;
    end else begin
        den_norm_1_02_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln192_reg_299_pp0_iter9_reg == 1'd1))) begin
        den_norm_2_03_out_ap_vld = 1'b1;
    end else begin
        den_norm_2_03_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln192_reg_299_pp0_iter9_reg == 1'd1))) begin
        den_norm_load_2194_out_ap_vld = 1'b1;
    end else begin
        den_norm_load_2194_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln192_reg_299_pp0_iter9_reg == 1'd1))) begin
        den_norm_load_2208_out_ap_vld = 1'b1;
    end else begin
        den_norm_load_2208_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        num_num_ce0 = 1'b1;
    end else begin
        num_num_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln192_fu_162_p2 = (ap_sig_allocacmp_i_4 + 2'd1);

assign add_ln193_fu_145_p2 = ($signed(sub_ln188_cast_fu_123_p1) + $signed(zext_ln193_fu_141_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln193_1_fu_183_p1 = xor_ln193_reg_316;

assign bitcast_ln193_fu_173_p1 = num_num_q0;

assign den_norm_1_02_out = den_norm_2_6_fu_58;

assign den_norm_2_03_out = den_norm_2_03_fu_62;

assign den_norm_2_10_fu_211_p3 = ((icmp_ln193_reg_308_pp0_iter10_reg[0:0] == 1'b1) ? den_norm_2_5_fu_54 : den_norm_1_reg_326);

assign den_norm_2_11_fu_217_p3 = ((icmp_ln193_reg_308_pp0_iter10_reg[0:0] == 1'b1) ? den_norm_1_reg_326 : den_norm_2_fu_50);

assign den_norm_2_8_fu_199_p3 = ((icmp_ln193_reg_308_pp0_iter10_reg[0:0] == 1'b1) ? den_norm_2_03_fu_62 : den_norm_1_reg_326);

assign den_norm_2_9_fu_205_p3 = ((icmp_ln193_reg_308_pp0_iter10_reg[0:0] == 1'b1) ? den_norm_1_reg_326 : den_norm_2_6_fu_58);

assign den_norm_load_2194_out = den_norm_2_fu_50;

assign den_norm_load_2208_out = den_norm_2_5_fu_54;

assign grp_fu_818_p_ce = 1'b1;

assign grp_fu_818_p_din0 = bitcast_ln193_1_fu_183_p1;

assign grp_fu_818_p_din1 = normalizer;

assign icmp_ln192_fu_135_p2 = ((ap_sig_allocacmp_i_4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln193_fu_156_p2 = ((ap_sig_allocacmp_i_4 == 2'd1) ? 1'b1 : 1'b0);

assign num_num_address0 = sext_ln193_fu_151_p1;

assign sext_ln193_fu_151_p1 = $signed(add_ln193_fu_145_p2);

assign sub_ln188_cast_fu_123_p1 = $signed(sub_ln188);

assign xor_ln193_fu_177_p2 = (bitcast_ln193_fu_173_p1 ^ 32'd2147483648);

assign zext_ln193_fu_141_p1 = ap_sig_allocacmp_i_4;

endmodule //main_p_div_body_Pipeline_VITIS_LOOP_192_1
