-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity main_mul_body is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    this_p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    b_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    b_1_ce0 : OUT STD_LOGIC;
    b_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    b_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    b_1_ce1 : OUT STD_LOGIC;
    b_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    b_1_address2 : OUT STD_LOGIC_VECTOR (5 downto 0);
    b_1_ce2 : OUT STD_LOGIC;
    b_1_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
    this_1_offset : IN STD_LOGIC_VECTOR (3 downto 0);
    b_p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    b_1_offset : IN STD_LOGIC_VECTOR (3 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4235_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4235_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4235_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_4235_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_4235_p_ce : OUT STD_LOGIC;
    grp_fu_12725_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12725_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12725_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_12725_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12725_p_ce : OUT STD_LOGIC;
    grp_fu_4198_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4198_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4198_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4198_p_ce : OUT STD_LOGIC;
    grp_fu_4204_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4204_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4204_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4204_p_ce : OUT STD_LOGIC;
    grp_fu_12729_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12729_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12729_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12729_p_ce : OUT STD_LOGIC;
    grp_fu_12733_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12733_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12733_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_12733_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_12733_p_ce : OUT STD_LOGIC );
end;


architecture behav of main_mul_body is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (31 downto 0) := "00000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (31 downto 0) := "00000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (31 downto 0) := "00000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (31 downto 0) := "00001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (31 downto 0) := "00010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (31 downto 0) := "00100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal sub_ln173_fu_503_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln173_reg_1005 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_1_load_reg_1012 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_20_reg_1017 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_10_reg_1022 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln169_fu_512_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln169_reg_1027 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln172_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln172_reg_1040 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln169_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln172_12_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln172_12_reg_1045 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln172_13_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln172_13_reg_1055 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_1_load_17_reg_1090 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal b_1_load_18_reg_1095 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_19_reg_1100 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_i_i_reg_1105 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal mul_1_i_i_reg_1110 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_i_i_reg_1115 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_118_fu_610_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_118_reg_1120 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal tmp_122_fu_617_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_122_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal tmp_124_fu_623_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_124_reg_1132 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal i_27_reg_1137 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal add_ln187_fu_643_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln187_reg_1144 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln187_fu_637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_fu_649_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_reg_1182 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_result_num2_0_load_reg_1191 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal agg_result_num12_0_load_reg_1199 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_result_num_0_load_reg_1207 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_61_fu_799_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_61_reg_1223 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal xor_ln92_fu_810_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln92_reg_1232 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln92_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal base_fu_831_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal tmp_fu_847_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln104_fu_874_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln104_reg_1260 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal aux_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal aux_ce0 : STD_LOGIC;
    signal aux_we0 : STD_LOGIC;
    signal aux_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_ap_start : STD_LOGIC;
    signal grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_ap_done : STD_LOGIC;
    signal grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_ap_idle : STD_LOGIC;
    signal grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_ap_ready : STD_LOGIC;
    signal grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_idx_tmp_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_idx_tmp_out_ap_vld : STD_LOGIC;
    signal grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_grp_fu_1274_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_grp_fu_1274_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_grp_fu_1274_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_grp_fu_1274_p_ce : STD_LOGIC;
    signal grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_ap_start : STD_LOGIC;
    signal grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_ap_done : STD_LOGIC;
    signal grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_ap_idle : STD_LOGIC;
    signal grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_ap_ready : STD_LOGIC;
    signal grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_agg_result_num_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_agg_result_num_2_out_ap_vld : STD_LOGIC;
    signal grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_agg_result_num12_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_agg_result_num12_2_out_ap_vld : STD_LOGIC;
    signal grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_agg_result_num2_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_agg_result_num2_2_out_ap_vld : STD_LOGIC;
    signal grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_ap_start : STD_LOGIC;
    signal grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_ap_done : STD_LOGIC;
    signal grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_ap_idle : STD_LOGIC;
    signal grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_ap_ready : STD_LOGIC;
    signal grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_agg_result_num_5_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_agg_result_num_5_out_ap_vld : STD_LOGIC;
    signal grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_agg_result_num12_5_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_agg_result_num12_5_out_ap_vld : STD_LOGIC;
    signal grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_agg_result_num2_5_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_agg_result_num2_5_out_ap_vld : STD_LOGIC;
    signal agg_result_num_4_reg_284 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln104_fu_852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal agg_result_num12_4_reg_294 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_result_num2_4_reg_304 : STD_LOGIC_VECTOR (31 downto 0);
    signal base_0_lcssa_i3336_reg_314 : STD_LOGIC_VECTOR (1 downto 0);
    signal agg_result_p_0_reg_326 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_result_num_7_reg_338 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal and_ln77_fu_790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal agg_result_num12_7_reg_349 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_result_num2_7_reg_360 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_p_write_assign_reg_371 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal zext_ln193_1_fu_459_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast_fu_470_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast6_fu_481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_4_fu_525_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_fu_569_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_5_fu_595_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal zext_ln187_fu_632_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_94 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln169_fu_536_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_20_fu_130 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal num_res_2_fu_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln21_fu_702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal num_res_2_7_fu_138 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_res_2_03_fu_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_21_fu_146 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln21_fu_708_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_28_load_fu_689_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal agg_result_num2_0_fu_150 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_117_fu_723_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_result_num12_0_fu_154 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_result_num_0_fu_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_419_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_419_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal tmp_114_fu_445_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln193_fu_441_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln193_fu_453_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_fu_464_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_57_fu_475_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_115_fu_495_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln173_1_fu_491_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln173_3_fu_516_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln173_fu_520_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln172_fu_548_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sext_ln173_fu_560_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln173_2_fu_564_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln172_7_fu_574_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sext_ln173_1_fu_586_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln173_3_fu_590_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal bitcast_ln77_fu_755_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_758_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln77_fu_768_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln77_7_fu_778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln77_fu_772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln77_fu_784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln92_fu_826_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln100_fu_837_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln100_fu_843_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln104_fu_858_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln104_7_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln104_fu_868_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal grp_fu_1274_ce : STD_LOGIC;
    signal ap_return_0_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_3_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component main_mul_body_Pipeline_VITIS_LOOP_84_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        agg_result_num_0 : IN STD_LOGIC_VECTOR (31 downto 0);
        agg_result_num12_0 : IN STD_LOGIC_VECTOR (31 downto 0);
        agg_result_num2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
        idx_tmp_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        idx_tmp_out_ap_vld : OUT STD_LOGIC;
        grp_fu_1274_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1274_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1274_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_1274_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_1274_p_ce : OUT STD_LOGIC );
    end component;


    component main_mul_body_Pipeline_VITIS_LOOP_92_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        agg_result_num_0 : IN STD_LOGIC_VECTOR (31 downto 0);
        agg_result_num12_0 : IN STD_LOGIC_VECTOR (31 downto 0);
        agg_result_num2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
        zext_ln92 : IN STD_LOGIC_VECTOR (1 downto 0);
        xor_ln92 : IN STD_LOGIC_VECTOR (1 downto 0);
        agg_result_num_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        agg_result_num_2_out_ap_vld : OUT STD_LOGIC;
        agg_result_num12_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        agg_result_num12_2_out_ap_vld : OUT STD_LOGIC;
        agg_result_num2_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        agg_result_num2_2_out_ap_vld : OUT STD_LOGIC );
    end component;


    component main_mul_body_Pipeline_VITIS_LOOP_104_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        agg_result_num_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        agg_result_num12_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        agg_result_num2_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        zext_ln104 : IN STD_LOGIC_VECTOR (1 downto 0);
        zext_ln104_14 : IN STD_LOGIC_VECTOR (2 downto 0);
        agg_result_num_5_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        agg_result_num_5_out_ap_vld : OUT STD_LOGIC;
        agg_result_num12_5_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        agg_result_num12_5_out_ap_vld : OUT STD_LOGIC;
        agg_result_num2_5_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        agg_result_num2_5_out_ap_vld : OUT STD_LOGIC );
    end component;


    component main_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component main_fmul_32ns_32ns_32_3_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component main_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component main_mux_32_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component main_sqrt_aux_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    aux_U : component main_sqrt_aux_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => aux_address0,
        ce0 => aux_ce0,
        we0 => aux_we0,
        d0 => tmp_124_reg_1132,
        q0 => aux_q0);

    grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383 : component main_mul_body_Pipeline_VITIS_LOOP_84_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_ap_start,
        ap_done => grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_ap_done,
        ap_idle => grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_ap_idle,
        ap_ready => grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_ap_ready,
        agg_result_num_0 => agg_result_num_0_load_reg_1207,
        agg_result_num12_0 => agg_result_num12_0_load_reg_1199,
        agg_result_num2_0 => agg_result_num2_0_load_reg_1191,
        idx_tmp_out => grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_idx_tmp_out,
        idx_tmp_out_ap_vld => grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_idx_tmp_out_ap_vld,
        grp_fu_1274_p_din0 => grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_grp_fu_1274_p_din0,
        grp_fu_1274_p_din1 => grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_grp_fu_1274_p_din1,
        grp_fu_1274_p_opcode => grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_grp_fu_1274_p_opcode,
        grp_fu_1274_p_dout0 => grp_fu_4235_p_dout0,
        grp_fu_1274_p_ce => grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_grp_fu_1274_p_ce);

    grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391 : component main_mul_body_Pipeline_VITIS_LOOP_92_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_ap_start,
        ap_done => grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_ap_done,
        ap_idle => grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_ap_idle,
        ap_ready => grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_ap_ready,
        agg_result_num_0 => agg_result_num_0_load_reg_1207,
        agg_result_num12_0 => agg_result_num12_0_load_reg_1199,
        agg_result_num2_0 => agg_result_num2_0_load_reg_1191,
        zext_ln92 => empty_61_reg_1223,
        xor_ln92 => xor_ln92_reg_1232,
        agg_result_num_2_out => grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_agg_result_num_2_out,
        agg_result_num_2_out_ap_vld => grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_agg_result_num_2_out_ap_vld,
        agg_result_num12_2_out => grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_agg_result_num12_2_out,
        agg_result_num12_2_out_ap_vld => grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_agg_result_num12_2_out_ap_vld,
        agg_result_num2_2_out => grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_agg_result_num2_2_out,
        agg_result_num2_2_out_ap_vld => grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_agg_result_num2_2_out_ap_vld);

    grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403 : component main_mul_body_Pipeline_VITIS_LOOP_104_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_ap_start,
        ap_done => grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_ap_done,
        ap_idle => grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_ap_idle,
        ap_ready => grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_ap_ready,
        agg_result_num_4 => agg_result_num_4_reg_284,
        agg_result_num12_4 => agg_result_num12_4_reg_294,
        agg_result_num2_4 => agg_result_num2_4_reg_304,
        zext_ln104 => base_0_lcssa_i3336_reg_314,
        zext_ln104_14 => select_ln104_reg_1260,
        agg_result_num_5_out => grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_agg_result_num_5_out,
        agg_result_num_5_out_ap_vld => grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_agg_result_num_5_out_ap_vld,
        agg_result_num12_5_out => grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_agg_result_num12_5_out,
        agg_result_num12_5_out_ap_vld => grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_agg_result_num12_5_out_ap_vld,
        agg_result_num2_5_out => grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_agg_result_num2_5_out,
        agg_result_num2_5_out_ap_vld => grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_agg_result_num2_5_out_ap_vld);

    mux_32_32_1_1_U207 : component main_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => num_res_2_fu_134,
        din1 => num_res_2_7_fu_138,
        din2 => num_res_2_03_fu_142,
        din3 => i_21_fu_146,
        dout => tmp_117_fu_723_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                    ap_return_0_preg <= this_p_write_assign_reg_371;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                    ap_return_1_preg <= agg_result_num_7_reg_338;
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                    ap_return_2_preg <= agg_result_num12_7_reg_349;
                end if; 
            end if;
        end if;
    end process;


    ap_return_3_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_3_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                    ap_return_3_preg <= agg_result_num2_7_reg_360;
                end if; 
            end if;
        end if;
    end process;


    grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                    grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_ap_ready = ap_const_logic_1)) then 
                    grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state24) and (ap_const_lv1_1 = and_ln77_fu_790_p2))) then 
                    grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_ap_ready = ap_const_logic_1)) then 
                    grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln92_fu_804_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                    grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_ap_ready = ap_const_logic_1)) then 
                    grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    agg_result_num12_0_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp_ln187_fu_637_p2 = ap_const_lv1_1))) then 
                agg_result_num12_0_fu_154 <= p_read1;
            elsif (((i_28_load_fu_689_p1 = ap_const_lv2_1) and (icmp_ln21_fu_702_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                agg_result_num12_0_fu_154 <= tmp_117_fu_723_p5;
            end if; 
        end if;
    end process;

    agg_result_num12_4_reg_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_852_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                agg_result_num12_4_reg_294 <= grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_agg_result_num12_2_out;
            elsif (((icmp_ln92_fu_804_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                agg_result_num12_4_reg_294 <= agg_result_num12_0_load_reg_1199;
            end if; 
        end if;
    end process;

    agg_result_num12_7_reg_349_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_852_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                agg_result_num12_7_reg_349 <= grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_agg_result_num12_2_out;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state24) and (ap_const_lv1_0 = and_ln77_fu_790_p2))) then 
                agg_result_num12_7_reg_349 <= agg_result_num12_0_load_reg_1199;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                agg_result_num12_7_reg_349 <= grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_agg_result_num12_5_out;
            end if; 
        end if;
    end process;

    agg_result_num2_0_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp_ln187_fu_637_p2 = ap_const_lv1_1))) then 
                agg_result_num2_0_fu_150 <= p_read2;
            elsif ((not((i_28_load_fu_689_p1 = ap_const_lv2_1)) and not((i_28_load_fu_689_p1 = ap_const_lv2_0)) and (icmp_ln21_fu_702_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                agg_result_num2_0_fu_150 <= tmp_117_fu_723_p5;
            end if; 
        end if;
    end process;

    agg_result_num2_4_reg_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_852_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                agg_result_num2_4_reg_304 <= grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_agg_result_num2_2_out;
            elsif (((icmp_ln92_fu_804_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                agg_result_num2_4_reg_304 <= agg_result_num2_0_load_reg_1191;
            end if; 
        end if;
    end process;

    agg_result_num2_7_reg_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_852_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                agg_result_num2_7_reg_360 <= grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_agg_result_num2_2_out;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state24) and (ap_const_lv1_0 = and_ln77_fu_790_p2))) then 
                agg_result_num2_7_reg_360 <= agg_result_num2_0_load_reg_1191;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                agg_result_num2_7_reg_360 <= grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_agg_result_num2_5_out;
            end if; 
        end if;
    end process;

    agg_result_num_0_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp_ln187_fu_637_p2 = ap_const_lv1_1))) then 
                agg_result_num_0_fu_158 <= p_read;
            elsif (((i_28_load_fu_689_p1 = ap_const_lv2_0) and (icmp_ln21_fu_702_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                agg_result_num_0_fu_158 <= tmp_117_fu_723_p5;
            end if; 
        end if;
    end process;

    agg_result_num_4_reg_284_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_852_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                agg_result_num_4_reg_284 <= grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_agg_result_num_2_out;
            elsif (((icmp_ln92_fu_804_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                agg_result_num_4_reg_284 <= agg_result_num_0_load_reg_1207;
            end if; 
        end if;
    end process;

    agg_result_num_7_reg_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_852_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                agg_result_num_7_reg_338 <= grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_agg_result_num_2_out;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state24) and (ap_const_lv1_0 = and_ln77_fu_790_p2))) then 
                agg_result_num_7_reg_338 <= agg_result_num_0_load_reg_1207;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                agg_result_num_7_reg_338 <= grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_agg_result_num_5_out;
            end if; 
        end if;
    end process;

    agg_result_p_0_reg_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_852_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                agg_result_p_0_reg_326 <= tmp_fu_847_p2;
            elsif (((icmp_ln92_fu_804_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                agg_result_p_0_reg_326 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    base_0_lcssa_i3336_reg_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_852_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                base_0_lcssa_i3336_reg_314 <= base_fu_831_p2;
            elsif (((icmp_ln92_fu_804_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                base_0_lcssa_i3336_reg_314 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    i_20_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln169_fu_530_p2 = ap_const_lv1_1))) then 
                i_20_fu_130 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                i_20_fu_130 <= add_ln187_reg_1144;
            end if; 
        end if;
    end process;

    i_21_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp_ln187_fu_637_p2 = ap_const_lv1_1))) then 
                i_21_fu_146 <= ap_const_lv2_0;
            elsif (((icmp_ln21_fu_702_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                i_21_fu_146 <= add_ln21_fu_708_p2;
            end if; 
        end if;
    end process;

    i_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_94 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln169_fu_530_p2 = ap_const_lv1_0))) then 
                i_fu_94 <= add_ln169_fu_536_p2;
            end if; 
        end if;
    end process;

    this_p_write_assign_reg_371_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_852_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                this_p_write_assign_reg_371 <= tmp_fu_847_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state24) and (ap_const_lv1_0 = and_ln77_fu_790_p2))) then 
                this_p_write_assign_reg_371 <= p_reg_1182;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                this_p_write_assign_reg_371 <= agg_result_p_0_reg_326;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                add_ln187_reg_1144 <= add_ln187_fu_643_p2;
                i_27_reg_1137 <= i_20_fu_130;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                agg_result_num12_0_load_reg_1199 <= agg_result_num12_0_fu_154;
                agg_result_num2_0_load_reg_1191 <= agg_result_num2_0_fu_150;
                agg_result_num_0_load_reg_1207 <= agg_result_num_0_fu_158;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                b_1_load_10_reg_1022 <= b_1_q0;
                b_1_load_20_reg_1017 <= b_1_q1;
                b_1_load_reg_1012 <= b_1_q2;
                sub_ln173_reg_1005 <= sub_ln173_fu_503_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                b_1_load_17_reg_1090 <= b_1_q2;
                b_1_load_18_reg_1095 <= b_1_q1;
                b_1_load_19_reg_1100 <= b_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                empty_61_reg_1223 <= empty_61_fu_799_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln169_fu_530_p2 = ap_const_lv1_0))) then
                icmp_ln172_12_reg_1045 <= icmp_ln172_12_fu_554_p2;
                icmp_ln172_13_reg_1055 <= icmp_ln172_13_fu_580_p2;
                icmp_ln172_reg_1040 <= icmp_ln172_fu_542_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln172_12_reg_1045 = ap_const_lv1_1))) then
                mul_1_i_i_reg_1110 <= grp_fu_4204_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln172_13_reg_1055 = ap_const_lv1_1))) then
                mul_2_i_i_reg_1115 <= grp_fu_12729_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln172_reg_1040 = ap_const_lv1_1))) then
                mul_i_i_reg_1105 <= grp_fu_4198_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((i_27_reg_1137 = ap_const_lv2_1)) and not((i_27_reg_1137 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                num_res_2_03_fu_142 <= aux_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state22) and (i_27_reg_1137 = ap_const_lv2_1))) then
                num_res_2_7_fu_138 <= aux_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state22) and (i_27_reg_1137 = ap_const_lv2_0))) then
                num_res_2_fu_134 <= aux_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp_ln187_fu_637_p2 = ap_const_lv1_1))) then
                p_reg_1182 <= p_fu_649_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                select_ln104_reg_1260 <= select_ln104_fu_874_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                tmp_118_reg_1120 <= tmp_118_fu_610_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                tmp_122_reg_1126 <= tmp_122_fu_617_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                tmp_124_reg_1132 <= tmp_124_fu_623_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln92_fu_804_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                xor_ln92_reg_1232 <= xor_ln92_fu_810_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    zext_ln169_reg_1027(2 downto 0) <= zext_ln169_fu_512_p1(2 downto 0);
            end if;
        end if;
    end process;
    zext_ln169_reg_1027(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, icmp_ln169_fu_530_p2, ap_CS_fsm_state21, icmp_ln187_fu_637_p2, ap_CS_fsm_state23, ap_CS_fsm_state26, icmp_ln92_fu_804_p2, ap_CS_fsm_state28, grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_ap_done, grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_ap_done, grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_ap_done, icmp_ln104_fu_852_p2, ap_CS_fsm_state24, and_ln77_fu_790_p2, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state30, icmp_ln21_fu_702_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln169_fu_530_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp_ln187_fu_637_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state23 => 
                if (((icmp_ln21_fu_702_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state24) and (ap_const_lv1_0 = and_ln77_fu_790_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state25 => 
                if (((grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                if (((icmp_ln92_fu_804_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state27 => 
                if (((grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                if (((icmp_ln104_fu_852_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                if (((grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln104_fu_868_p2 <= std_logic_vector(unsigned(zext_ln104_fu_858_p1) + unsigned(ap_const_lv3_1));
    add_ln169_fu_536_p2 <= std_logic_vector(unsigned(i_fu_94) + unsigned(ap_const_lv3_1));
    add_ln172_7_fu_574_p2 <= std_logic_vector(unsigned(i_fu_94) + unsigned(ap_const_lv3_6));
    add_ln172_fu_548_p2 <= std_logic_vector(unsigned(i_fu_94) + unsigned(ap_const_lv3_7));
    add_ln173_2_fu_564_p2 <= std_logic_vector(unsigned(sub_ln173_reg_1005) + unsigned(sext_ln173_fu_560_p1));
    add_ln173_3_fu_590_p2 <= std_logic_vector(unsigned(sub_ln173_reg_1005) + unsigned(sext_ln173_1_fu_586_p1));
    add_ln173_fu_520_p2 <= std_logic_vector(unsigned(sub_ln173_reg_1005) + unsigned(zext_ln173_3_fu_516_p1));
    add_ln187_fu_643_p2 <= std_logic_vector(unsigned(i_20_fu_130) + unsigned(ap_const_lv2_1));
    add_ln21_fu_708_p2 <= std_logic_vector(unsigned(i_21_fu_146) + unsigned(ap_const_lv2_1));
    and_ln77_fu_790_p2 <= (or_ln77_fu_784_p2 and grp_fu_12733_p_dout0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;

    ap_ST_fsm_state25_blk_assign_proc : process(grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_ap_done)
    begin
        if ((grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state25_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state25_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state26_blk <= ap_const_logic_0;

    ap_ST_fsm_state27_blk_assign_proc : process(grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_ap_done)
    begin
        if ((grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state30_blk_assign_proc : process(grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_ap_done)
    begin
        if ((grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state30_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state30_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(this_p_write_assign_reg_371, ap_CS_fsm_state32, ap_return_0_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            ap_return_0 <= this_p_write_assign_reg_371;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(agg_result_num_7_reg_338, ap_CS_fsm_state32, ap_return_1_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            ap_return_1 <= agg_result_num_7_reg_338;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(agg_result_num12_7_reg_349, ap_CS_fsm_state32, ap_return_2_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            ap_return_2 <= agg_result_num12_7_reg_349;
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;


    ap_return_3_assign_proc : process(agg_result_num2_7_reg_360, ap_CS_fsm_state32, ap_return_3_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            ap_return_3 <= agg_result_num2_7_reg_360;
        else 
            ap_return_3 <= ap_return_3_preg;
        end if; 
    end process;


    aux_address0_assign_proc : process(zext_ln169_reg_1027, ap_CS_fsm_state21, ap_CS_fsm_state20, zext_ln187_fu_632_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            aux_address0 <= zext_ln187_fu_632_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            aux_address0 <= zext_ln169_reg_1027(3 - 1 downto 0);
        else 
            aux_address0 <= "XXX";
        end if; 
    end process;


    aux_ce0_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            aux_ce0 <= ap_const_logic_1;
        else 
            aux_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    aux_we0_assign_proc : process(ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            aux_we0 <= ap_const_logic_1;
        else 
            aux_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_1_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_cast6_fu_481_p1, zext_ln173_5_fu_595_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            b_1_address0 <= zext_ln173_5_fu_595_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            b_1_address0 <= p_cast6_fu_481_p1(6 - 1 downto 0);
        else 
            b_1_address0 <= "XXXXXX";
        end if; 
    end process;


    b_1_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, zext_ln193_1_fu_459_p1, zext_ln173_fu_569_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            b_1_address1 <= zext_ln173_fu_569_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            b_1_address1 <= zext_ln193_1_fu_459_p1(6 - 1 downto 0);
        else 
            b_1_address1 <= "XXXXXX";
        end if; 
    end process;


    b_1_address2_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_cast_fu_470_p1, zext_ln173_4_fu_525_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            b_1_address2 <= zext_ln173_4_fu_525_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            b_1_address2 <= p_cast_fu_470_p1(6 - 1 downto 0);
        else 
            b_1_address2 <= "XXXXXX";
        end if; 
    end process;


    b_1_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            b_1_ce0 <= ap_const_logic_1;
        else 
            b_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_1_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            b_1_ce1 <= ap_const_logic_1;
        else 
            b_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    b_1_ce2_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            b_1_ce2 <= ap_const_logic_1;
        else 
            b_1_ce2 <= ap_const_logic_0;
        end if; 
    end process;

    base_fu_831_p2 <= std_logic_vector(unsigned(sub_ln92_fu_826_p2) + unsigned(ap_const_lv2_1));
    bitcast_ln77_fu_755_p1 <= agg_result_num_0_load_reg_1207;
    empty_57_fu_475_p2 <= std_logic_vector(unsigned(sub_ln193_fu_453_p2) + unsigned(ap_const_lv6_2));
    empty_61_fu_799_p1 <= grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_idx_tmp_out(2 - 1 downto 0);
    empty_fu_464_p2 <= std_logic_vector(unsigned(sub_ln193_fu_453_p2) + unsigned(ap_const_lv6_1));
    grp_fu_12725_p_ce <= ap_const_logic_1;
    grp_fu_12725_p_din0 <= grp_fu_419_p0;
    grp_fu_12725_p_din1 <= grp_fu_419_p1;
    grp_fu_12725_p_opcode <= ap_const_lv2_0;
    grp_fu_12729_p_ce <= ap_const_logic_1;
    grp_fu_12729_p_din0 <= b_1_load_19_reg_1100;
    grp_fu_12729_p_din1 <= b_1_load_10_reg_1022;
    grp_fu_12733_p_ce <= ap_const_logic_1;
    grp_fu_12733_p_din0 <= agg_result_num_0_fu_158;
    grp_fu_12733_p_din1 <= ap_const_lv32_0;
    grp_fu_12733_p_opcode <= ap_const_lv5_1;

    grp_fu_1274_ce_assign_proc : process(grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_grp_fu_1274_p_ce, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_1274_ce <= grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_grp_fu_1274_p_ce;
        else 
            grp_fu_1274_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_4198_p_ce <= ap_const_logic_1;
    grp_fu_4198_p_din0 <= b_1_load_17_reg_1090;
    grp_fu_4198_p_din1 <= b_1_load_20_reg_1017;

    grp_fu_419_p0_assign_proc : process(mul_i_i_reg_1105, tmp_118_reg_1120, tmp_122_reg_1126, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_419_p0 <= tmp_122_reg_1126;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_419_p0 <= tmp_118_reg_1120;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_419_p0 <= mul_i_i_reg_1105;
        else 
            grp_fu_419_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_419_p1_assign_proc : process(mul_1_i_i_reg_1110, mul_2_i_i_reg_1115, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_419_p1 <= mul_2_i_i_reg_1115;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_419_p1 <= mul_1_i_i_reg_1110;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_419_p1 <= ap_const_lv32_0;
        else 
            grp_fu_419_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_4204_p_ce <= ap_const_logic_1;
    grp_fu_4204_p_din0 <= b_1_load_18_reg_1095;
    grp_fu_4204_p_din1 <= b_1_load_reg_1012;
    grp_fu_4235_p_ce <= grp_fu_1274_ce;
    grp_fu_4235_p_din0 <= grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_grp_fu_1274_p_din0;
    grp_fu_4235_p_din1 <= grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_grp_fu_1274_p_din1;
    grp_fu_4235_p_opcode <= grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_grp_fu_1274_p_opcode;
    grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_ap_start <= grp_mul_body_Pipeline_VITIS_LOOP_104_3_fu_403_ap_start_reg;
    grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_ap_start <= grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_ap_start_reg;
    grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_ap_start <= grp_mul_body_Pipeline_VITIS_LOOP_92_2_fu_391_ap_start_reg;
    i_28_load_fu_689_p1 <= i_21_fu_146;
    icmp_ln104_7_fu_862_p2 <= "0" when (base_0_lcssa_i3336_reg_314 = ap_const_lv2_3) else "1";
    icmp_ln104_fu_852_p2 <= "1" when (base_fu_831_p2 = ap_const_lv2_3) else "0";
    icmp_ln169_fu_530_p2 <= "1" when (i_fu_94 = ap_const_lv3_5) else "0";
    icmp_ln172_12_fu_554_p2 <= "1" when (unsigned(add_ln172_fu_548_p2) < unsigned(ap_const_lv3_3)) else "0";
    icmp_ln172_13_fu_580_p2 <= "1" when (unsigned(add_ln172_7_fu_574_p2) < unsigned(ap_const_lv3_3)) else "0";
    icmp_ln172_fu_542_p2 <= "1" when (unsigned(i_fu_94) < unsigned(ap_const_lv3_3)) else "0";
    icmp_ln187_fu_637_p2 <= "1" when (i_20_fu_130 = ap_const_lv2_3) else "0";
    icmp_ln21_fu_702_p2 <= "1" when (i_21_fu_146 = ap_const_lv2_3) else "0";
    icmp_ln77_7_fu_778_p2 <= "1" when (trunc_ln77_fu_768_p1 = ap_const_lv23_0) else "0";
    icmp_ln77_fu_772_p2 <= "0" when (tmp_s_fu_758_p4 = ap_const_lv8_FF) else "1";
    icmp_ln92_fu_804_p2 <= "1" when (unsigned(grp_mul_body_Pipeline_VITIS_LOOP_84_1_fu_383_idx_tmp_out) < unsigned(ap_const_lv32_3)) else "0";
    or_ln77_fu_784_p2 <= (icmp_ln77_fu_772_p2 or icmp_ln77_7_fu_778_p2);
    p_cast6_fu_481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_57_fu_475_p2),64));
    p_cast_fu_470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_fu_464_p2),64));
    p_fu_649_p2 <= std_logic_vector(unsigned(b_p_read) + unsigned(this_p_read));
    select_ln104_fu_874_p3 <= 
        ap_const_lv3_3 when (icmp_ln104_7_fu_862_p2(0) = '1') else 
        add_ln104_fu_868_p2;
        sext_ln100_fu_843_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln100_fu_837_p2),32));

        sext_ln173_1_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln172_7_fu_574_p2),6));

        sext_ln173_fu_560_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln172_fu_548_p2),6));

    sub_ln173_fu_503_p2 <= std_logic_vector(unsigned(tmp_115_fu_495_p3) - unsigned(zext_ln173_1_fu_491_p1));
    sub_ln193_fu_453_p2 <= std_logic_vector(unsigned(tmp_114_fu_445_p3) - unsigned(zext_ln193_fu_441_p1));
    sub_ln92_fu_826_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(empty_61_reg_1223));
    tmp_114_fu_445_p3 <= (b_1_offset & ap_const_lv2_0);
    tmp_115_fu_495_p3 <= (this_1_offset & ap_const_lv2_0);
    tmp_118_fu_610_p3 <= 
        grp_fu_12725_p_dout0 when (icmp_ln172_reg_1040(0) = '1') else 
        ap_const_lv32_0;
    tmp_122_fu_617_p3 <= 
        grp_fu_12725_p_dout0 when (icmp_ln172_12_reg_1045(0) = '1') else 
        tmp_118_reg_1120;
    tmp_124_fu_623_p3 <= 
        grp_fu_12725_p_dout0 when (icmp_ln172_13_reg_1055(0) = '1') else 
        tmp_122_reg_1126;
    tmp_fu_847_p2 <= std_logic_vector(signed(sext_ln100_fu_843_p1) + signed(p_reg_1182));
    tmp_s_fu_758_p4 <= bitcast_ln77_fu_755_p1(30 downto 23);
    trunc_ln77_fu_768_p1 <= bitcast_ln77_fu_755_p1(23 - 1 downto 0);
    xor_ln100_fu_837_p2 <= (sub_ln92_fu_826_p2 xor ap_const_lv2_2);
    xor_ln92_fu_810_p2 <= (empty_61_fu_799_p1 xor ap_const_lv2_3);
    zext_ln104_fu_858_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(base_0_lcssa_i3336_reg_314),3));
    zext_ln169_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_94),64));
    zext_ln173_1_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(this_1_offset),6));
    zext_ln173_3_fu_516_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_94),6));
    zext_ln173_4_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln173_fu_520_p2),64));
    zext_ln173_5_fu_595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln173_3_fu_590_p2),64));
    zext_ln173_fu_569_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln173_2_fu_564_p2),64));
    zext_ln187_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_20_fu_130),64));
    zext_ln193_1_fu_459_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln193_fu_453_p2),64));
    zext_ln193_fu_441_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_1_offset),6));
end behav;
