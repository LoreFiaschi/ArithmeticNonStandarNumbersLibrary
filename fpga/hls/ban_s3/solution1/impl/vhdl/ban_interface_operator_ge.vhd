-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ban_interface_operator_ge is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    n : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read : IN STD_LOGIC_VECTOR (127 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of ban_interface_operator_ge is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_7E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111110";
    constant ap_const_lv32_76 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln27_fu_134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_738 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln27_fu_150_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln27_1_fu_208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_1_reg_754 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_2_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_2_reg_760 : STD_LOGIC_VECTOR (0 downto 0);
    signal pl_reg_767 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln251_fu_240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln251_reg_773 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln32_fu_256_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln32_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln32_reg_785 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln32_4_fu_310_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln32_4_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln32_4_reg_797 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln27_fu_130_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln27_2_fu_140_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_1_fu_178_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_158_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln27_6_fu_168_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln27_4_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_3_fu_196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_182_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln27_1_fu_192_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln27_6_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_5_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln5_fu_246_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_262_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln32_8_fu_272_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln32_8_fu_288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln32_4_fu_300_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_316_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln32_9_fu_326_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln32_10_fu_342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_9_fu_336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal and_ln27_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_78_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln27_2_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln27_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_83_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_1_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln251_1_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_88_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln32_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_93_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_98_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_2_fu_407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_3_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln251_3_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln251_1_fu_429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln251_2_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_4_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln251_3_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln32_1_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln32_5_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln32_4_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln32_6_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln251_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_8_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_7_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_9_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln251_4_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln32_7_fu_491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln251_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_10_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln247_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln251_2_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_11_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln251_5_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln32_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln32_2_fu_551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln32_5_fu_557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln247_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln32_8_fu_563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln247_1_fu_574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln247_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln247_2_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln251_fu_543_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln247_1_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_12_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln247_4_fu_603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_13_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_5_fu_458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln251_6_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_14_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln247_3_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_15_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln251_4_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln251_7_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln251_8_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln251_5_fu_663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_6_fu_464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_18_fu_675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_17_fu_669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_19_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_16_fu_657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln251_6_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_21_fu_705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_20_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_22_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln251_9_fu_687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln251_7_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln251_23_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component ban_interface_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    fcmp_32ns_32ns_1_2_no_dsp_1_U1 : component ban_interface_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => bitcast_ln27_fu_150_p1,
        din1 => n,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_1,
        dout => grp_fu_78_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U2 : component ban_interface_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => bitcast_ln27_fu_150_p1,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_83_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U3 : component ban_interface_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => bitcast_ln32_fu_256_p1,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_1,
        dout => grp_fu_88_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U4 : component ban_interface_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => bitcast_ln32_4_fu_310_p1,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_1,
        dout => grp_fu_93_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U5 : component ban_interface_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => n,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_98_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U6 : component ban_interface_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => n,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_1,
        dout => grp_fu_104_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U7 : component ban_interface_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => bitcast_ln27_fu_150_p1,
        din1 => n,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_110_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U8 : component ban_interface_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => bitcast_ln32_fu_256_p1,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_115_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U9 : component ban_interface_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => bitcast_ln32_4_fu_310_p1,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_120_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U10 : component ban_interface_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => bitcast_ln27_fu_150_p1,
        din1 => n,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_5,
        dout => grp_fu_125_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_return_preg <= and_ln251_23_fu_723_p2;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                icmp_ln251_reg_773 <= icmp_ln251_fu_240_p2;
                icmp_ln27_reg_738 <= icmp_ln27_fu_134_p2;
                or_ln27_1_reg_754 <= or_ln27_1_fu_208_p2;
                or_ln27_2_reg_760 <= or_ln27_2_fu_226_p2;
                or_ln32_4_reg_797 <= or_ln32_4_fu_348_p2;
                or_ln32_reg_785 <= or_ln32_fu_294_p2;
                pl_reg_767 <= p_read(31 downto 31);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    and_ln247_1_fu_574_p2 <= (xor_ln247_fu_569_p2 and and_ln251_10_fu_526_p2);
    and_ln247_2_fu_586_p2 <= (or_ln247_fu_580_p2 and icmp_ln27_reg_738);
    and_ln247_3_fu_597_p2 <= (xor_ln247_1_fu_591_p2 and select_ln251_fu_543_p3);
    and_ln247_4_fu_603_p2 <= (xor_ln32_1_fu_474_p2 and or_ln247_fu_580_p2);
    and_ln247_fu_532_p2 <= (pl_reg_767 and and_ln251_10_fu_526_p2);
    and_ln251_10_fu_526_p2 <= (or_ln27_fu_370_p2 and or_ln251_fu_386_p2);
    and_ln251_11_fu_537_p2 <= (or_ln251_2_fu_453_p2 and and_ln247_fu_532_p2);
    and_ln251_12_fu_609_p2 <= (xor_ln32_1_fu_474_p2 and and_ln247_fu_532_p2);
    and_ln251_13_fu_615_p2 <= (and_ln251_fu_435_p2 and and_ln251_12_fu_609_p2);
    and_ln251_14_fu_627_p2 <= (or_ln251_6_fu_621_p2 and and_ln251_5_fu_458_p2);
    and_ln251_15_fu_639_p2 <= (grp_fu_125_p2 and and_ln27_fu_354_p2);
    and_ln251_16_fu_657_p2 <= (or_ln251_8_fu_651_p2 and or_ln251_7_fu_633_p2);
    and_ln251_17_fu_669_p2 <= (xor_ln251_5_fu_663_p2 and and_ln27_2_fu_358_p2);
    and_ln251_18_fu_675_p2 <= (or_ln251_6_fu_621_p2 and and_ln251_6_fu_464_p2);
    and_ln251_19_fu_681_p2 <= (and_ln251_18_fu_675_p2 and and_ln251_17_fu_669_p2);
    and_ln251_1_fu_375_p2 <= (or_ln27_1_reg_754 and grp_fu_83_p2);
    and_ln251_20_fu_699_p2 <= (xor_ln251_6_fu_693_p2 and and_ln251_17_fu_669_p2);
    and_ln251_21_fu_705_p2 <= (xor_ln32_fu_396_p2 and or_ln251_6_fu_621_p2);
    and_ln251_22_fu_711_p2 <= (and_ln251_21_fu_705_p2 and and_ln251_20_fu_699_p2);
    and_ln251_23_fu_723_p2 <= (xor_ln251_7_fu_717_p2 and or_ln251_9_fu_687_p2);
    and_ln251_2_fu_407_p2 <= (or_ln27_2_reg_760 and grp_fu_98_p2);
    and_ln251_3_fu_418_p2 <= (or_ln27_2_reg_760 and grp_fu_104_p2);
    and_ln251_4_fu_441_p2 <= (and_ln251_3_fu_418_p2 and and_ln251_1_fu_375_p2);
    and_ln251_5_fu_458_p2 <= (grp_fu_110_p2 and and_ln27_fu_354_p2);
    and_ln251_6_fu_464_p2 <= (or_ln32_reg_785 and grp_fu_115_p2);
    and_ln251_7_fu_469_p2 <= (or_ln32_4_reg_797 and grp_fu_120_p2);
    and_ln251_8_fu_502_p2 <= (xor_ln251_fu_497_p2 and and_ln251_1_fu_375_p2);
    and_ln251_9_fu_508_p2 <= (or_ln27_fu_370_p2 and and_ln251_8_fu_502_p2);
    and_ln251_fu_435_p2 <= (xor_ln251_2_fu_412_p2 and or_ln251_1_fu_429_p2);
    and_ln27_2_fu_358_p2 <= (grp_fu_78_p2 and and_ln27_fu_354_p2);
    and_ln27_fu_354_p2 <= (or_ln27_2_reg_760 and or_ln27_1_reg_754);
    and_ln32_4_fu_402_p2 <= (or_ln32_4_reg_797 and grp_fu_93_p2);
    and_ln32_5_fu_479_p2 <= (xor_ln32_1_fu_474_p2 and and_ln27_2_fu_358_p2);
    and_ln32_6_fu_485_p2 <= (and_ln32_fu_391_p2 and and_ln32_5_fu_479_p2);
    and_ln32_7_fu_491_p2 <= (and_ln32_6_fu_485_p2 and and_ln32_4_fu_402_p2);
    and_ln32_8_fu_563_p2 <= (or_ln32_5_fu_557_p2 and and_ln32_5_fu_479_p2);
    and_ln32_fu_391_p2 <= (or_ln32_reg_785 and grp_fu_88_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_CS_fsm_state2, and_ln251_23_fu_723_p2, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_return <= and_ln251_23_fu_723_p2;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    bitcast_ln27_1_fu_178_p1 <= n;
    bitcast_ln27_fu_150_p1 <= trunc_ln27_2_fu_140_p4;
    bitcast_ln32_4_fu_310_p1 <= trunc_ln32_4_fu_300_p4;
    bitcast_ln32_fu_256_p1 <= trunc_ln5_fu_246_p4;
    icmp_ln251_fu_240_p2 <= "1" when (signed(trunc_ln27_fu_130_p1) < signed(ap_const_lv32_1)) else "0";
    icmp_ln27_3_fu_196_p2 <= "0" when (tmp_s_fu_158_p4 = ap_const_lv8_FF) else "1";
    icmp_ln27_4_fu_202_p2 <= "1" when (trunc_ln27_6_fu_168_p4 = ap_const_lv23_0) else "0";
    icmp_ln27_5_fu_214_p2 <= "0" when (tmp_7_fu_182_p4 = ap_const_lv8_FF) else "1";
    icmp_ln27_6_fu_220_p2 <= "1" when (trunc_ln27_1_fu_192_p1 = ap_const_lv23_0) else "0";
    icmp_ln27_fu_134_p2 <= "0" when (trunc_ln27_fu_130_p1 = ap_const_lv32_0) else "1";
    icmp_ln32_10_fu_342_p2 <= "1" when (trunc_ln32_9_fu_326_p4 = ap_const_lv23_0) else "0";
    icmp_ln32_8_fu_288_p2 <= "1" when (trunc_ln32_8_fu_272_p4 = ap_const_lv23_0) else "0";
    icmp_ln32_9_fu_336_p2 <= "0" when (tmp_3_fu_316_p4 = ap_const_lv8_FF) else "1";
    icmp_ln32_fu_282_p2 <= "0" when (tmp_1_fu_262_p4 = ap_const_lv8_FF) else "1";
    or_ln247_fu_580_p2 <= (and_ln32_8_fu_563_p2 or and_ln247_1_fu_574_p2);
    or_ln251_1_fu_429_p2 <= (xor_ln251_3_fu_423_p2 or xor_ln251_1_fu_380_p2);
    or_ln251_2_fu_453_p2 <= (or_ln251_3_fu_447_p2 or icmp_ln27_reg_738);
    or_ln251_3_fu_447_p2 <= (and_ln251_4_fu_441_p2 or and_ln251_2_fu_407_p2);
    or_ln251_4_fu_514_p2 <= (and_ln251_9_fu_508_p2 or and_ln251_7_fu_469_p2);
    or_ln251_5_fu_520_p2 <= (or_ln251_4_fu_514_p2 or and_ln32_7_fu_491_p2);
    or_ln251_6_fu_621_p2 <= (and_ln251_13_fu_615_p2 or and_ln247_4_fu_603_p2);
    or_ln251_7_fu_633_p2 <= (and_ln251_14_fu_627_p2 or and_ln247_3_fu_597_p2);
    or_ln251_8_fu_651_p2 <= (xor_ln251_4_fu_645_p2 or and_ln251_15_fu_639_p2);
    or_ln251_9_fu_687_p2 <= (and_ln251_19_fu_681_p2 or and_ln251_16_fu_657_p2);
    or_ln251_fu_386_p2 <= (xor_ln251_1_fu_380_p2 or icmp_ln251_reg_773);
    or_ln27_1_fu_208_p2 <= (icmp_ln27_4_fu_202_p2 or icmp_ln27_3_fu_196_p2);
    or_ln27_2_fu_226_p2 <= (icmp_ln27_6_fu_220_p2 or icmp_ln27_5_fu_214_p2);
    or_ln27_fu_370_p2 <= (xor_ln27_fu_364_p2 or icmp_ln27_reg_738);
    or_ln32_4_fu_348_p2 <= (icmp_ln32_9_fu_336_p2 or icmp_ln32_10_fu_342_p2);
    or_ln32_5_fu_557_p2 <= (xor_ln32_fu_396_p2 or xor_ln32_2_fu_551_p2);
    or_ln32_fu_294_p2 <= (icmp_ln32_fu_282_p2 or icmp_ln32_8_fu_288_p2);
    select_ln251_fu_543_p3 <= 
        or_ln251_3_fu_447_p2 when (and_ln251_11_fu_537_p2(0) = '1') else 
        or_ln251_5_fu_520_p2;
    tmp_1_fu_262_p4 <= p_read(94 downto 87);
    tmp_3_fu_316_p4 <= p_read(126 downto 119);
    tmp_7_fu_182_p4 <= bitcast_ln27_1_fu_178_p1(30 downto 23);
    tmp_s_fu_158_p4 <= p_read(62 downto 55);
    trunc_ln27_1_fu_192_p1 <= bitcast_ln27_1_fu_178_p1(23 - 1 downto 0);
    trunc_ln27_2_fu_140_p4 <= p_read(63 downto 32);
    trunc_ln27_6_fu_168_p4 <= p_read(54 downto 32);
    trunc_ln27_fu_130_p1 <= p_read(32 - 1 downto 0);
    trunc_ln32_4_fu_300_p4 <= p_read(127 downto 96);
    trunc_ln32_8_fu_272_p4 <= p_read(86 downto 64);
    trunc_ln32_9_fu_326_p4 <= p_read(118 downto 96);
    trunc_ln5_fu_246_p4 <= p_read(95 downto 64);
    xor_ln247_1_fu_591_p2 <= (ap_const_lv1_1 xor and_ln247_2_fu_586_p2);
    xor_ln247_fu_569_p2 <= (pl_reg_767 xor ap_const_lv1_1);
    xor_ln251_1_fu_380_p2 <= (ap_const_lv1_1 xor and_ln251_1_fu_375_p2);
    xor_ln251_2_fu_412_p2 <= (ap_const_lv1_1 xor and_ln251_2_fu_407_p2);
    xor_ln251_3_fu_423_p2 <= (ap_const_lv1_1 xor and_ln251_3_fu_418_p2);
    xor_ln251_4_fu_645_p2 <= (or_ln251_6_fu_621_p2 xor ap_const_lv1_1);
    xor_ln251_5_fu_663_p2 <= (ap_const_lv1_1 xor and_ln251_5_fu_458_p2);
    xor_ln251_6_fu_693_p2 <= (ap_const_lv1_1 xor and_ln251_6_fu_464_p2);
    xor_ln251_7_fu_717_p2 <= (ap_const_lv1_1 xor and_ln251_22_fu_711_p2);
    xor_ln251_fu_497_p2 <= (icmp_ln251_reg_773 xor ap_const_lv1_1);
    xor_ln27_fu_364_p2 <= (ap_const_lv1_1 xor and_ln27_2_fu_358_p2);
    xor_ln32_1_fu_474_p2 <= (icmp_ln27_reg_738 xor ap_const_lv1_1);
    xor_ln32_2_fu_551_p2 <= (ap_const_lv1_1 xor and_ln32_4_fu_402_p2);
    xor_ln32_fu_396_p2 <= (ap_const_lv1_1 xor and_ln32_fu_391_p2);
end behav;
